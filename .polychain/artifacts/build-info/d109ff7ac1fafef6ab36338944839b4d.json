{"id":"d109ff7ac1fafef6ab36338944839b4d","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208, uint208) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(Trace208 storage self, uint48 key, uint208 value) internal returns (uint208, uint208) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint208[] storage self, uint48 key, uint208 value) private returns (uint208, uint208) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint208 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/PolymathAxons.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\n\ncontract PolymathAxons is ERC20, ERC20Pausable, Ownable, ERC20Permit, ERC20Votes {\n    constructor(address initialOwner)\n        ERC20(\"PolymathAxons\", \"PLYXNS\")\n        Ownable(initialOwner)\n        ERC20Permit(\"PolymathAxons\")\n    {\n        _mint(msg.sender, 1000 * 10 ** decimals());\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable, ERC20Votes)\n    {\n        super._update(from, to, value);\n    }\n\n    function nonces(address owner)\n        public\n        view\n        override(ERC20Permit, Nonces)\n        returns (uint256)\n    {\n        return super.nonces(owner);\n    }\n}"},"contracts/PolymathSigils.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @custom:security-contact jeffrey@jeffreyallanbrown.com\ncontract PolymathSigils is ERC721, ERC721URIStorage, Ownable {\n    uint256 private _nextTokenId;\n\n    constructor(address initialOwner)\n        ERC721(\"PolymathSigils\", \"PLYSGLS\")\n        Ownable(initialOwner)\n    {}\n\n    function safeMint(address to, string memory uri) public onlyOwner {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3292],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":3293,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,3292],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"},"id":1},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[9230],"Context":[3292],"ECDSA":[4407],"EIP712":[4634],"IERC5805":[841],"Nonces":[3360],"SafeCast":[7553],"Time":[9505],"Votes":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":842,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3293,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3361,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":4635,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":9231,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":7554,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":4408,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":9506,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4634,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":841,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":777,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[777,841,230,856,3360,4634,830,3292],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":9230,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"1981:20:2"},"referencedDeclaration":8192,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":777,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":777,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":777,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"2231:20:2"},"referencedDeclaration":8192,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":777,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"2288:20:2"},"referencedDeclaration":8192,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[849],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9505_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9265,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":777,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[855],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9505_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9265,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":777,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[181],"body":{"id":333,"nodeType":"Block","src":"3475:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":327,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3492:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":329,"indexExpression":{"id":328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3513:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8417,"src":"3492:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":326,"id":332,"nodeType":"Return","src":"3485:45:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"3428:7:2","nodeType":"VariableDeclaration","scope":334,"src":"3420:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3466:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:2"},"scope":777,"src":"3402:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":369,"nodeType":"Block","src":"4018:268:2","statements":[{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:2","nodeType":"VariableDeclaration","scope":369,"src":"4028:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":344,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":348,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4075:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":350,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4088:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"4071:115:2","trueBody":{"id":357,"nodeType":"Block","src":"4106:80:2","statements":[{"errorCall":{"arguments":[{"id":353,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4147:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":354,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4158:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4127:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"4120:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":365,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4268:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"4250:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"4250:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":359,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4202:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":361,"indexExpression":{"id":360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4223:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8387,"src":"4202:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":343,"id":368,"nodeType":"Return","src":"4195:84:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3543:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:2","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"3952:7:2","nodeType":"VariableDeclaration","scope":370,"src":"3944:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:2","nodeType":"VariableDeclaration","scope":370,"src":"3961:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4009:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:2"},"scope":777,"src":"3922:364:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":401,"nodeType":"Block","src":"5007:256:2","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:2","nodeType":"VariableDeclaration","scope":401,"src":"5017:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":378,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":382,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5043:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5064:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":384,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5077:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"nodeType":"IfStatement","src":"5060:115:2","trueBody":{"id":391,"nodeType":"Block","src":"5095:80:2","statements":[{"errorCall":{"arguments":[{"id":387,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5136:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":388,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5147:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":386,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5116:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"5109:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":397,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"5227:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"5227:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":393,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5191:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8387,"src":"5191:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":377,"id":400,"nodeType":"Return","src":"5184:72:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"4292:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:2","nodeType":"VariableDeclaration","scope":402,"src":"4950:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"4998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:2"},"scope":777,"src":"4922:341:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":412,"nodeType":"Block","src":"5407:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":408,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5424:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8417,"src":"5424:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":407,"id":411,"nodeType":"Return","src":"5417:33:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"5269:66:2","text":" @dev Returns the current total supply of votes."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:2","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5364:2:2"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"5398:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:2"},"scope":777,"src":"5340:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":425,"nodeType":"Block","src":"5613:43:2","statements":[{"expression":{"baseExpression":{"id":421,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5630:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":423,"indexExpression":{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"5623:26:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5463:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"5566:7:2","nodeType":"VariableDeclaration","scope":426,"src":"5558:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"5604:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:2"},"scope":777,"src":"5539:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":442,"nodeType":"Block","src":"5790:86:2","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"5808:7:2","nodeType":"VariableDeclaration","scope":442,"src":"5800:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5818:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:2"},{"expression":{"arguments":[{"id":438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5850:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5859:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":437,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5840:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5840:29:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5662:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":443,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:2","nodeType":"VariableDeclaration","scope":443,"src":"5756:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"5790:0:2"},"scope":777,"src":"5738:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":499,"nodeType":"Block","src":"6127:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":461,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6159:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"6137:91:2","trueBody":{"id":467,"nodeType":"Block","src":"6167:61:2","statements":[{"errorCall":{"arguments":[{"id":464,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6210:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6188:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"RevertStatement","src":"6181:36:2"}]}},{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"signer","nameLocation":"6245:6:2","nodeType":"VariableDeclaration","scope":499,"src":"6237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":477,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6319:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":478,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6340:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6351:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":480,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6358:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":473,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"6281:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6381:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6396:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6411:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":471,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"6254:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4407_$","typeString":"type(library ECDSA)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4357,"src":"6254:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:2"},{"expression":{"arguments":[{"id":490,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6449:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6457:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"6432:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"6432:31:2"},{"expression":{"arguments":[{"id":495,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6483:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6491:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6473:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"6473:28:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"5882:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:2","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:2","nodeType":"VariableDeclaration","scope":500,"src":"5986:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:2","nodeType":"VariableDeclaration","scope":500,"src":"6013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:2","nodeType":"VariableDeclaration","scope":500,"src":"6036:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"v","nameLocation":"6066:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6060:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":451,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"r","nameLocation":"6085:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6077:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"s","nameLocation":"6104:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6096:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"6127:0:2"},"scope":777,"src":"5954:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":534,"nodeType":"Block","src":"6758:240:2","statements":[{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:2","nodeType":"VariableDeclaration","scope":534,"src":"6768:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"arguments":[{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":510,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6790:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6818:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":516,"indexExpression":{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6829:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6840:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"6818:31:2"},{"eventCall":{"arguments":[{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6881:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6890:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6865:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"EmitStatement","src":"6860:53:2"},{"expression":{"arguments":[{"id":527,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6942:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6955:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6982:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":526,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6923:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"6923:68:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"6514:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"account","nameLocation":"6713:7:2","nodeType":"VariableDeclaration","scope":535,"src":"6705:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:2","nodeType":"VariableDeclaration","scope":535,"src":"6722:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"6758:0:2"},"scope":777,"src":"6686:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"7321:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7335:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:2","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"7331:107:2","trueBody":{"id":560,"nodeType":"Block","src":"7355:83:2","statements":[{"expression":{"arguments":[{"id":552,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7375:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":553,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7394:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7419:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"7400:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5993,"src":"7400:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":551,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7369:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8192_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":559,"nodeType":"ExpressionStatement","src":"7369:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7451:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:2","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"nodeType":"IfStatement","src":"7447:110:2","trueBody":{"id":577,"nodeType":"Block","src":"7469:88:2","statements":[{"expression":{"arguments":[{"id":569,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7489:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":570,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7508:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7538:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"7519:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5993,"src":"7519:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":568,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7483:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8192_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":576,"nodeType":"ExpressionStatement","src":"7483:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":581,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7595:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":580,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7585:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7602:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7566:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"7566:58:2"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"7004:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"from","nameLocation":"7270:4:2","nodeType":"VariableDeclaration","scope":590,"src":"7262:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"to","nameLocation":"7284:2:2","nodeType":"VariableDeclaration","scope":590,"src":"7276:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"7296:6:2","nodeType":"VariableDeclaration","scope":590,"src":"7288:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"7321:0:2"},"scope":777,"src":"7232:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"7795:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7809:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7817:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7809:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7823:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7832:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7823:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7809:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"IfStatement","src":"7805:686:2","trueBody":{"id":665,"nodeType":"Block","src":"7835:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7853:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7869:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7861:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7861:7:2","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7861:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7853:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"7849:315:2","trueBody":{"id":634,"nodeType":"Block","src":"7873:291:2","statements":[{"assignments":[614,616],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"oldValue","nameLocation":"7900:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7892:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"newValue","nameLocation":"7918:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7910:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7910:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[{"baseExpression":{"id":618,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7957:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":620,"indexExpression":{"id":619,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7978:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":621,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8005:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"8036:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8045:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5993,"src":"8036:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":617,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7930:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8192_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7891:189:2"},{"eventCall":{"arguments":[{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8124:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"8130:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":631,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"8140:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8103:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"EmitStatement","src":"8098:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8181:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:2","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":664,"nodeType":"IfStatement","src":"8177:304:2","trueBody":{"id":663,"nodeType":"Block","src":"8199:282:2","statements":[{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"oldValue","nameLocation":"8226:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"newValue","nameLocation":"8244:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[{"baseExpression":{"id":647,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8283:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8304:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":650,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"8329:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8374:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"8355:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8364:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5993,"src":"8355:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8355:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":646,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8256:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8192_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8217:182:2"},{"eventCall":{"arguments":[{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8443:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8447:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8457:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8422:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"EmitStatement","src":"8417:49:2"}]}}]}}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"7637:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:2","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"from","nameLocation":"7753:4:2","nodeType":"VariableDeclaration","scope":668,"src":"7745:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"7767:2:2","nodeType":"VariableDeclaration","scope":668,"src":"7759:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"7779:6:2","nodeType":"VariableDeclaration","scope":668,"src":"7771:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"7795:0:2"},"scope":777,"src":"7717:780:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":685,"nodeType":"Block","src":"8653:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":678,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8688:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8709:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8688:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8718:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":8480,"src":"8688:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"8670:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6609,"src":"8670:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8670:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":675,"id":684,"nodeType":"Return","src":"8663:64:2"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8503:64:2","text":" @dev Get number of checkpoints for `account`."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8581:15:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"8605:7:2","nodeType":"VariableDeclaration","scope":686,"src":"8597:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8596:17:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"8645:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":673,"name":"uint32","nodeType":"ElementaryTypeName","src":"8645:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8644:8:2"},"scope":777,"src":"8572:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"8949:61:2","statements":[{"expression":{"arguments":[{"id":701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8999:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":697,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8966:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8192_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8966:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8996:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8498,"src":"8966:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8197_memory_ptr_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":696,"id":703,"nodeType":"Return","src":"8959:44:2"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"8740:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8820:12:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"account","nameLocation":"8850:7:2","nodeType":"VariableDeclaration","scope":705,"src":"8842:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"8842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"pos","nameLocation":"8874:3:2","nodeType":"VariableDeclaration","scope":705,"src":"8867:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":690,"name":"uint32","nodeType":"ElementaryTypeName","src":"8867:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8832:51:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"8915:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":694,"nodeType":"UserDefinedTypeName","pathNode":{"id":693,"name":"Checkpoints.Checkpoint208","nameLocations":["8915:11:2","8927:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"8915:25:2"},"referencedDeclaration":8197,"src":"8915:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8914:34:2"},"scope":777,"src":"8811:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"9201:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":729,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9229:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":732,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9241:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9247:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8417,"src":"9241:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8192_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":735,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9257:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":731,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9238:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9238:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":727,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9218:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9224:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":8220,"src":"9218:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8192_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$8192_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":726,"id":738,"nodeType":"Return","src":"9211:53:2"}]},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9025:5:2","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"store","nameLocation":"9069:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9040:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"Checkpoints.Trace208","nameLocations":["9040:11:2","9052:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"9040:20:2"},"referencedDeclaration":8192,"src":"9040:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"op","nameLocation":"9134:2:2","nodeType":"VariableDeclaration","scope":740,"src":"9084:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":717,"nodeType":"FunctionTypeName","parameterTypes":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":709,"name":"uint208","nodeType":"ElementaryTypeName","src":"9093:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9102:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":711,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9092:18:2"},"returnParameterTypes":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9125:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":714,"name":"uint208","nodeType":"ElementaryTypeName","src":"9125:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9124:9:2"},"src":"9084:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"delta","nameLocation":"9154:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9146:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":719,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9030:135:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9183:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":722,"name":"uint208","nodeType":"ElementaryTypeName","src":"9183:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"9192:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":724,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9182:18:2"},"scope":777,"src":"9016:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":753,"nodeType":"Block","src":"9344:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"9361:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9365:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9361:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":748,"id":752,"nodeType":"Return","src":"9354:12:2"}]},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9286:4:2","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"a","nameLocation":"9299:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9291:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":741,"name":"uint208","nodeType":"ElementaryTypeName","src":"9291:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"b","nameLocation":"9310:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9302:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":743,"name":"uint208","nodeType":"ElementaryTypeName","src":"9302:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9290:22:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"9335:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":746,"name":"uint208","nodeType":"ElementaryTypeName","src":"9335:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9334:9:2"},"scope":777,"src":"9277:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":767,"nodeType":"Block","src":"9451:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9468:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9472:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9468:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":762,"id":766,"nodeType":"Return","src":"9461:12:2"}]},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9388:9:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"a","nameLocation":"9406:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9398:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":755,"name":"uint208","nodeType":"ElementaryTypeName","src":"9398:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"b","nameLocation":"9417:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9409:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":757,"name":"uint208","nodeType":"ElementaryTypeName","src":"9409:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9397:22:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"9442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":760,"name":"uint208","nodeType":"ElementaryTypeName","src":"9442:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9441:9:2"},"scope":777,"src":"9379:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"9486:72:2","text":" @dev Must return the voting units held by an account."},"id":776,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9572:15:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9588:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9587:9:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9628:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:9:2"},"scope":777,"src":"9563:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":778,"src":"1892:7747:2","usedErrors":[155,281,288,3302,3491,3493,4070,4075,4080,5808,7666],"usedEvents":[164,173,810]}],"src":"109:9531:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4744]},"id":782,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":782,"sourceUnit":4745,"src":"132:59:3","symbolAliases":[{"foreign":{"id":780,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4744],"IERC4906":[805],"IERC721":[3098]},"id":806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":783,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":782,"src":"133:38:4","symbolAliases":[{"foreign":{"id":784,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":861,"src":"172:38:4","symbolAliases":[{"foreign":{"id":786,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"180:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":789,"name":"IERC165","nameLocations":["279:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"279:7:4"},"id":790,"nodeType":"InheritanceSpecifier","src":"279:7:4"},{"baseName":{"id":791,"name":"IERC721","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3098,"src":"288:7:4"},"id":792,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"212:45:4","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":805,"linearizedBaseContracts":[805,3098,4744],"name":"IERC4906","nameLocation":"267:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"302:201:4","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":797,"name":"MetadataUpdate","nameLocation":"514:14:4","nodeType":"EventDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:4","nodeType":"VariableDeclaration","scope":797,"src":"529:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:4"},"src":"508:39:4"},{"anonymous":false,"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"553:212:4","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":804,"name":"BatchMetadataUpdate","nameLocation":"776:19:4","nodeType":"EventDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:4","nodeType":"VariableDeclaration","scope":804,"src":"796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":804,"src":"818:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:4"},"src":"770:68:4"}],"scope":806,"src":"257:583:4","usedErrors":[],"usedEvents":[797,804,2997,3006,3015]}],"src":"107:734:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[830]},"id":831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":807,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":830,"linearizedBaseContracts":[830],"name":"IERC5267","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"158:84:5","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":810,"name":"EIP712DomainChanged","nameLocation":"253:19:5","nodeType":"EventDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"272:2:5"},"src":"247:28:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"281:140:5","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":829,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:5","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"fields","nameLocation":"517:6:5","nodeType":"VariableDeclaration","scope":829,"src":"510:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":813,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"name","nameLocation":"551:4:5","nodeType":"VariableDeclaration","scope":829,"src":"537:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":815,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"version","nameLocation":"583:7:5","nodeType":"VariableDeclaration","scope":829,"src":"569:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":817,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"chainId","nameLocation":"612:7:5","nodeType":"VariableDeclaration","scope":829,"src":"604:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:5","nodeType":"VariableDeclaration","scope":829,"src":"633:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"salt","nameLocation":"680:4:5","nodeType":"VariableDeclaration","scope":829,"src":"672:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"extensions","nameLocation":"715:10:5","nodeType":"VariableDeclaration","scope":829,"src":"698:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":826,"nodeType":"ArrayTypeName","src":"698:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:5"},"scope":830,"src":"426:310:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":831,"src":"133:605:5","usedErrors":[],"usedEvents":[810]}],"src":"107:632:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[841],"IERC6372":[856],"IVotes":[230]},"id":842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":842,"sourceUnit":231,"src":"133:54:6","symbolAliases":[{"foreign":{"id":833,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":842,"sourceUnit":857,"src":"188:40:6","symbolAliases":[{"foreign":{"id":835,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"196:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":837,"name":"IERC6372","nameLocations":["252:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"252:8:6"},"id":838,"nodeType":"InheritanceSpecifier","src":"252:8:6"},{"baseName":{"id":839,"name":"IVotes","nameLocations":["262:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:6"},"id":840,"nodeType":"InheritanceSpecifier","src":"262:6:6"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":841,"linearizedBaseContracts":[841,230,856],"name":"IERC5805","nameLocation":"240:8:6","nodeType":"ContractDefinition","nodes":[],"scope":842,"src":"230:41:6","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[856]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":843,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":856,"linearizedBaseContracts":[856],"name":"IERC6372","nameLocation":"143:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"158:133:7","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":849,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:7","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"310:2:7"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"336:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":846,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:7"},"scope":856,"src":"296:48:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"350:48:7","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:7","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"475:2:7"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"501:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":852,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:7"},"scope":856,"src":"456:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":857,"src":"133:385:7","usedErrors":[],"usedEvents":[]}],"src":"107:412:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[3098]},"id":861,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":861,"sourceUnit":3099,"src":"132:52:8","symbolAliases":[{"foreign":{"id":859,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"140:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[997],"IERC20Errors":[902],"IERC721Errors":[950]},"id":998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":862,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"138:139:9","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":902,"linearizedBaseContracts":[902],"name":"IERC20Errors","nameLocation":"288:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"307:309:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":872,"name":"ERC20InsufficientBalance","nameLocation":"627:24:9","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"sender","nameLocation":"660:6:9","nodeType":"VariableDeclaration","scope":872,"src":"652:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"balance","nameLocation":"676:7:9","nodeType":"VariableDeclaration","scope":872,"src":"668:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"needed","nameLocation":"693:6:9","nodeType":"VariableDeclaration","scope":872,"src":"685:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:9"},"src":"621:80:9"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"707:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":877,"name":"ERC20InvalidSender","nameLocation":"870:18:9","nodeType":"ErrorDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"sender","nameLocation":"897:6:9","nodeType":"VariableDeclaration","scope":877,"src":"889:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:9"},"src":"864:41:9"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"911:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":882,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:9","nodeType":"ErrorDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:9","nodeType":"VariableDeclaration","scope":882,"src":"1102:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:9"},"src":"1075:45:9"},{"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"1126:345:9","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":891,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:9","nodeType":"ErrorDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"spender","nameLocation":"1517:7:9","nodeType":"VariableDeclaration","scope":891,"src":"1509:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:9","nodeType":"VariableDeclaration","scope":891,"src":"1526:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"needed","nameLocation":"1553:6:9","nodeType":"VariableDeclaration","scope":891,"src":"1545:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:9"},"src":"1476:85:9"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1567:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":896,"name":"ERC20InvalidApprover","nameLocation":"1752:20:9","nodeType":"ErrorDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"approver","nameLocation":"1781:8:9","nodeType":"VariableDeclaration","scope":896,"src":"1773:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:9"},"src":"1746:45:9"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"1797:195:9","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":901,"name":"ERC20InvalidSpender","nameLocation":"2003:19:9","nodeType":"ErrorDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"spender","nameLocation":"2031:7:9","nodeType":"VariableDeclaration","scope":901,"src":"2023:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:9"},"src":"1997:43:9"}],"scope":998,"src":"278:1764:9","usedErrors":[872,877,882,891,896,901],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2044:141:9","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":950,"linearizedBaseContracts":[950],"name":"IERC721Errors","nameLocation":"2196:13:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"2216:219:9","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":908,"name":"ERC721InvalidOwner","nameLocation":"2446:18:9","nodeType":"ErrorDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"owner","nameLocation":"2473:5:9","nodeType":"VariableDeclaration","scope":908,"src":"2465:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:9"},"src":"2440:40:9"},{"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"2486:132:9","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":913,"name":"ERC721NonexistentToken","nameLocation":"2629:22:9","nodeType":"ErrorDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:9","nodeType":"VariableDeclaration","scope":913,"src":"2652:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:9"},"src":"2623:46:9"},{"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"2675:289:9","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":922,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:9","nodeType":"ErrorDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"sender","nameLocation":"3004:6:9","nodeType":"VariableDeclaration","scope":922,"src":"2996:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:9","nodeType":"VariableDeclaration","scope":922,"src":"3012:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"owner","nameLocation":"3037:5:9","nodeType":"VariableDeclaration","scope":922,"src":"3029:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:9"},"src":"2969:75:9"},{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"3050:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":927,"name":"ERC721InvalidSender","nameLocation":"3213:19:9","nodeType":"ErrorDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"sender","nameLocation":"3241:6:9","nodeType":"VariableDeclaration","scope":927,"src":"3233:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:9"},"src":"3207:42:9"},{"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"3255:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":932,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:9","nodeType":"ErrorDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:9","nodeType":"VariableDeclaration","scope":932,"src":"3447:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:9"},"src":"3419:46:9"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"3471:247:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":939,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:9","nodeType":"ErrorDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"operator","nameLocation":"3764:8:9","nodeType":"VariableDeclaration","scope":939,"src":"3756:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:9","nodeType":"VariableDeclaration","scope":939,"src":"3774:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:9"},"src":"3723:68:9"},{"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"3797:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":944,"name":"ERC721InvalidApprover","nameLocation":"3982:21:9","nodeType":"ErrorDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"approver","nameLocation":"4012:8:9","nodeType":"VariableDeclaration","scope":944,"src":"4004:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:9"},"src":"3976:46:9"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"4028:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":949,"name":"ERC721InvalidOperator","nameLocation":"4236:21:9","nodeType":"ErrorDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"operator","nameLocation":"4266:8:9","nodeType":"VariableDeclaration","scope":949,"src":"4258:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:9"},"src":"4230:46:9"}],"scope":998,"src":"2186:2092:9","usedErrors":[908,913,922,927,932,939,944,949],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"4280:143:9","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":997,"linearizedBaseContracts":[997],"name":"IERC1155Errors","nameLocation":"4434:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"4455:361:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":962,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:9","nodeType":"ErrorDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"sender","nameLocation":"4862:6:9","nodeType":"VariableDeclaration","scope":962,"src":"4854:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"balance","nameLocation":"4878:7:9","nodeType":"VariableDeclaration","scope":962,"src":"4870:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"needed","nameLocation":"4895:6:9","nodeType":"VariableDeclaration","scope":962,"src":"4887:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:9","nodeType":"VariableDeclaration","scope":962,"src":"4903:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:9"},"src":"4821:99:9"},{"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"4926:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":967,"name":"ERC1155InvalidSender","nameLocation":"5089:20:9","nodeType":"ErrorDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"sender","nameLocation":"5118:6:9","nodeType":"VariableDeclaration","scope":967,"src":"5110:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:9"},"src":"5083:43:9"},{"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"5132:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":972,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:9","nodeType":"ErrorDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:9","nodeType":"VariableDeclaration","scope":972,"src":"5325:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:9"},"src":"5296:47:9"},{"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"5349:256:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":979,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:9","nodeType":"ErrorDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"operator","nameLocation":"5653:8:9","nodeType":"VariableDeclaration","scope":979,"src":"5645:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"owner","nameLocation":"5671:5:9","nodeType":"VariableDeclaration","scope":979,"src":"5663:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:9"},"src":"5610:68:9"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"5684:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":984,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:9","nodeType":"ErrorDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"approver","nameLocation":"5900:8:9","nodeType":"VariableDeclaration","scope":984,"src":"5892:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:9"},"src":"5863:47:9"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"5916:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":989,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:9","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"operator","nameLocation":"6155:8:9","nodeType":"VariableDeclaration","scope":989,"src":"6147:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:9"},"src":"6118:47:9"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"6171:280:9","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":996,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:9","nodeType":"ErrorDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:9","nodeType":"VariableDeclaration","scope":996,"src":"6488:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:9","nodeType":"VariableDeclaration","scope":996,"src":"6507:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:9"},"src":"6456:73:9"}],"scope":998,"src":"4424:2107:9","usedErrors":[962,967,972,979,984,989,996],"usedEvents":[]}],"src":"112:6420:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3292],"ERC20":[1512],"IERC20":[1590],"IERC20Errors":[902],"IERC20Metadata":[1936]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":999,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":1591,"src":"131:36:10","symbolAliases":[{"foreign":{"id":1000,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":1937,"src":"168:63:10","symbolAliases":[{"foreign":{"id":1002,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":3293,"src":"232:48:10","symbolAliases":[{"foreign":{"id":1004,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":998,"src":"281:65:10","symbolAliases":[{"foreign":{"id":1006,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1009,"name":"Context","nameLocations":["1428:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"1428:7:10"},"id":1010,"nodeType":"InheritanceSpecifier","src":"1428:7:10"},{"baseName":{"id":1011,"name":"IERC20","nameLocations":["1437:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1590,"src":"1437:6:10"},"id":1012,"nodeType":"InheritanceSpecifier","src":"1437:6:10"},{"baseName":{"id":1013,"name":"IERC20Metadata","nameLocations":["1445:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1936,"src":"1445:14:10"},"id":1014,"nodeType":"InheritanceSpecifier","src":"1445:14:10"},{"baseName":{"id":1015,"name":"IERC20Errors","nameLocations":["1461:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1461:12:10"},"id":1016,"nodeType":"InheritanceSpecifier","src":"1461:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"348:1052:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1512,"linearizedBaseContracts":[1512,902,1936,1590,3292],"name":"ERC20","nameLocation":"1419:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1020,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:10","nodeType":"VariableDeclaration","scope":1512,"src":"1480:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1019,"keyName":"account","keyNameLocation":"1496:7:10","keyType":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1026,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:10","nodeType":"VariableDeclaration","scope":1512,"src":"1540:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1025,"keyName":"account","keyNameLocation":"1556:7:10","keyType":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1024,"keyName":"spender","keyNameLocation":"1583:7:10","keyType":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:10","nodeType":"VariableDeclaration","scope":1512,"src":"1630:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1030,"mutability":"mutable","name":"_name","nameLocation":"1680:5:10","nodeType":"VariableDeclaration","scope":1512,"src":"1665:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1032,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:10","nodeType":"VariableDeclaration","scope":1512,"src":"1691:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1031,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1048,"nodeType":"Block","src":"1952:57:10","statements":[{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1040,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1962:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1041,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1970:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1043,"nodeType":"ExpressionStatement","src":"1962:13:10"},{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1985:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1045,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1995:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1047,"nodeType":"ExpressionStatement","src":"1985:17:10"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"1720:171:10","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1049,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"name_","nameLocation":"1922:5:10","nodeType":"VariableDeclaration","scope":1049,"src":"1908:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1034,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:10","nodeType":"VariableDeclaration","scope":1049,"src":"1929:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1036,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:10"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1952:0:10"},"scope":1512,"src":"1896:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1923],"body":{"id":1057,"nodeType":"Block","src":"2134:29:10","statements":[{"expression":{"id":1055,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2151:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1054,"id":1056,"nodeType":"Return","src":"2144:12:10"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"2015:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:10","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"2087:2:10"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"2119:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1052,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:10"},"scope":1512,"src":"2074:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1929],"body":{"id":1066,"nodeType":"Block","src":"2338:31:10","statements":[{"expression":{"id":1064,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2355:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1063,"id":1065,"nodeType":"Return","src":"2348:14:10"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"2169:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:10","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"2291:2:10"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"2323:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:10"},"scope":1512,"src":"2276:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1935],"body":{"id":1075,"nodeType":"Block","src":"3058:26:10","statements":[{"expression":{"hexValue":"3138","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1072,"id":1074,"nodeType":"Return","src":"3068:9:10"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"2375:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:10","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"3019:2:10"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"3051:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1070,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:10"},"scope":1512,"src":"3002:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1539],"body":{"id":1084,"nodeType":"Block","src":"3205:36:10","statements":[{"expression":{"id":1082,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3222:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1081,"id":1083,"nodeType":"Return","src":"3215:19:10"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"3090:49:10","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:10","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"3164:2:10"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"3196:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:10"},"scope":1512,"src":"3144:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1547],"body":{"id":1097,"nodeType":"Block","src":"3373:42:10","statements":[{"expression":{"baseExpression":{"id":1093,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3390:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1095,"indexExpression":{"id":1094,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3400:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1092,"id":1096,"nodeType":"Return","src":"3383:25:10"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"3247:47:10","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:10","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"account","nameLocation":"3326:7:10","nodeType":"VariableDeclaration","scope":1098,"src":"3318:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:10"},"returnParameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"3364:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:10"},"scope":1512,"src":"3299:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1557],"body":{"id":1121,"nodeType":"Block","src":"3685:103:10","statements":[{"assignments":[1109],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"owner","nameLocation":"3703:5:10","nodeType":"VariableDeclaration","scope":1121,"src":"3695:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1112,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1110,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3711:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:10"},{"expression":{"arguments":[{"id":1114,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3743:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3750:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3754:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3733:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"3733:27:10"},{"expression":{"hexValue":"74727565","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1107,"id":1120,"nodeType":"Return","src":"3770:11:10"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"3421:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:10","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"to","nameLocation":"3636:2:10","nodeType":"VariableDeclaration","scope":1122,"src":"3628:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"value","nameLocation":"3648:5:10","nodeType":"VariableDeclaration","scope":1122,"src":"3640:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:10"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"3679:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1105,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:10"},"scope":1512,"src":"3610:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1567],"body":{"id":1138,"nodeType":"Block","src":"3935:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1132,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3952:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1134,"indexExpression":{"id":1133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3964:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1136,"indexExpression":{"id":1135,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3971:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1131,"id":1137,"nodeType":"Return","src":"3945:34:10"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"3794:47:10","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:10","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"owner","nameLocation":"3873:5:10","nodeType":"VariableDeclaration","scope":1139,"src":"3865:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"spender","nameLocation":"3888:7:10","nodeType":"VariableDeclaration","scope":1139,"src":"3880:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:10"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"3926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:10"},"scope":1512,"src":"3846:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1577],"body":{"id":1162,"nodeType":"Block","src":"4372:107:10","statements":[{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"owner","nameLocation":"4390:5:10","nodeType":"VariableDeclaration","scope":1162,"src":"4382:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"4398:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:10"},{"expression":{"arguments":[{"id":1155,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"4429:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4436:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"4445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1403,1463],"referencedDeclaration":1403,"src":"4420:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"4420:31:10"},{"expression":{"hexValue":"74727565","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1148,"id":1161,"nodeType":"Return","src":"4461:11:10"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"3992:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:10","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"spender","nameLocation":"4318:7:10","nodeType":"VariableDeclaration","scope":1163,"src":"4310:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"value","nameLocation":"4335:5:10","nodeType":"VariableDeclaration","scope":1163,"src":"4327:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:10"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"4366:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:10"},"scope":1512,"src":"4293:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1589],"body":{"id":1194,"nodeType":"Block","src":"5132:151:10","statements":[{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"spender","nameLocation":"5150:7:10","nodeType":"VariableDeclaration","scope":1194,"src":"5142:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1179,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1177,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5160:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:10"},{"expression":{"arguments":[{"id":1181,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5198:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"5204:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5213:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1180,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"5182:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"5182:37:10"},{"expression":{"arguments":[{"id":1187,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5239:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5245:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5249:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"5229:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"5229:26:10"},{"expression":{"hexValue":"74727565","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1174,"id":1193,"nodeType":"Return","src":"5265:11:10"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"4485:549:10","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:10","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"from","nameLocation":"5069:4:10","nodeType":"VariableDeclaration","scope":1195,"src":"5061:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"to","nameLocation":"5083:2:10","nodeType":"VariableDeclaration","scope":1195,"src":"5075:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"value","nameLocation":"5095:5:10","nodeType":"VariableDeclaration","scope":1195,"src":"5087:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:10"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"5126:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:10"},"scope":1512,"src":"5039:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1241,"nodeType":"Block","src":"5725:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5739:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:10","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"5735:86:10","trueBody":{"id":1218,"nodeType":"Block","src":"5759:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:10","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1211,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"5780:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"RevertStatement","src":"5773:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5834:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:10","typeDescriptions":{}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1234,"nodeType":"IfStatement","src":"5830:86:10","trueBody":{"id":1233,"nodeType":"Block","src":"5852:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:10","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1226,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"5873:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"RevertStatement","src":"5866:39:10"}]}},{"expression":{"arguments":[{"id":1236,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5933:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5939:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5943:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1235,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"5925:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"ExpressionStatement","src":"5925:24:10"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"5289:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:10","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"from","nameLocation":"5683:4:10","nodeType":"VariableDeclaration","scope":1242,"src":"5675:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"to","nameLocation":"5697:2:10","nodeType":"VariableDeclaration","scope":1242,"src":"5689:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"5709:5:10","nodeType":"VariableDeclaration","scope":1242,"src":"5701:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:10"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5725:0:10"},"scope":1512,"src":"5656:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"6346:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6360:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:10","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1289,"nodeType":"Block","src":"6534:362:10","statements":[{"assignments":[1264],"declarations":[{"constant":false,"id":1264,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:10","nodeType":"VariableDeclaration","scope":1289,"src":"6548:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1268,"initialValue":{"baseExpression":{"id":1265,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6570:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1267,"indexExpression":{"id":1266,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6580:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6603:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6617:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"IfStatement","src":"6599:115:10","trueBody":{"id":1278,"nodeType":"Block","src":"6624:90:10","statements":[{"errorCall":{"arguments":[{"id":1273,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6674:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6680:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6693:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1272,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6649:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"RevertStatement","src":"6642:57:10"}]}},{"id":1288,"nodeType":"UncheckedBlock","src":"6727:159:10","statements":[{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1280,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6834:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1282,"indexExpression":{"id":1281,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6844:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6852:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6866:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"6834:37:10"}]}]},"id":1290,"nodeType":"IfStatement","src":"6356:540:10","trueBody":{"id":1262,"nodeType":"Block","src":"6380:148:10","statements":[{"expression":{"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1258,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6496:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6512:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1261,"nodeType":"ExpressionStatement","src":"6496:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6910:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:10","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1310,"nodeType":"Block","src":"7125:206:10","statements":[{"id":1309,"nodeType":"UncheckedBlock","src":"7139:182:10","statements":[{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1303,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7284:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1305,"indexExpression":{"id":1304,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"7294:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7301:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"7284:22:10"}]}]},"id":1311,"nodeType":"IfStatement","src":"6906:425:10","trueBody":{"id":1302,"nodeType":"Block","src":"6928:191:10","statements":[{"id":1301,"nodeType":"UncheckedBlock","src":"6942:167:10","statements":[{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1297,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"7073:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"7073:21:10"}]}]}},{"eventCall":{"arguments":[{"id":1313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7355:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"7361:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7365:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"7346:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"EmitStatement","src":"7341:30:10"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"5962:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:10","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"from","nameLocation":"6296:4:10","nodeType":"VariableDeclaration","scope":1319,"src":"6288:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"6310:2:10","nodeType":"VariableDeclaration","scope":1319,"src":"6302:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"6322:5:10","nodeType":"VariableDeclaration","scope":1319,"src":"6314:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:10"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"6346:0:10"},"scope":1512,"src":"6271:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1351,"nodeType":"Block","src":"7777:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"7791:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:10","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"nodeType":"IfStatement","src":"7787:91:10","trueBody":{"id":1340,"nodeType":"Block","src":"7814:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:10","typeDescriptions":{}}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1333,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"7835:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"RevertStatement","src":"7828:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:10","typeDescriptions":{}}},"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1347,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"7907:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"7916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1342,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"7887:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"7887:35:10"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"7384:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:10","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"account","nameLocation":"7744:7:10","nodeType":"VariableDeclaration","scope":1352,"src":"7736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"value","nameLocation":"7761:5:10","nodeType":"VariableDeclaration","scope":1352,"src":"7753:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:10"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"7777:0:10"},"scope":1512,"src":"7721:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"8303:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8317:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:10","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"IfStatement","src":"8313:89:10","trueBody":{"id":1373,"nodeType":"Block","src":"8340:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:10","typeDescriptions":{}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1366,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8361:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"RevertStatement","src":"8354:37:10"}]}},{"expression":{"arguments":[{"id":1376,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8419:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:10","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8440:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8411:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"8411:35:10"}]},"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"7935:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:10","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"account","nameLocation":"8270:7:10","nodeType":"VariableDeclaration","scope":1385,"src":"8262:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"8287:5:10","nodeType":"VariableDeclaration","scope":1385,"src":"8279:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:10"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"8303:0:10"},"scope":1512,"src":"8247:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1402,"nodeType":"Block","src":"9063:54:10","statements":[{"expression":{"arguments":[{"id":1396,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9082:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1397,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"9089:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"9098:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1395,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1403,1463],"referencedDeclaration":1463,"src":"9073:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1401,"nodeType":"ExpressionStatement","src":"9073:37:10"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"8459:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:10","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"owner","nameLocation":"9015:5:10","nodeType":"VariableDeclaration","scope":1403,"src":"9007:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"spender","nameLocation":"9030:7:10","nodeType":"VariableDeclaration","scope":1403,"src":"9022:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"value","nameLocation":"9047:5:10","nodeType":"VariableDeclaration","scope":1403,"src":"9039:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:10"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"9063:0:10"},"scope":1512,"src":"8989:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1462,"nodeType":"Block","src":"10047:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10061:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:10","typeDescriptions":{}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"IfStatement","src":"10057:89:10","trueBody":{"id":1428,"nodeType":"Block","src":"10082:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:10","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1421,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10103:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"RevertStatement","src":"10096:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10159:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:10","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1444,"nodeType":"IfStatement","src":"10155:90:10","trueBody":{"id":1443,"nodeType":"Block","src":"10182:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:10","typeDescriptions":{}}},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1436,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"10203:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"RevertStatement","src":"10196:38:10"}]}},{"expression":{"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1445,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"10254:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1448,"indexExpression":{"id":1446,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10266:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1449,"indexExpression":{"id":1447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10273:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10284:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1452,"nodeType":"ExpressionStatement","src":"10254:35:10"},{"condition":{"id":1453,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"10303:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"IfStatement","src":"10299:76:10","trueBody":{"id":1460,"nodeType":"Block","src":"10314:61:10","statements":[{"eventCall":{"arguments":[{"id":1455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10342:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10349:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10358:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"10333:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"EmitStatement","src":"10328:36:10"}]}}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"9123:821:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:10","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"owner","nameLocation":"9975:5:10","nodeType":"VariableDeclaration","scope":1463,"src":"9967:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"spender","nameLocation":"9990:7:10","nodeType":"VariableDeclaration","scope":1463,"src":"9982:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"value","nameLocation":"10007:5:10","nodeType":"VariableDeclaration","scope":1463,"src":"9999:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:10","nodeType":"VariableDeclaration","scope":1463,"src":"10014:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:10"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[],"src":"10047:0:10"},"scope":1512,"src":"9949:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"10752:388:10","statements":[{"assignments":[1474],"declarations":[{"constant":false,"id":1474,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:10","nodeType":"VariableDeclaration","scope":1510,"src":"10762:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1479,"initialValue":{"arguments":[{"id":1476,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"10799:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10806:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1475,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"10789:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"10828:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:10","memberName":"max","nodeType":"MemberAccess","src":"10848:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"10824:310:10","trueBody":{"id":1508,"nodeType":"Block","src":"10867:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1487,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"10885:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"10904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1497,"nodeType":"IfStatement","src":"10881:130:10","trueBody":{"id":1496,"nodeType":"Block","src":"10911:100:10","statements":[{"errorCall":{"arguments":[{"id":1491,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"10972:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"10990:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1490,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"10936:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"RevertStatement","src":"10929:67:10"}]}},{"id":1507,"nodeType":"UncheckedBlock","src":"11024:100:10","statements":[{"expression":{"arguments":[{"id":1499,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"11061:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"11068:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"11077:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"11096:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1498,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1403,1463],"referencedDeclaration":1463,"src":"11052:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"11052:57:10"}]}]}}]},"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"10387:271:10","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:10","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"owner","nameLocation":"10696:5:10","nodeType":"VariableDeclaration","scope":1511,"src":"10688:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"spender","nameLocation":"10711:7:10","nodeType":"VariableDeclaration","scope":1511,"src":"10703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"value","nameLocation":"10728:5:10","nodeType":"VariableDeclaration","scope":1511,"src":"10720:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:10"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"10752:0:10"},"scope":1512,"src":"10663:477:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1513,"src":"1401:9741:10","usedErrors":[872,877,882,891,896,901],"usedEvents":[1524,1533]}],"src":"105:11038:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1590]},"id":1591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"132:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1590,"linearizedBaseContracts":[1590],"name":"IERC20","nameLocation":"213:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"226:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1524,"name":"Transfer","nameLocation":"395:8:11","nodeType":"EventDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:11","nodeType":"VariableDeclaration","scope":1524,"src":"404:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1520,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:11","nodeType":"VariableDeclaration","scope":1524,"src":"426:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:11","nodeType":"VariableDeclaration","scope":1524,"src":"446:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:11"},"src":"389:72:11"},{"anonymous":false,"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"467:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1533,"name":"Approval","nameLocation":"626:8:11","nodeType":"EventDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:11","nodeType":"VariableDeclaration","scope":1533,"src":"635:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:11","nodeType":"VariableDeclaration","scope":1533,"src":"658:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:11","nodeType":"VariableDeclaration","scope":1533,"src":"683:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:11"},"src":"620:78:11"},{"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"704:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1539,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":1590,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"835:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1547,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:11","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"account","nameLocation":"938:7:11","nodeType":"VariableDeclaration","scope":1547,"src":"930:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:11"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"970:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:11"},"scope":1590,"src":"911:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"985:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1557,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:11","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"to","nameLocation":"1229:2:11","nodeType":"VariableDeclaration","scope":1557,"src":"1221:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"value","nameLocation":"1241:5:11","nodeType":"VariableDeclaration","scope":1557,"src":"1233:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:11"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"1266:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1554,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:11"},"scope":1590,"src":"1203:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"1278:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:11","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"owner","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":1567,"src":"1566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"spender","nameLocation":"1589:7:11","nodeType":"VariableDeclaration","scope":1567,"src":"1581:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:11"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"1621:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:11"},"scope":1590,"src":"1547:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1636:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1577,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:11","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"spender","nameLocation":"2333:7:11","nodeType":"VariableDeclaration","scope":1577,"src":"2325:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"value","nameLocation":"2350:5:11","nodeType":"VariableDeclaration","scope":1577,"src":"2342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:11"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"2375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1574,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:11"},"scope":1590,"src":"2308:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"2387:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1589,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:11","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"from","nameLocation":"2719:4:11","nodeType":"VariableDeclaration","scope":1589,"src":"2711:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"to","nameLocation":"2733:2:11","nodeType":"VariableDeclaration","scope":1589,"src":"2725:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"value","nameLocation":"2745:5:11","nodeType":"VariableDeclaration","scope":1589,"src":"2737:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:11"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"2770:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:11"},"scope":1590,"src":"2689:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1591,"src":"203:2575:11","usedErrors":[],"usedEvents":[1524,1533]}],"src":"106:2673:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1512],"ERC20Pausable":[1624],"Pausable":[3477]},"id":1625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1592,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1625,"sourceUnit":1513,"src":"150:35:12","symbolAliases":[{"foreign":{"id":1593,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"158:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1625,"sourceUnit":3478,"src":"186:53:12","symbolAliases":[{"foreign":{"id":1595,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"194:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1598,"name":"ERC20","nameLocations":["964:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"964:5:12"},"id":1599,"nodeType":"InheritanceSpecifier","src":"964:5:12"},{"baseName":{"id":1600,"name":"Pausable","nameLocations":["971:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3477,"src":"971:8:12"},"id":1601,"nodeType":"InheritanceSpecifier","src":"971:8:12"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"241:687:12","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1624,"linearizedBaseContracts":[1624,3477,1512,902,1936,1590,3292],"name":"ERC20Pausable","nameLocation":"947:13:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1319],"body":{"id":1622,"nodeType":"Block","src":"1210:47:12","statements":[{"expression":{"arguments":[{"id":1617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1234:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1240:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"1244:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1614,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1220:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1624_$","typeString":"type(contract super ERC20Pausable)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1226:7:12","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"1220:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"ExpressionStatement","src":"1220:30:12"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"986:121:12","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1623,"implemented":true,"kind":"function","modifiers":[{"id":1612,"kind":"modifierInvocation","modifierName":{"id":1611,"name":"whenNotPaused","nameLocations":["1196:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3402,"src":"1196:13:12"},"nodeType":"ModifierInvocation","src":"1196:13:12"}],"name":"_update","nameLocation":"1121:7:12","nodeType":"FunctionDefinition","overrides":{"id":1610,"nodeType":"OverrideSpecifier","overrides":[],"src":"1187:8:12"},"parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"from","nameLocation":"1137:4:12","nodeType":"VariableDeclaration","scope":1623,"src":"1129:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"to","nameLocation":"1151:2:12","nodeType":"VariableDeclaration","scope":1623,"src":"1143:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"value","nameLocation":"1163:5:12","nodeType":"VariableDeclaration","scope":1623,"src":"1155:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1128:41:12"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"1210:0:12"},"scope":1624,"src":"1112:145:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1625,"src":"929:330:12","usedErrors":[872,877,882,891,896,901,3382,3385],"usedEvents":[1524,1533,3374,3379]}],"src":"124:1136:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4407],"EIP712":[4634],"ERC20":[1512],"ERC20Permit":[1778],"IERC20Permit":[1972],"Nonces":[3360]},"id":1779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1779,"sourceUnit":1973,"src":"148:48:13","symbolAliases":[{"foreign":{"id":1627,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"156:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1779,"sourceUnit":1513,"src":"197:35:13","symbolAliases":[{"foreign":{"id":1629,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"205:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1779,"sourceUnit":4408,"src":"233:60:13","symbolAliases":[{"foreign":{"id":1631,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"241:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1779,"sourceUnit":4635,"src":"294:62:13","symbolAliases":[{"foreign":{"id":1633,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"302:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1779,"sourceUnit":3361,"src":"357:49:13","symbolAliases":[{"foreign":{"id":1635,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"365:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1638,"name":"ERC20","nameLocations":["929:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"929:5:13"},"id":1639,"nodeType":"InheritanceSpecifier","src":"929:5:13"},{"baseName":{"id":1640,"name":"IERC20Permit","nameLocations":["936:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"936:12:13"},"id":1641,"nodeType":"InheritanceSpecifier","src":"936:12:13"},{"baseName":{"id":1642,"name":"EIP712","nameLocations":["950:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":4634,"src":"950:6:13"},"id":1643,"nodeType":"InheritanceSpecifier","src":"950:6:13"},{"baseName":{"id":1644,"name":"Nonces","nameLocations":["958:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"958:6:13"},"id":1645,"nodeType":"InheritanceSpecifier","src":"958:6:13"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"408:487:13","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1778,"linearizedBaseContracts":[1778,3360,4634,830,1972,1512,902,1936,1590,3292],"name":"ERC20Permit","nameLocation":"914:11:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1650,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:13","nodeType":"VariableDeclaration","scope":1778,"src":"971:146:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1647,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"1124:52:13","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1655,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:13","nodeType":"ErrorDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:13","nodeType":"VariableDeclaration","scope":1655,"src":"1211:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:13"},"src":"1181:48:13"},{"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"1235:45:13","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1662,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:13","nodeType":"ErrorDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"signer","nameLocation":"1320:6:13","nodeType":"VariableDeclaration","scope":1662,"src":"1312:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"owner","nameLocation":"1336:5:13","nodeType":"VariableDeclaration","scope":1662,"src":"1328:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:13"},"src":"1285:58:13"},{"body":{"id":1672,"nodeType":"Block","src":"1624:2:13","statements":[]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"1349:220:13","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1673,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1668,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"1613:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1670,"kind":"baseConstructorSpecifier","modifierName":{"id":1667,"name":"EIP712","nameLocations":["1606:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":4634,"src":"1606:6:13"},"nodeType":"ModifierInvocation","src":"1606:17:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"name","nameLocation":"1600:4:13","nodeType":"VariableDeclaration","scope":1673,"src":"1586:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:13"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"1624:0:13"},"scope":1778,"src":"1574:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1957],"body":{"id":1749,"nodeType":"Block","src":"1869:483:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1691,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1693,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1901:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1700,"nodeType":"IfStatement","src":"1879:97:13","trueBody":{"id":1699,"nodeType":"Block","src":"1911:65:13","statements":[{"errorCall":{"arguments":[{"id":1696,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1956:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1695,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1932:23:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"RevertStatement","src":"1925:40:13"}]}},{"assignments":[1702],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:13","nodeType":"VariableDeclaration","scope":1749,"src":"1986:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"arguments":[{"id":1706,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2028:15:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2045:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2052:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2061:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1711,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2078:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1710,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2068:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1713,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2086:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1704,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1703,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:13"},{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"hash","nameLocation":"2115:4:13","nodeType":"VariableDeclaration","scope":1749,"src":"2107:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1722,"initialValue":{"arguments":[{"id":1720,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2139:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1719,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"2122:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:13"},{"assignments":[1724],"declarations":[{"constant":false,"id":1724,"mutability":"mutable","name":"signer","nameLocation":"2169:6:13","nodeType":"VariableDeclaration","scope":1749,"src":"2161:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[{"id":1727,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2192:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1728,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2198:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1729,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2201:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1730,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"2204:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1725,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"2178:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4407_$","typeString":"type(library ECDSA)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4357,"src":"2178:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2220:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2230:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"2216:88:13","trueBody":{"id":1741,"nodeType":"Block","src":"2237:67:13","statements":[{"errorCall":{"arguments":[{"id":1737,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2279:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2287:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1736,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2258:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"RevertStatement","src":"2251:42:13"}]}},{"expression":{"arguments":[{"id":1744,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2323:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1745,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2330:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2339:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1743,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1403,1463],"referencedDeclaration":1403,"src":"2314:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"ExpressionStatement","src":"2314:31:13"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1632:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:13","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"owner","nameLocation":"1713:5:13","nodeType":"VariableDeclaration","scope":1750,"src":"1705:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"spender","nameLocation":"1736:7:13","nodeType":"VariableDeclaration","scope":1750,"src":"1728:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"1761:5:13","nodeType":"VariableDeclaration","scope":1750,"src":"1753:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:13","nodeType":"VariableDeclaration","scope":1750,"src":"1776:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"v","nameLocation":"1808:1:13","nodeType":"VariableDeclaration","scope":1750,"src":"1802:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1683,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"r","nameLocation":"1827:1:13","nodeType":"VariableDeclaration","scope":1750,"src":"1819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"s","nameLocation":"1846:1:13","nodeType":"VariableDeclaration","scope":1750,"src":"1838:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:13"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"1869:0:13"},"scope":1778,"src":"1680:672:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1965,3319],"body":{"id":1766,"nodeType":"Block","src":"2506:43:13","statements":[{"expression":{"arguments":[{"id":1763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2536:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1761,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1778_$","typeString":"type(contract super ERC20Permit)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:13","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"2523:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1760,"id":1765,"nodeType":"Return","src":"2516:26:13"}]},"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"2358:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:13","nodeType":"FunctionDefinition","overrides":{"id":1757,"nodeType":"OverrideSpecifier","overrides":[{"id":1755,"name":"IERC20Permit","nameLocations":["2466:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"2466:12:13"},{"id":1756,"name":"Nonces","nameLocations":["2480:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"2480:6:13"}],"src":"2457:30:13"},"parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"owner","nameLocation":"2430:5:13","nodeType":"VariableDeclaration","scope":1767,"src":"2422:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:13"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"2497:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:13"},"scope":1778,"src":"2406:143:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1971],"body":{"id":1776,"nodeType":"Block","src":"2724:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1773,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"2741:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1772,"id":1775,"nodeType":"Return","src":"2734:27:13"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"2555:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:13","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"2681:2:13"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"2715:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:13"},"scope":1778,"src":"2656:112:13","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1779,"src":"896:1874:13","usedErrors":[872,877,882,891,896,901,1655,1662,3302,3491,3493,4070,4075,4080],"usedEvents":[810,1524,1533]}],"src":"122:2649:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[9230],"ERC20":[1512],"ERC20Votes":[1910],"Votes":[777]},"id":1911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1780,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1911,"sourceUnit":1513,"src":"147:35:14","symbolAliases":[{"foreign":{"id":1781,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"155:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":1784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1911,"sourceUnit":778,"src":"183:58:14","symbolAliases":[{"foreign":{"id":1783,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"191:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":1786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1911,"sourceUnit":9231,"src":"242:67:14","symbolAliases":[{"foreign":{"id":1785,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"250:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1788,"name":"ERC20","nameLocations":["1201:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"1201:5:14"},"id":1789,"nodeType":"InheritanceSpecifier","src":"1201:5:14"},{"baseName":{"id":1790,"name":"Votes","nameLocations":["1208:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1208:5:14"},"id":1791,"nodeType":"InheritanceSpecifier","src":"1208:5:14"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"311:857:14","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":1910,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[1910,777,841,230,856,3360,4634,830,1512,902,1936,1590,3292],"name":"ERC20Votes","nameLocation":"1187:10:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"1220:100:14","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":1798,"name":"ERC20ExceededSafeSupply","nameLocation":"1331:23:14","nodeType":"ErrorDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"increasedSupply","nameLocation":"1363:15:14","nodeType":"VariableDeclaration","scope":1798,"src":"1355:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"cap","nameLocation":"1388:3:14","nodeType":"VariableDeclaration","scope":1798,"src":"1380:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:38:14"},"src":"1325:68:14"},{"body":{"id":1810,"nodeType":"Block","src":"2146:41:14","statements":[{"expression":{"expression":{"arguments":[{"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1805,"name":"uint208","nodeType":"ElementaryTypeName","src":"2168:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2163:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2177:3:14","memberName":"max","nodeType":"MemberAccess","src":"2163:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1803,"id":1809,"nodeType":"Return","src":"2156:24:14"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1399:680:14","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2093:10:14","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[],"src":"2103:2:14"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"2137:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2136:9:14"},"scope":1910,"src":"2084:103:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1319],"body":{"id":1864,"nodeType":"Block","src":"2411:329:14","statements":[{"expression":{"arguments":[{"id":1825,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2435:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1826,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2441:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1822,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2421:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1910_$","typeString":"type(contract super ERC20Votes)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2427:7:14","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"2421:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"2421:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2465:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2481:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2473:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2465:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"2461:226:14","trueBody":{"id":1856,"nodeType":"Block","src":"2485:202:14","statements":[{"assignments":[1837],"declarations":[{"constant":false,"id":1837,"mutability":"mutable","name":"supply","nameLocation":"2507:6:14","nodeType":"VariableDeclaration","scope":1856,"src":"2499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1840,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1838,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2516:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:30:14"},{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"cap","nameLocation":"2551:3:14","nodeType":"VariableDeclaration","scope":1856,"src":"2543:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1843,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2557:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2543:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1846,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2587:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1847,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"2596:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"2583:94:14","trueBody":{"id":1854,"nodeType":"Block","src":"2601:76:14","statements":[{"errorCall":{"arguments":[{"id":1850,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2650:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"2658:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2626:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"RevertStatement","src":"2619:43:14"}]}}]}},{"expression":{"arguments":[{"id":1859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2717:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2723:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2696:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"2696:37:14"}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"2193:129:14","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2336:7:14","nodeType":"FunctionDefinition","overrides":{"id":1820,"nodeType":"OverrideSpecifier","overrides":[],"src":"2402:8:14"},"parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"from","nameLocation":"2352:4:14","nodeType":"VariableDeclaration","scope":1865,"src":"2344:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"to","nameLocation":"2366:2:14","nodeType":"VariableDeclaration","scope":1865,"src":"2358:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"value","nameLocation":"2378:5:14","nodeType":"VariableDeclaration","scope":1865,"src":"2370:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:41:14"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"2411:0:14"},"scope":1910,"src":"2327:413:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[776],"body":{"id":1878,"nodeType":"Block","src":"3091:42:14","statements":[{"expression":{"arguments":[{"id":1875,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"3118:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1874,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3108:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1873,"id":1877,"nodeType":"Return","src":"3101:25:14"}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"2746:249:14","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3009:15:14","nodeType":"FunctionDefinition","overrides":{"id":1870,"nodeType":"OverrideSpecifier","overrides":[],"src":"3064:8:14"},"parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"account","nameLocation":"3033:7:14","nodeType":"VariableDeclaration","scope":1879,"src":"3025:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3024:17:14"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"3082:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:9:14"},"scope":1910,"src":"3000:133:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"3286:48:14","statements":[{"expression":{"arguments":[{"id":1888,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"3319:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1887,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3303:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1886,"id":1890,"nodeType":"Return","src":"3296:31:14"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"3139:64:14","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3217:14:14","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"account","nameLocation":"3240:7:14","nodeType":"VariableDeclaration","scope":1892,"src":"3232:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3231:17:14"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"3278:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1884,"name":"uint32","nodeType":"ElementaryTypeName","src":"3278:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3277:8:14"},"scope":1910,"src":"3208:126:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1908,"nodeType":"Block","src":"3524:50:14","statements":[{"expression":{"arguments":[{"id":1904,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3554:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"3563:3:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1903,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3541:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8197_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":1902,"id":1907,"nodeType":"Return","src":"3534:33:14"}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"3340:66:14","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3420:11:14","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"account","nameLocation":"3440:7:14","nodeType":"VariableDeclaration","scope":1909,"src":"3432:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"pos","nameLocation":"3456:3:14","nodeType":"VariableDeclaration","scope":1909,"src":"3449:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1896,"name":"uint32","nodeType":"ElementaryTypeName","src":"3449:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3431:29:14"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"3490:32:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":1900,"nodeType":"UserDefinedTypeName","pathNode":{"id":1899,"name":"Checkpoints.Checkpoint208","nameLocations":["3490:11:14","3502:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"3490:25:14"},"referencedDeclaration":8197,"src":"3490:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3489:34:14"},"scope":1910,"src":"3411:163:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1911,"src":"1169:2407:14","usedErrors":[155,281,288,872,877,882,891,896,901,1798,3302,3491,3493,4070,4075,4080,5808,7666],"usedEvents":[164,173,810,1524,1533]}],"src":"121:3456:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1590],"IERC20Metadata":[1936]},"id":1937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1937,"sourceUnit":1591,"src":"151:37:15","symbolAliases":[{"foreign":{"id":1913,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"159:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1916,"name":"IERC20","nameLocations":["305:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1590,"src":"305:6:15"},"id":1917,"nodeType":"InheritanceSpecifier","src":"305:6:15"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"190:86:15","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1936,"linearizedBaseContracts":[1936,1590],"name":"IERC20Metadata","nameLocation":"287:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"318:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1923,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:15","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[],"src":"390:2:15"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"416:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1920,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:15"},"scope":1936,"src":"377:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"437:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1929,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:15","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"513:2:15"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"539:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:15"},"scope":1936,"src":"498:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"560:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1935,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:15","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"647:2:15"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"673:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1932,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:15"},"scope":1936,"src":"630:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1937,"src":"277:405:15","usedErrors":[],"usedEvents":[1524,1533]}],"src":"125:558:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1972]},"id":1973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1938,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"149:1963:16","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1972,"linearizedBaseContracts":[1972],"name":"IERC20Permit","nameLocation":"2123:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"2142:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1957,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:16","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"owner","nameLocation":"3030:5:16","nodeType":"VariableDeclaration","scope":1957,"src":"3022:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"spender","nameLocation":"3053:7:16","nodeType":"VariableDeclaration","scope":1957,"src":"3045:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"value","nameLocation":"3078:5:16","nodeType":"VariableDeclaration","scope":1957,"src":"3070:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:16","nodeType":"VariableDeclaration","scope":1957,"src":"3093:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"v","nameLocation":"3125:1:16","nodeType":"VariableDeclaration","scope":1957,"src":"3119:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1949,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"r","nameLocation":"3144:1:16","nodeType":"VariableDeclaration","scope":1957,"src":"3136:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"s","nameLocation":"3163:1:16","nodeType":"VariableDeclaration","scope":1957,"src":"3155:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:16"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"3179:0:16"},"scope":1972,"src":"2997:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"3186:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1965,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:16","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"owner","nameLocation":"3509:5:16","nodeType":"VariableDeclaration","scope":1965,"src":"3501:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:16"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"3539:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:16"},"scope":1972,"src":"3485:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"3554:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1971,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:16","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"3765:2:16"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"3791:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:16"},"scope":1972,"src":"3740:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1973,"src":"2113:1689:16","usedErrors":[],"usedEvents":[]}],"src":"123:3680:16"},"id":16},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[3292],"ERC165":[4732],"ERC721":[2981],"IERC165":[4744],"IERC721":[3098],"IERC721Errors":[950],"IERC721Metadata":[3270],"IERC721Receiver":[3116],"Strings":[4059]},"id":2982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1974,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":3099,"src":"133:38:17","symbolAliases":[{"foreign":{"id":1975,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"141:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":3117,"src":"172:54:17","symbolAliases":[{"foreign":{"id":1977,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"180:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1980,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":3271,"src":"227:65:17","symbolAliases":[{"foreign":{"id":1979,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"235:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":3293,"src":"293:48:17","symbolAliases":[{"foreign":{"id":1981,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"301:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1984,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":4060,"src":"342:48:17","symbolAliases":[{"foreign":{"id":1983,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"350:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":4733,"src":"391:69:17","symbolAliases":[{"foreign":{"id":1985,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"399:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1986,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"408:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":998,"src":"461:66:17","symbolAliases":[{"foreign":{"id":1988,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"469:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1991,"name":"Context","nameLocations":["804:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"804:7:17"},"id":1992,"nodeType":"InheritanceSpecifier","src":"804:7:17"},{"baseName":{"id":1993,"name":"ERC165","nameLocations":["813:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4732,"src":"813:6:17"},"id":1994,"nodeType":"InheritanceSpecifier","src":"813:6:17"},{"baseName":{"id":1995,"name":"IERC721","nameLocations":["821:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3098,"src":"821:7:17"},"id":1996,"nodeType":"InheritanceSpecifier","src":"821:7:17"},{"baseName":{"id":1997,"name":"IERC721Metadata","nameLocations":["830:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":3270,"src":"830:15:17"},"id":1998,"nodeType":"InheritanceSpecifier","src":"830:15:17"},{"baseName":{"id":1999,"name":"IERC721Errors","nameLocations":["847:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"847:13:17"},"id":2000,"nodeType":"InheritanceSpecifier","src":"847:13:17"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"529:246:17","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2981,"linearizedBaseContracts":[2981,950,3270,3098,4732,4744,3292],"name":"ERC721","nameLocation":"794:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2003,"libraryName":{"id":2001,"name":"Strings","nameLocations":["873:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"873:7:17"},"nodeType":"UsingForDirective","src":"867:26:17","typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2005,"mutability":"mutable","name":"_name","nameLocation":"932:5:17","nodeType":"VariableDeclaration","scope":2981,"src":"917:20:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2004,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2007,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:17","nodeType":"VariableDeclaration","scope":2981,"src":"964:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2006,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2011,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:17","nodeType":"VariableDeclaration","scope":2981,"src":"993:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2010,"keyName":"tokenId","keyNameLocation":"1009:7:17","keyType":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2015,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:17","nodeType":"VariableDeclaration","scope":2981,"src":"1051:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2014,"keyName":"owner","keyNameLocation":"1067:5:17","keyType":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2019,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:17","nodeType":"VariableDeclaration","scope":2981,"src":"1109:59:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2018,"keyName":"tokenId","keyNameLocation":"1125:7:17","keyType":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2025,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:17","nodeType":"VariableDeclaration","scope":2981,"src":"1175:86:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2024,"keyName":"owner","keyNameLocation":"1191:5:17","keyType":{"id":2020,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2023,"keyName":"operator","keyNameLocation":"1216:8:17","keyType":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2022,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2041,"nodeType":"Block","src":"1437:57:17","statements":[{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2033,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1447:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2034,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2036,"nodeType":"ExpressionStatement","src":"1447:13:17"},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2037,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1470:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2038,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1480:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2040,"nodeType":"ExpressionStatement","src":"1470:17:17"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"1268:108:17","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2042,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"name_","nameLocation":"1407:5:17","nodeType":"VariableDeclaration","scope":2042,"src":"1393:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:17","nodeType":"VariableDeclaration","scope":2042,"src":"1414:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2029,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:17"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[],"src":"1437:0:17"},"scope":2981,"src":"1381:113:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4731,4743],"body":{"id":2072,"nodeType":"Block","src":"1669:192:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1698:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2055,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"1718:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3098_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3098_$","typeString":"type(contract IERC721)"}],"id":2054,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3098","typeString":"type(contract IERC721)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1754:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2061,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1774:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3270_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3270_$","typeString":"type(contract IERC721Metadata)"}],"id":2060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3270","typeString":"type(contract IERC721Metadata)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2068,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1842:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2066,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2981_$","typeString":"type(contract super ERC721)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:17","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"1818:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2052,"id":2071,"nodeType":"Return","src":"1679:175:17"}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"1500:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:17","nodeType":"FunctionDefinition","overrides":{"id":2049,"nodeType":"OverrideSpecifier","overrides":[{"id":2047,"name":"ERC165","nameLocations":["1637:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4732,"src":"1637:6:17"},{"id":2048,"name":"IERC165","nameLocations":["1645:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"1645:7:17"}],"src":"1628:25:17"},"parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:17","nodeType":"VariableDeclaration","scope":2073,"src":"1588:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2044,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:17"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"1663:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2050,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:17"},"scope":2981,"src":"1561:300:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3023],"body":{"id":2100,"nodeType":"Block","src":"1992:136:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"2006:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:17","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"IfStatement","src":"2002:87:17","trueBody":{"id":2094,"nodeType":"Block","src":"2027:62:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:17","typeDescriptions":{}}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2087,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"2048:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2093,"nodeType":"RevertStatement","src":"2041:37:17"}]}},{"expression":{"baseExpression":{"id":2096,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2105:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2098,"indexExpression":{"id":2097,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"2115:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2080,"id":2099,"nodeType":"Return","src":"2098:23:17"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"1867:48:17","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:17","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"owner","nameLocation":"1947:5:17","nodeType":"VariableDeclaration","scope":2101,"src":"1939:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:17"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2101,"src":"1983:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:17"},"scope":2981,"src":"1920:208:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3031],"body":{"id":2113,"nodeType":"Block","src":"2257:46:17","statements":[{"expression":{"arguments":[{"id":2110,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2288:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2274:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2108,"id":2112,"nodeType":"Return","src":"2267:29:17"}]},"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"2134:46:17","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:17","nodeType":"FunctionDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:17","nodeType":"VariableDeclaration","scope":2114,"src":"2202:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:17"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2114,"src":"2248:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:17"},"scope":2981,"src":"2185:118:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3255],"body":{"id":2122,"nodeType":"Block","src":"2425:29:17","statements":[{"expression":{"id":2120,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2442:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2119,"id":2121,"nodeType":"Return","src":"2435:12:17"}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"2309:51:17","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2123,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:17","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"2378:2:17"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2123,"src":"2410:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2117,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:17"},"scope":2981,"src":"2365:89:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3261],"body":{"id":2131,"nodeType":"Block","src":"2580:31:17","statements":[{"expression":{"id":2129,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2597:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2128,"id":2130,"nodeType":"Return","src":"2590:14:17"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2460:53:17","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:17","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[],"src":"2533:2:17"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"2565:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2126,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:17"},"scope":2981,"src":"2518:93:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3269],"body":{"id":2167,"nodeType":"Block","src":"2756:176:17","statements":[{"expression":{"arguments":[{"id":2141,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2780:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2140,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2766:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2143,"nodeType":"ExpressionStatement","src":"2766:22:17"},{"assignments":[2145],"declarations":[{"constant":false,"id":2145,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:17","nodeType":"VariableDeclaration","scope":2167,"src":"2799:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2144,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2148,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2146,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2823:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2151,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2856:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2149,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:17","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:17","memberName":"length","nodeType":"MemberAccess","src":"2850:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:17","trueExpression":{"arguments":[{"id":2159,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2892:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2901:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3872,"src":"2901:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2156,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:17","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2139,"id":2166,"nodeType":"Return","src":"2843:82:17"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"2617:55:17","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:17","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:17","nodeType":"VariableDeclaration","scope":2168,"src":"2695:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:17"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"2741:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:17"},"scope":2981,"src":"2677:255:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2176,"nodeType":"Block","src":"3240:26:17","statements":[{"expression":{"hexValue":"","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2173,"id":2175,"nodeType":"Return","src":"3250:9:17"}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"2938:231:17","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:17","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"3191:2:17"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"3225:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2171,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:17"},"scope":2981,"src":"3174:92:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3071],"body":{"id":2192,"nodeType":"Block","src":"3384:52:17","statements":[{"expression":{"arguments":[{"id":2186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3403:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"3407:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2188,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3416:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2185,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2784,2850],"referencedDeclaration":2784,"src":"3394:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"3394:35:17"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"3272:46:17","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2193,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:17","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"to","nameLocation":"3348:2:17","nodeType":"VariableDeclaration","scope":2193,"src":"3340:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:17","nodeType":"VariableDeclaration","scope":2193,"src":"3352:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:17"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"3384:0:17"},"scope":2981,"src":"3323:113:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3087],"body":{"id":2209,"nodeType":"Block","src":"3573:78:17","statements":[{"expression":{"arguments":[{"id":2202,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"3597:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2201,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3583:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2204,"nodeType":"ExpressionStatement","src":"3583:22:17"},{"expression":{"arguments":[{"id":2206,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"3636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2205,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"3623:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2200,"id":2208,"nodeType":"Return","src":"3616:28:17"}]},"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"3442:50:17","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:17","nodeType":"FunctionDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:17","nodeType":"VariableDeclaration","scope":2210,"src":"3518:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:17"},"returnParameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"3564:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:17"},"scope":2981,"src":"3497:154:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3079],"body":{"id":2225,"nodeType":"Block","src":"3793:69:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2219,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3822:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2221,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3836:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2222,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"3846:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2218,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3803:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"ExpressionStatement","src":"3803:52:17"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"3657:56:17","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:17","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"operator","nameLocation":"3753:8:17","nodeType":"VariableDeclaration","scope":2226,"src":"3745:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"approved","nameLocation":"3768:8:17","nodeType":"VariableDeclaration","scope":2226,"src":"3763:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2214,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:17"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"3793:0:17"},"scope":2981,"src":"3718:144:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3097],"body":{"id":2242,"nodeType":"Block","src":"4022:59:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2236,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4039:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2238,"indexExpression":{"id":2237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4058:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2240,"indexExpression":{"id":2239,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4065:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2235,"id":2241,"nodeType":"Return","src":"4032:42:17"}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"3868:55:17","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:17","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"owner","nameLocation":"3962:5:17","nodeType":"VariableDeclaration","scope":2243,"src":"3954:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"operator","nameLocation":"3977:8:17","nodeType":"VariableDeclaration","scope":2243,"src":"3969:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:17"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"4016:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:17"},"scope":2981,"src":"3928:153:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3063],"body":{"id":2288,"nodeType":"Block","src":"4223:498:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4237:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:17","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2267,"nodeType":"IfStatement","src":"4233:87:17","trueBody":{"id":2266,"nodeType":"Block","src":"4255:65:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:17","typeDescriptions":{}}},"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2259,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4276:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2265,"nodeType":"RevertStatement","src":"4269:40:17"}]}},{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:17","nodeType":"VariableDeclaration","scope":2288,"src":"4538:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2276,"initialValue":{"arguments":[{"id":2271,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4570:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4574:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2273,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"4583:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2270,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"4562:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"4610:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2278,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4627:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2287,"nodeType":"IfStatement","src":"4606:109:17","trueBody":{"id":2286,"nodeType":"Block","src":"4633:82:17","statements":[{"errorCall":{"arguments":[{"id":2281,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4675:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2283,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"4690:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2280,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"4654:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2285,"nodeType":"RevertStatement","src":"4647:57:17"}]}}]},"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"4087:51:17","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:17","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"from","nameLocation":"4173:4:17","nodeType":"VariableDeclaration","scope":2289,"src":"4165:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"to","nameLocation":"4187:2:17","nodeType":"VariableDeclaration","scope":2289,"src":"4179:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:17","nodeType":"VariableDeclaration","scope":2289,"src":"4191:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:17"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[],"src":"4223:0:17"},"scope":2981,"src":"4143:578:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3053],"body":{"id":2306,"nodeType":"Block","src":"4863:56:17","statements":[{"expression":{"arguments":[{"id":2300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"4890:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4896:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"4900:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2299,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2307,2333],"referencedDeclaration":2333,"src":"4873:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2305,"nodeType":"ExpressionStatement","src":"4873:39:17"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"4727:55:17","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:17","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"from","nameLocation":"4821:4:17","nodeType":"VariableDeclaration","scope":2307,"src":"4813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"to","nameLocation":"4835:2:17","nodeType":"VariableDeclaration","scope":2307,"src":"4827:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:17","nodeType":"VariableDeclaration","scope":2307,"src":"4839:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:17"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"4863:0:17"},"scope":2981,"src":"4787:132:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3043],"body":{"id":2332,"nodeType":"Block","src":"5088:105:17","statements":[{"expression":{"arguments":[{"id":2320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"5111:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2321,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5117:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"5121:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2319,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"5098:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"ExpressionStatement","src":"5098:31:17"},{"expression":{"arguments":[{"id":2326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"5162:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5168:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2328,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"5172:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2329,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5181:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2325,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"5139:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"ExpressionStatement","src":"5139:47:17"}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"4925:55:17","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2333,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:17","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"from","nameLocation":"5019:4:17","nodeType":"VariableDeclaration","scope":2333,"src":"5011:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"to","nameLocation":"5033:2:17","nodeType":"VariableDeclaration","scope":2333,"src":"5025:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:17","nodeType":"VariableDeclaration","scope":2333,"src":"5037:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"data","nameLocation":"5067:4:17","nodeType":"VariableDeclaration","scope":2333,"src":"5054:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:17"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"5088:0:17"},"scope":2981,"src":"4985:208:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2345,"nodeType":"Block","src":"5782:40:17","statements":[{"expression":{"baseExpression":{"id":2341,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"5799:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2343,"indexExpression":{"id":2342,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5807:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2340,"id":2344,"nodeType":"Return","src":"5792:23:17"}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"5199:503:17","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:17","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:17","nodeType":"VariableDeclaration","scope":2346,"src":"5725:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:17"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"5773:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:17"},"scope":2981,"src":"5707:115:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"6017:48:17","statements":[{"expression":{"baseExpression":{"id":2354,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6034:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2356,"indexExpression":{"id":2355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"6050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2353,"id":2357,"nodeType":"Return","src":"6027:31:17"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"5828:105:17","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:17","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:17","nodeType":"VariableDeclaration","scope":2359,"src":"5960:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:17"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"6008:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:17"},"scope":2981,"src":"5938:127:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"6485:163:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6514:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:17","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"6552:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2378,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6561:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2381,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"6589:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2382,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6596:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2380,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6572:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2386,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6621:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"6608:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2388,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6633:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2370,"id":2393,"nodeType":"Return","src":"6495:146:17"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"6071:300:17","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:17","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"owner","nameLocation":"6407:5:17","nodeType":"VariableDeclaration","scope":2395,"src":"6399:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"spender","nameLocation":"6422:7:17","nodeType":"VariableDeclaration","scope":2395,"src":"6414:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:17","nodeType":"VariableDeclaration","scope":2395,"src":"6431:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:17"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"6479:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:17"},"scope":2981,"src":"6376:272:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"7179:271:17","statements":[{"condition":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:17","subExpression":{"arguments":[{"id":2406,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"7208:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7215:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"7224:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2405,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7194:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2430,"nodeType":"IfStatement","src":"7189:255:17","trueBody":{"id":2429,"nodeType":"Block","src":"7234:210:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"7252:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:17","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2427,"nodeType":"Block","src":"7350:84:17","statements":[{"errorCall":{"arguments":[{"id":2423,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7402:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"7411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2422,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7375:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"RevertStatement","src":"7368:51:17"}]},"id":2428,"nodeType":"IfStatement","src":"7248:186:17","trueBody":{"id":2421,"nodeType":"Block","src":"7273:71:17","statements":[{"errorCall":{"arguments":[{"id":2418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2417,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"7298:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"RevertStatement","src":"7291:38:17"}]}}]}}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"6654:423:17","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:17","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"owner","nameLocation":"7116:5:17","nodeType":"VariableDeclaration","scope":2432,"src":"7108:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"spender","nameLocation":"7131:7:17","nodeType":"VariableDeclaration","scope":2432,"src":"7123:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:17","nodeType":"VariableDeclaration","scope":2432,"src":"7140:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:17"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"7179:0:17"},"scope":2981,"src":"7082:368:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2447,"nodeType":"Block","src":"8167:78:17","statements":[{"id":2446,"nodeType":"UncheckedBlock","src":"8177:62:17","statements":[{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2440,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"8201:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2442,"indexExpression":{"id":2441,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8211:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8223:5:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"8201:27:17"}]}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"7456:631:17","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:17","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"account","nameLocation":"8126:7:17","nodeType":"VariableDeclaration","scope":2448,"src":"8118:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"8143:5:17","nodeType":"VariableDeclaration","scope":2448,"src":"8135:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2436,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:17"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[],"src":"8167:0:17"},"scope":2981,"src":"8092:153:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"8933:700:17","statements":[{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"from","nameLocation":"8951:4:17","nodeType":"VariableDeclaration","scope":2537,"src":"8943:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2465,"initialValue":{"arguments":[{"id":2463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"8967:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2462,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"8958:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9035:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:17","typeDescriptions":{}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"9031:86:17","trueBody":{"id":2478,"nodeType":"Block","src":"9055:62:17","statements":[{"expression":{"arguments":[{"id":2473,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9086:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2474,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9092:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9098:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9069:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"ExpressionStatement","src":"9069:37:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9161:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:17","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2507,"nodeType":"IfStatement","src":"9157:256:17","trueBody":{"id":2506,"nodeType":"Block","src":"9181:232:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:17","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9298:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:17","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2486,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2784,2850],"referencedDeclaration":2850,"src":"9277:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"ExpressionStatement","src":"9277:48:17"},{"id":2505,"nodeType":"UncheckedBlock","src":"9340:63:17","statements":[{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2499,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9368:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2501,"indexExpression":{"id":2500,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9378:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"9368:20:17"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2508,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9427:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:17","typeDescriptions":{}}},"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2522,"nodeType":"IfStatement","src":"9423:107:17","trueBody":{"id":2521,"nodeType":"Block","src":"9445:85:17","statements":[{"id":2520,"nodeType":"UncheckedBlock","src":"9459:61:17","statements":[{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2514,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9487:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2516,"indexExpression":{"id":2515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9497:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2519,"nodeType":"ExpressionStatement","src":"9487:18:17"}]}]}},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2523,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"9540:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2525,"indexExpression":{"id":2524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9548:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2526,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9559:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2528,"nodeType":"ExpressionStatement","src":"9540:21:17"},{"eventCall":{"arguments":[{"id":2530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9586:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2531,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9592:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9596:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2529,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"9577:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2534,"nodeType":"EmitStatement","src":"9572:32:17"},{"expression":{"id":2535,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9622:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2459,"id":2536,"nodeType":"Return","src":"9615:11:17"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"8251:582:17","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:17","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"to","nameLocation":"8863:2:17","nodeType":"VariableDeclaration","scope":2538,"src":"8855:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:17","nodeType":"VariableDeclaration","scope":2538,"src":"8867:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"auth","nameLocation":"8892:4:17","nodeType":"VariableDeclaration","scope":2538,"src":"8884:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:17"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"8924:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:17"},"scope":2981,"src":"8838:795:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"10008:274:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10022:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:17","typeDescriptions":{}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"10018:87:17","trueBody":{"id":2559,"nodeType":"Block","src":"10040:65:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:17","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2552,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"10061:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"RevertStatement","src":"10054:40:17"}]}},{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:17","nodeType":"VariableDeclaration","scope":2587,"src":"10114:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2571,"initialValue":{"arguments":[{"id":2564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10146:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"10150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:17","typeDescriptions":{}}},"id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2563,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"10138:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"10184:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:17","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"10180:96:17","trueBody":{"id":2585,"nodeType":"Block","src":"10213:63:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:17","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2578,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10234:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"RevertStatement","src":"10227:38:17"}]}}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"9639:311:17","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:17","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"to","nameLocation":"9978:2:17","nodeType":"VariableDeclaration","scope":2588,"src":"9970:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:17","nodeType":"VariableDeclaration","scope":2588,"src":"9982:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:17"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[],"src":"10008:0:17"},"scope":2981,"src":"9955:327:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"10690:43:17","statements":[{"expression":{"arguments":[{"id":2597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"10710:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2598,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"10714:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2596,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2603,2629],"referencedDeclaration":2629,"src":"10700:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"ExpressionStatement","src":"10700:26:17"}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"10288:340:17","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:17","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"to","nameLocation":"10660:2:17","nodeType":"VariableDeclaration","scope":2603,"src":"10652:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:17","nodeType":"VariableDeclaration","scope":2603,"src":"10664:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:17"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"10690:0:17"},"scope":2981,"src":"10633:100:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"11038:98:17","statements":[{"expression":{"arguments":[{"id":2614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11054:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2615,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"11058:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2613,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"11048:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2617,"nodeType":"ExpressionStatement","src":"11048:18:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:17","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11111:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2624,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"11115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2625,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11124:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2618,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"11076:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2627,"nodeType":"ExpressionStatement","src":"11076:53:17"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"10739:210:17","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:17","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"to","nameLocation":"10981:2:17","nodeType":"VariableDeclaration","scope":2629,"src":"10973:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:17","nodeType":"VariableDeclaration","scope":2629,"src":"10985:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"data","nameLocation":"11015:4:17","nodeType":"VariableDeclaration","scope":2629,"src":"11002:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:17"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[],"src":"11038:0:17"},"scope":2981,"src":"10954:182:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2661,"nodeType":"Block","src":"11503:186:17","statements":[{"assignments":[2636],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:17","nodeType":"VariableDeclaration","scope":2661,"src":"11513:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2648,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:17","typeDescriptions":{}}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"11557:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:17","typeDescriptions":{}}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2637,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"11537:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11591:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:17","typeDescriptions":{}}},"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"11587:96:17","trueBody":{"id":2659,"nodeType":"Block","src":"11620:63:17","statements":[{"errorCall":{"arguments":[{"id":2656,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"11664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"11641:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"RevertStatement","src":"11634:38:17"}]}}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"11142:315:17","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:17","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:17","nodeType":"VariableDeclaration","scope":2662,"src":"11477:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:17"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"11503:0:17"},"scope":2981,"src":"11462:227:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2721,"nodeType":"Block","src":"12084:389:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12098:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:17","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2686,"nodeType":"IfStatement","src":"12094:87:17","trueBody":{"id":2685,"nodeType":"Block","src":"12116:65:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:17","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2678,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"12137:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2684,"nodeType":"RevertStatement","src":"12130:40:17"}]}},{"assignments":[2688],"declarations":[{"constant":false,"id":2688,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:17","nodeType":"VariableDeclaration","scope":2721,"src":"12190:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2697,"initialValue":{"arguments":[{"id":2690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12222:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"12226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:17","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2689,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"12214:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"12260:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:17","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"12362:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"12379:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"IfStatement","src":"12358:109:17","trueBody":{"id":2718,"nodeType":"Block","src":"12385:82:17","statements":[{"errorCall":{"arguments":[{"id":2713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"12427:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"12433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2715,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"12442:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2712,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"12406:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"RevertStatement","src":"12399:57:17"}]}},"id":2720,"nodeType":"IfStatement","src":"12256:211:17","trueBody":{"id":2708,"nodeType":"Block","src":"12289:63:17","statements":[{"errorCall":{"arguments":[{"id":2705,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"12333:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"12310:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"RevertStatement","src":"12303:38:17"}]}}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"11695:313:17","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2722,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:17","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"from","nameLocation":"12040:4:17","nodeType":"VariableDeclaration","scope":2722,"src":"12032:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"to","nameLocation":"12054:2:17","nodeType":"VariableDeclaration","scope":2722,"src":"12046:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:17","nodeType":"VariableDeclaration","scope":2722,"src":"12058:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:17"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[],"src":"12084:0:17"},"scope":2981,"src":"12013:460:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"13481:53:17","statements":[{"expression":{"arguments":[{"id":2733,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"13505:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"13511:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"13515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2732,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2740,2766],"referencedDeclaration":2766,"src":"13491:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2738,"nodeType":"ExpressionStatement","src":"13491:36:17"}]},"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"12479:922:17","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:17","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"from","nameLocation":"13437:4:17","nodeType":"VariableDeclaration","scope":2740,"src":"13429:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"to","nameLocation":"13451:2:17","nodeType":"VariableDeclaration","scope":2740,"src":"13443:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:17","nodeType":"VariableDeclaration","scope":2740,"src":"13455:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:17"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"13481:0:17"},"scope":2981,"src":"13406:128:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2765,"nodeType":"Block","src":"13873:102:17","statements":[{"expression":{"arguments":[{"id":2753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"13893:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"13899:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"13903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"13883:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"13883:28:17"},{"expression":{"arguments":[{"id":2759,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"13944:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2760,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"13950:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2761,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"13954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2758,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"13921:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"ExpressionStatement","src":"13921:47:17"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"13540:226:17","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:17","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"from","nameLocation":"13802:4:17","nodeType":"VariableDeclaration","scope":2766,"src":"13794:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"to","nameLocation":"13816:2:17","nodeType":"VariableDeclaration","scope":2766,"src":"13808:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:17","nodeType":"VariableDeclaration","scope":2766,"src":"13820:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"data","nameLocation":"13850:4:17","nodeType":"VariableDeclaration","scope":2766,"src":"13837:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2748,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:17"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"13873:0:17"},"scope":2981,"src":"13771:204:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"14488:50:17","statements":[{"expression":{"arguments":[{"id":2777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"14507:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"14511:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2779,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"14520:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2776,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2784,2850],"referencedDeclaration":2850,"src":"14498:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"ExpressionStatement","src":"14498:33:17"}]},"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"13981:432:17","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:17","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"to","nameLocation":"14444:2:17","nodeType":"VariableDeclaration","scope":2784,"src":"14436:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:17","nodeType":"VariableDeclaration","scope":2784,"src":"14448:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"auth","nameLocation":"14473:4:17","nodeType":"VariableDeclaration","scope":2784,"src":"14465:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:17"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"14488:0:17"},"scope":2981,"src":"14418:120:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"14814:568:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"14880:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"14893:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:17","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"14876:460:17","trueBody":{"id":2841,"nodeType":"Block","src":"14913:423:17","statements":[{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"owner","nameLocation":"14935:5:17","nodeType":"VariableDeclaration","scope":2841,"src":"14927:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2809,"initialValue":{"arguments":[{"id":2807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"14957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2806,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"14943:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15093:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:17","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"15115:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2817,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15124:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:17","subExpression":{"arguments":[{"id":2821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"15150:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2822,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15157:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2820,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"15133:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2831,"nodeType":"IfStatement","src":"15089:142:17","trueBody":{"id":2830,"nodeType":"Block","src":"15164:67:17","statements":[{"errorCall":{"arguments":[{"id":2827,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15211:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2826,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"15189:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2829,"nodeType":"RevertStatement","src":"15182:34:17"}]}},{"condition":{"id":2832,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"15249:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2840,"nodeType":"IfStatement","src":"15245:81:17","trueBody":{"id":2839,"nodeType":"Block","src":"15260:66:17","statements":[{"eventCall":{"arguments":[{"id":2834,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"15292:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"15299:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"15303:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"15283:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"EmitStatement","src":"15278:33:17"}]}}]}},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2843,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"15346:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2845,"indexExpression":{"id":2844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"15362:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"15373:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2848,"nodeType":"ExpressionStatement","src":"15346:29:17"}]},"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"14544:171:17","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:17","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"to","nameLocation":"14746:2:17","nodeType":"VariableDeclaration","scope":2850,"src":"14738:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2786,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:17","nodeType":"VariableDeclaration","scope":2850,"src":"14750:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"auth","nameLocation":"14775:4:17","nodeType":"VariableDeclaration","scope":2850,"src":"14767:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2790,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:17","nodeType":"VariableDeclaration","scope":2850,"src":"14781:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2792,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:17"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"14814:0:17"},"scope":2981,"src":"14720:662:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"15684:219:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15698:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:17","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2871,"nodeType":"IfStatement","src":"15694:91:17","trueBody":{"id":2870,"nodeType":"Block","src":"15722:63:17","statements":[{"errorCall":{"arguments":[{"id":2867,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15765:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2866,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"15743:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"RevertStatement","src":"15736:38:17"}]}},{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2872,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"15794:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2875,"indexExpression":{"id":2873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"15813:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2876,"indexExpression":{"id":2874,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15820:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2877,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"15832:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"nodeType":"ExpressionStatement","src":"15794:46:17"},{"eventCall":{"arguments":[{"id":2881,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"15870:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2882,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15877:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2883,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"15887:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2880,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"15855:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2885,"nodeType":"EmitStatement","src":"15850:46:17"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"15388:198:17","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:17","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"owner","nameLocation":"15627:5:17","nodeType":"VariableDeclaration","scope":2887,"src":"15619:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"operator","nameLocation":"15642:8:17","nodeType":"VariableDeclaration","scope":2887,"src":"15634:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"approved","nameLocation":"15657:8:17","nodeType":"VariableDeclaration","scope":2887,"src":"15652:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2856,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:17"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"15684:0:17"},"scope":2981,"src":"15591:312:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2915,"nodeType":"Block","src":"16210:169:17","statements":[{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"owner","nameLocation":"16228:5:17","nodeType":"VariableDeclaration","scope":2915,"src":"16220:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2900,"initialValue":{"arguments":[{"id":2898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"16245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2897,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"16236:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"16267:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:17","typeDescriptions":{}}},"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"16263:88:17","trueBody":{"id":2911,"nodeType":"Block","src":"16288:63:17","statements":[{"errorCall":{"arguments":[{"id":2908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"16332:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"16309:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"RevertStatement","src":"16302:38:17"}]}},{"expression":{"id":2913,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"16367:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2894,"id":2914,"nodeType":"Return","src":"16360:12:17"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"15909:224:17","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:17","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:17","nodeType":"VariableDeclaration","scope":2916,"src":"16161:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:17"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"16201:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:17"},"scope":2981,"src":"16138:241:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2979,"nodeType":"Block","src":"17020:680:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2928,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"17034:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:17","memberName":"code","nodeType":"MemberAccess","src":"17034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:17","memberName":"length","nodeType":"MemberAccess","src":"17034:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2978,"nodeType":"IfStatement","src":"17030:664:17","trueBody":{"id":2977,"nodeType":"Block","src":"17054:640:17","statements":[{"clauses":[{"block":{"id":2957,"nodeType":"Block","src":"17168:162:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2947,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"17200:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3116_$","typeString":"type(contract IERC721Receiver)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"17200:32:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:17","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"nodeType":"IfStatement","src":"17186:130:17","trueBody":{"id":2955,"nodeType":"Block","src":"17243:73:17","statements":[{"errorCall":{"arguments":[{"id":2952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"17294:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2951,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"17272:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2954,"nodeType":"RevertStatement","src":"17265:32:17"}]}}]},"errorName":"","id":2958,"nodeType":"TryCatchClause","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"retval","nameLocation":"17160:6:17","nodeType":"VariableDeclaration","scope":2958,"src":"17153:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2943,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:17"},"src":"17144:186:17"},{"block":{"id":2974,"nodeType":"Block","src":"17359:325:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2962,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"17381:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:17","memberName":"length","nodeType":"MemberAccess","src":"17381:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2972,"nodeType":"Block","src":"17480:190:17","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:17","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:17"},"nodeType":"YulFunctionCall","src":"17599:15:17"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:17"},"nodeType":"YulFunctionCall","src":"17616:13:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:17"},"nodeType":"YulFunctionCall","src":"17592:38:17"},"nodeType":"YulExpressionStatement","src":"17592:38:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2960,"isOffset":false,"isSlot":false,"src":"17607:6:17","valueSize":1},{"declaration":2960,"isOffset":false,"isSlot":false,"src":"17622:6:17","valueSize":1}],"id":2971,"nodeType":"InlineAssembly","src":"17557:95:17"}]},"id":2973,"nodeType":"IfStatement","src":"17377:293:17","trueBody":{"id":2970,"nodeType":"Block","src":"17401:73:17","statements":[{"errorCall":{"arguments":[{"id":2967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"17452:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2966,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"17430:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"RevertStatement","src":"17423:32:17"}]}}]},"errorName":"","id":2975,"nodeType":"TryCatchClause","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"reason","nameLocation":"17351:6:17","nodeType":"VariableDeclaration","scope":2975,"src":"17338:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2959,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:17"},"src":"17331:353:17"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"17109:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"17123:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"17129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2941,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"17138:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"17088:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2933,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"17072:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3116_$","typeString":"type(contract IERC721Receiver)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3116","typeString":"contract IERC721Receiver"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"17072:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2976,"nodeType":"TryStatement","src":"17068:616:17"}]}}]},"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"16385:528:17","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:17","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"from","nameLocation":"16958:4:17","nodeType":"VariableDeclaration","scope":2980,"src":"16950:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"to","nameLocation":"16972:2:17","nodeType":"VariableDeclaration","scope":2980,"src":"16964:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:17","nodeType":"VariableDeclaration","scope":2980,"src":"16976:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"data","nameLocation":"17006:4:17","nodeType":"VariableDeclaration","scope":2980,"src":"16993:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2924,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:17"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[],"src":"17020:0:17"},"scope":2981,"src":"16918:782:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2982,"src":"776:16926:17","usedErrors":[908,913,922,927,932,939,944,949],"usedEvents":[2997,3006,3015]}],"src":"107:17596:17"},"id":17},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4744],"IERC721":[3098]},"id":3099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":4745,"src":"134:62:18","symbolAliases":[{"foreign":{"id":2984,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"142:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2987,"name":"IERC165","nameLocations":["287:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"287:7:18"},"id":2988,"nodeType":"InheritanceSpecifier","src":"287:7:18"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"198:67:18","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":3098,"linearizedBaseContracts":[3098,4744],"name":"IERC721","nameLocation":"276:7:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"301:88:18","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2997,"name":"Transfer","nameLocation":"400:8:18","nodeType":"EventDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:18","nodeType":"VariableDeclaration","scope":2997,"src":"409:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2993,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:18","nodeType":"VariableDeclaration","scope":2997,"src":"431:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:18","nodeType":"VariableDeclaration","scope":2997,"src":"451:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:18"},"src":"394:82:18"},{"anonymous":false,"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"482:94:18","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3006,"name":"Approval","nameLocation":"587:8:18","nodeType":"EventDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:18","nodeType":"VariableDeclaration","scope":3006,"src":"596:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3002,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:18","nodeType":"VariableDeclaration","scope":3006,"src":"619:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3004,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:18","nodeType":"VariableDeclaration","scope":3006,"src":"645:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:18"},"src":"581:89:18"},{"anonymous":false,"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"676:117:18","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3015,"name":"ApprovalForAll","nameLocation":"804:14:18","nodeType":"EventDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:18","nodeType":"VariableDeclaration","scope":3015,"src":"819:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:18","nodeType":"VariableDeclaration","scope":3015,"src":"842:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3013,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:18","nodeType":"VariableDeclaration","scope":3015,"src":"868:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3012,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:18"},"src":"798:85:18"},{"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"889:76:18","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3023,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:18","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"owner","nameLocation":"997:5:18","nodeType":"VariableDeclaration","scope":3023,"src":"989:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3017,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:18"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"balance","nameLocation":"1035:7:18","nodeType":"VariableDeclaration","scope":3023,"src":"1027:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:18"},"scope":3098,"src":"970:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"1050:131:18","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3031,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:18","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:18","nodeType":"VariableDeclaration","scope":3031,"src":"1203:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:18"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"owner","nameLocation":"1251:5:18","nodeType":"VariableDeclaration","scope":3031,"src":"1243:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:18"},"scope":3098,"src":"1186:72:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"1264:565:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3043,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:18","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"from","nameLocation":"1868:4:18","nodeType":"VariableDeclaration","scope":3043,"src":"1860:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"to","nameLocation":"1882:2:18","nodeType":"VariableDeclaration","scope":3043,"src":"1874:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:18","nodeType":"VariableDeclaration","scope":3043,"src":"1886:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"data","nameLocation":"1918:4:18","nodeType":"VariableDeclaration","scope":3043,"src":"1903:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3039,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:18"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[],"src":"1932:0:18"},"scope":3098,"src":"1834:99:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"1939:705:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3053,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:18","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"from","nameLocation":"2683:4:18","nodeType":"VariableDeclaration","scope":3053,"src":"2675:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"to","nameLocation":"2697:2:18","nodeType":"VariableDeclaration","scope":3053,"src":"2689:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:18","nodeType":"VariableDeclaration","scope":3053,"src":"2701:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:18"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[],"src":"2726:0:18"},"scope":3098,"src":"2649:78:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"2733:732:18","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3063,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:18","nodeType":"FunctionDefinition","parameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"from","nameLocation":"3500:4:18","nodeType":"VariableDeclaration","scope":3063,"src":"3492:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"to","nameLocation":"3514:2:18","nodeType":"VariableDeclaration","scope":3063,"src":"3506:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:18","nodeType":"VariableDeclaration","scope":3063,"src":"3518:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:18"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[],"src":"3543:0:18"},"scope":3098,"src":"3470:74:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3064,"nodeType":"StructuredDocumentation","src":"3550:452:18","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3071,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:18","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"to","nameLocation":"4032:2:18","nodeType":"VariableDeclaration","scope":3071,"src":"4024:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:18","nodeType":"VariableDeclaration","scope":3071,"src":"4036:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:18"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"4061:0:18"},"scope":3098,"src":"4007:55:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"4068:315:18","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3079,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:18","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"operator","nameLocation":"4423:8:18","nodeType":"VariableDeclaration","scope":3079,"src":"4415:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"approved","nameLocation":"4438:8:18","nodeType":"VariableDeclaration","scope":3079,"src":"4433:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3075,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:18"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[],"src":"4456:0:18"},"scope":3098,"src":"4388:69:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"4463:139:18","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3087,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:18","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:18","nodeType":"VariableDeclaration","scope":3087,"src":"4628:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:18"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"operator","nameLocation":"4676:8:18","nodeType":"VariableDeclaration","scope":3087,"src":"4668:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3084,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:18"},"scope":3098,"src":"4607:79:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"4692:138:18","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3097,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:18","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"owner","nameLocation":"4869:5:18","nodeType":"VariableDeclaration","scope":3097,"src":"4861:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"operator","nameLocation":"4884:8:18","nodeType":"VariableDeclaration","scope":3097,"src":"4876:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:18"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3097,"src":"4917:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3094,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:18"},"scope":3098,"src":"4835:88:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3099,"src":"266:4659:18","usedErrors":[],"usedEvents":[2997,3006,3015]}],"src":"108:4818:18"},"id":18},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3116]},"id":3117,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3100,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"142:152:19","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3116,"linearizedBaseContracts":[3116],"name":"IERC721Receiver","nameLocation":"305:15:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"327:500:19","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3115,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:19","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"operator","nameLocation":"875:8:19","nodeType":"VariableDeclaration","scope":3115,"src":"867:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"from","nameLocation":"901:4:19","nodeType":"VariableDeclaration","scope":3115,"src":"893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:19","nodeType":"VariableDeclaration","scope":3115,"src":"915:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"data","nameLocation":"955:4:19","nodeType":"VariableDeclaration","scope":3115,"src":"940:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:19"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"984:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3112,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:19"},"scope":3116,"src":"832:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3117,"src":"295:699:19","usedErrors":[],"usedEvents":[]}],"src":"116:879:19"},"id":19},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[2981],"ERC721URIStorage":[3242],"IERC165":[4744],"IERC4906":[805],"Strings":[4059]},"id":3243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3118,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3243,"sourceUnit":2982,"src":"154:37:20","symbolAliases":[{"foreign":{"id":3119,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"162:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":3122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3243,"sourceUnit":4060,"src":"192:51:20","symbolAliases":[{"foreign":{"id":3121,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"200:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":3124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3243,"sourceUnit":806,"src":"244:58:20","symbolAliases":[{"foreign":{"id":3123,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"252:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":3126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3243,"sourceUnit":782,"src":"303:56:20","symbolAliases":[{"foreign":{"id":3125,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"311:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3128,"name":"IERC4906","nameLocations":["469:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"469:8:20"},"id":3129,"nodeType":"InheritanceSpecifier","src":"469:8:20"},{"baseName":{"id":3130,"name":"ERC721","nameLocations":["479:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"479:6:20"},"id":3131,"nodeType":"InheritanceSpecifier","src":"479:6:20"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"361:69:20","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":3242,"linearizedBaseContracts":[3242,2981,950,3270,805,3098,4732,4744,3292],"name":"ERC721URIStorage","nameLocation":"449:16:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3134,"libraryName":{"id":3132,"name":"Strings","nameLocations":["498:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"498:7:20"},"nodeType":"UsingForDirective","src":"492:26:20","typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":3140,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"730:20:20","nodeType":"VariableDeclaration","scope":3242,"src":"706:65:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3135,"name":"bytes4","nodeType":"ElementaryTypeName","src":"706:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"760:10:20","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"753:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3136,"name":"bytes4","nodeType":"ElementaryTypeName","src":"753:6:20","typeDescriptions":{}}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":3144,"mutability":"mutable","name":"_tokenURIs","nameLocation":"860:10:20","nodeType":"VariableDeclaration","scope":3242,"src":"817:53:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3143,"keyName":"tokenId","keyNameLocation":"833:7:20","keyType":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"817:34:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3142,"name":"string","nodeType":"ElementaryTypeName","src":"844:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[2073,4743],"body":{"id":3164,"nodeType":"Block","src":"1045:99:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"1062:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3156,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1077:20:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1062:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3160,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"1125:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3158,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1101:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3242_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1107:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2073,"src":"1101:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1101:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1062:75:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3154,"id":3163,"nodeType":"Return","src":"1055:82:20"}]},"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"877:55:20","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"946:17:20","nodeType":"FunctionDefinition","overrides":{"id":3151,"nodeType":"OverrideSpecifier","overrides":[{"id":3149,"name":"ERC721","nameLocations":["1013:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"1013:6:20"},{"id":3150,"name":"IERC165","nameLocations":["1021:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"1021:7:20"}],"src":"1004:25:20"},"parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"interfaceId","nameLocation":"971:11:20","nodeType":"VariableDeclaration","scope":3165,"src":"964:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3146,"name":"bytes4","nodeType":"ElementaryTypeName","src":"964:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"963:20:20"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"1039:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3152,"name":"bool","nodeType":"ElementaryTypeName","src":"1039:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1038:6:20"},"scope":3242,"src":"937:207:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2168],"body":{"id":3221,"nodeType":"Block","src":"1298:505:20","statements":[{"expression":{"arguments":[{"id":3175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1322:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3174,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1308:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3177,"nodeType":"ExpressionStatement","src":"1308:22:20"},{"assignments":[3179],"declarations":[{"constant":false,"id":3179,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:20","nodeType":"VariableDeclaration","scope":3221,"src":"1341:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3178,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3183,"initialValue":{"baseExpression":{"id":3180,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"1367:10:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3182,"indexExpression":{"id":3181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:20"},{"assignments":[3185],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"base","nameLocation":"1410:4:20","nodeType":"VariableDeclaration","scope":3221,"src":"1396:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3184,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3188,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3186,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1417:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3191,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1506:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3189,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:20","typeDescriptions":{}}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:20","memberName":"length","nodeType":"MemberAccess","src":"1500:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"1496:70:20","trueBody":{"id":3198,"nodeType":"Block","src":"1525:41:20","statements":[{"expression":{"id":3196,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1546:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3173,"id":3197,"nodeType":"Return","src":"1539:16:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3202,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1671:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3200,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:20","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:20","memberName":"length","nodeType":"MemberAccess","src":"1665:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3215,"nodeType":"IfStatement","src":"1661:95:20","trueBody":{"id":3214,"nodeType":"Block","src":"1694:62:20","statements":[{"expression":{"arguments":[{"id":3210,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1729:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3211,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1735:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3207,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:20","typeDescriptions":{}}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:20","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:20","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3173,"id":3213,"nodeType":"Return","src":"1708:37:20"}]}},{"expression":{"arguments":[{"id":3218,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1788:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3216,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3242_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:20","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"1773:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3173,"id":3220,"nodeType":"Return","src":"1766:30:20"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"1150:55:20","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:20","nodeType":"FunctionDefinition","overrides":{"id":3170,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:20"},"parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:20","nodeType":"VariableDeclaration","scope":3222,"src":"1228:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:20"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3222,"src":"1283:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3171,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:20"},"scope":3242,"src":"1210:593:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"2003:86:20","statements":[{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3230,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"2013:10:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3232,"indexExpression":{"id":3231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2024:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2013:19:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3233,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"2035:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2013:31:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3235,"nodeType":"ExpressionStatement","src":"2013:31:20"},{"eventCall":{"arguments":[{"id":3237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2074:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"2059:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3239,"nodeType":"EmitStatement","src":"2054:28:20"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"1809:108:20","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1931:12:20","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"tokenId","nameLocation":"1952:7:20","nodeType":"VariableDeclaration","scope":3241,"src":"1944:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1944:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"_tokenURI","nameLocation":"1975:9:20","nodeType":"VariableDeclaration","scope":3241,"src":"1961:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3226,"name":"string","nodeType":"ElementaryTypeName","src":"1961:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1943:42:20"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[],"src":"2003:0:20"},"scope":3242,"src":"1922:167:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3243,"src":"431:1660:20","usedErrors":[908,913,922,927,932,939,944,949],"usedEvents":[797,804,2997,3006,3015]}],"src":"128:1964:20"},"id":20},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3098],"IERC721Metadata":[3270]},"id":3271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3271,"sourceUnit":3099,"src":"153:39:21","symbolAliases":[{"foreign":{"id":3245,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"161:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3248,"name":"IERC721","nameLocations":["357:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3098,"src":"357:7:21"},"id":3249,"nodeType":"InheritanceSpecifier","src":"357:7:21"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"194:133:21","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3270,"linearizedBaseContracts":[3270,3098,4744],"name":"IERC721Metadata","nameLocation":"338:15:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"371:58:21","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3255,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:21","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[],"src":"447:2:21"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"473:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3252,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:21"},"scope":3270,"src":"434:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"494:60:21","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3261,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:21","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[],"src":"574:2:21"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"600:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3258,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:21"},"scope":3270,"src":"559:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"621:90:21","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3269,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:21","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:21","nodeType":"VariableDeclaration","scope":3269,"src":"734:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:21"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"774:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3266,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:21"},"scope":3270,"src":"716:73:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3271,"src":"328:463:21","usedErrors":[],"usedEvents":[2997,3006,3015]}],"src":"127:665:21"},"id":21},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3292]},"id":3293,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3272,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3273,"nodeType":"StructuredDocumentation","src":"127:496:22","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3292,"linearizedBaseContracts":[3292],"name":"Context","nameLocation":"642:7:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3281,"nodeType":"Block","src":"718:34:22","statements":[{"expression":{"expression":{"id":3278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:22","memberName":"sender","nodeType":"MemberAccess","src":"735:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3277,"id":3280,"nodeType":"Return","src":"728:17:22"}]},"id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:22","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[],"src":"675:2:22"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"709:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:22"},"scope":3292,"src":"656:96:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"825:32:22","statements":[{"expression":{"expression":{"id":3287,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:22","memberName":"data","nodeType":"MemberAccess","src":"842:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3286,"id":3289,"nodeType":"Return","src":"835:15:22"}]},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:22","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[],"src":"775:2:22"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"809:14:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3284,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:22"},"scope":3292,"src":"758:99:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3293,"src":"624:235:22","usedErrors":[],"usedEvents":[]}],"src":"101:759:22"},"id":22},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[3360]},"id":3361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3294,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"125:83:23","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":3360,"linearizedBaseContracts":[3360],"name":"Nonces","nameLocation":"227:6:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"240:90:23","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":3302,"name":"InvalidAccountNonce","nameLocation":"341:19:23","nodeType":"ErrorDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"account","nameLocation":"369:7:23","nodeType":"VariableDeclaration","scope":3302,"src":"361:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:23","nodeType":"VariableDeclaration","scope":3302,"src":"378:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:23"},"src":"335:65:23"},{"constant":false,"id":3306,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:23","nodeType":"VariableDeclaration","scope":3360,"src":"406:51:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3305,"keyName":"account","keyNameLocation":"422:7:23","keyType":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":3318,"nodeType":"Block","src":"607:38:23","statements":[{"expression":{"baseExpression":{"id":3314,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"624:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3316,"indexExpression":{"id":3315,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"632:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3313,"id":3317,"nodeType":"Return","src":"617:21:23"}]},"documentation":{"id":3307,"nodeType":"StructuredDocumentation","src":"464:69:23","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:23","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"owner","nameLocation":"562:5:23","nodeType":"VariableDeclaration","scope":3319,"src":"554:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:23"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3319,"src":"598:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:23"},"scope":3360,"src":"538:107:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3333,"nodeType":"Block","src":"828:326:23","statements":[{"id":3332,"nodeType":"UncheckedBlock","src":"1031:117:23","statements":[{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:23","subExpression":{"baseExpression":{"id":3327,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1121:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3329,"indexExpression":{"id":3328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1129:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3326,"id":3331,"nodeType":"Return","src":"1114:23:23"}]}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"651:103:23","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:23","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"owner","nameLocation":"786:5:23","nodeType":"VariableDeclaration","scope":3334,"src":"778:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:23"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3334,"src":"819:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:23"},"scope":3360,"src":"759:395:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"1338:149:23","statements":[{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"current","nameLocation":"1356:7:23","nodeType":"VariableDeclaration","scope":3358,"src":"1348:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3347,"initialValue":{"arguments":[{"id":3345,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1376:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3344,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1366:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"1396:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3349,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1405:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"nodeType":"IfStatement","src":"1392:89:23","trueBody":{"id":3356,"nodeType":"Block","src":"1414:67:23","statements":[{"errorCall":{"arguments":[{"id":3352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1455:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3353,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1462:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3351,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1435:19:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"RevertStatement","src":"1428:42:23"}]}}]},"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"1160:100:23","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:23","nodeType":"FunctionDefinition","parameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"owner","nameLocation":"1299:5:23","nodeType":"VariableDeclaration","scope":3359,"src":"1291:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3336,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:23","nodeType":"VariableDeclaration","scope":3359,"src":"1306:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:23"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[],"src":"1338:0:23"},"scope":3360,"src":"1265:222:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3361,"src":"209:1280:23","usedErrors":[3302],"usedEvents":[]}],"src":"99:1391:23"},"id":23},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3292],"Pausable":[3477]},"id":3478,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3362,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3478,"sourceUnit":3293,"src":"128:45:24","symbolAliases":[{"foreign":{"id":3363,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"136:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3366,"name":"Context","nameLocations":["645:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3292,"src":"645:7:24"},"id":3367,"nodeType":"InheritanceSpecifier","src":"645:7:24"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"175:439:24","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3477,"linearizedBaseContracts":[3477,3292],"name":"Pausable","nameLocation":"633:8:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3369,"mutability":"mutable","name":"_paused","nameLocation":"672:7:24","nodeType":"VariableDeclaration","scope":3477,"src":"659:20:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3368,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"686:73:24","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3374,"name":"Paused","nameLocation":"770:6:24","nodeType":"EventDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:24","nodeType":"VariableDeclaration","scope":3374,"src":"777:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:24"},"src":"764:30:24"},{"anonymous":false,"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"800:70:24","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3379,"name":"Unpaused","nameLocation":"881:8:24","nodeType":"EventDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:24","nodeType":"VariableDeclaration","scope":3379,"src":"890:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3376,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:24"},"src":"875:32:24"},{"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"913:76:24","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3382,"name":"EnforcedPause","nameLocation":"1000:13:24","nodeType":"ErrorDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[],"src":"1013:2:24"},"src":"994:22:24"},{"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"1022:80:24","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3385,"name":"ExpectedPause","nameLocation":"1113:13:24","nodeType":"ErrorDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[],"src":"1126:2:24"},"src":"1107:22:24"},{"body":{"id":3393,"nodeType":"Block","src":"1221:32:24","statements":[{"expression":{"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3389,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"1231:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"ExpressionStatement","src":"1231:15:24"}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"1135:67:24","text":" @dev Initializes the contract in unpaused state."},"id":3394,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[],"src":"1218:2:24"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[],"src":"1221:0:24"},"scope":3477,"src":"1207:46:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"1464:47:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3397,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"1474:17:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3399,"nodeType":"ExpressionStatement","src":"1474:19:24"},{"id":3400,"nodeType":"PlaceholderStatement","src":"1503:1:24"}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"1259:175:24","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3402,"name":"whenNotPaused","nameLocation":"1448:13:24","nodeType":"ModifierDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[],"src":"1461:2:24"},"src":"1439:72:24","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"1711:44:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3405,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"1721:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"ExpressionStatement","src":"1721:16:24"},{"id":3408,"nodeType":"PlaceholderStatement","src":"1747:1:24"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"1517:167:24","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3410,"name":"whenPaused","nameLocation":"1698:10:24","nodeType":"ModifierDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[],"src":"1708:2:24"},"src":"1689:66:24","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"1903:31:24","statements":[{"expression":{"id":3416,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"1920:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3415,"id":3417,"nodeType":"Return","src":"1913:14:24"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"1761:84:24","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:24","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[],"src":"1865:2:24"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"1897:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3413,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:24"},"scope":3477,"src":"1850:84:24","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3430,"nodeType":"Block","src":"2053:77:24","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3423,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"2067:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3429,"nodeType":"IfStatement","src":"2063:61:24","trueBody":{"id":3428,"nodeType":"Block","src":"2077:47:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3425,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"2098:13:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3427,"nodeType":"RevertStatement","src":"2091:22:24"}]}}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"1940:57:24","text":" @dev Throws if the contract is paused."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:24","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[],"src":"2028:2:24"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[],"src":"2053:0:24"},"scope":3477,"src":"2002:128:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3443,"nodeType":"Block","src":"2250:78:24","statements":[{"condition":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3435,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"2265:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3442,"nodeType":"IfStatement","src":"2260:62:24","trueBody":{"id":3441,"nodeType":"Block","src":"2275:47:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3438,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"2296:13:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"RevertStatement","src":"2289:22:24"}]}}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"2136:61:24","text":" @dev Throws if the contract is not paused."},"id":3444,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:24","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[],"src":"2225:2:24"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[],"src":"2250:0:24"},"scope":3477,"src":"2202:126:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"2512:66:24","statements":[{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"2522:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"ExpressionStatement","src":"2522:14:24"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3455,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2558:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2551:6:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"EmitStatement","src":"2546:25:24"}]},"documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"2334:124:24","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3460,"implemented":true,"kind":"function","modifiers":[{"id":3448,"kind":"modifierInvocation","modifierName":{"id":3447,"name":"whenNotPaused","nameLocations":["2498:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3402,"src":"2498:13:24"},"nodeType":"ModifierInvocation","src":"2498:13:24"}],"name":"_pause","nameLocation":"2472:6:24","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[],"src":"2478:2:24"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[],"src":"2512:0:24"},"scope":3477,"src":"2463:115:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3475,"nodeType":"Block","src":"2758:69:24","statements":[{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"2768:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3469,"nodeType":"ExpressionStatement","src":"2768:15:24"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3471,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2807:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3470,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2798:8:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"EmitStatement","src":"2793:27:24"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"2584:121:24","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3476,"implemented":true,"kind":"function","modifiers":[{"id":3464,"kind":"modifierInvocation","modifierName":{"id":3463,"name":"whenPaused","nameLocations":["2747:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3410,"src":"2747:10:24"},"nodeType":"ModifierInvocation","src":"2747:10:24"}],"name":"_unpause","nameLocation":"2719:8:24","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[],"src":"2727:2:24"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[],"src":"2758:0:24"},"scope":3477,"src":"2710:117:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3478,"src":"615:2214:24","usedErrors":[3382,3385],"usedEvents":[3374,3379]}],"src":"102:2728:24"},"id":24},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[3483],"ShortStrings":[3694],"StorageSlot":[3804]},"id":3695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3479,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3481,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3695,"sourceUnit":3805,"src":"132:46:25","symbolAliases":[{"foreign":{"id":3480,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"140:11:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":3483,"name":"ShortString","nameLocation":"353:11:25","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:25","underlyingType":{"id":3482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"378:876:25","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":3694,"linearizedBaseContracts":[3694],"name":"ShortStrings","nameLocation":"1263:12:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3487,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:25","nodeType":"VariableDeclaration","scope":3694,"src":"1345:111:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":3491,"name":"StringTooLong","nameLocation":"1469:13:25","nodeType":"ErrorDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"str","nameLocation":"1490:3:25","nodeType":"VariableDeclaration","scope":3491,"src":"1483:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3488,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:25"},"src":"1463:32:25"},{"errorSelector":"b3512b0c","id":3493,"name":"InvalidShortString","nameLocation":"1506:18:25","nodeType":"ErrorDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"1524:2:25"},"src":"1500:27:25"},{"body":{"id":3536,"nodeType":"Block","src":"1786:208:25","statements":[{"assignments":[3503],"declarations":[{"constant":false,"id":3503,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:25","nodeType":"VariableDeclaration","scope":3536,"src":"1796:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3502,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3508,"initialValue":{"arguments":[{"id":3506,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"1822:3:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3504,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:25","typeDescriptions":{}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3509,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1840:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:25","memberName":"length","nodeType":"MemberAccess","src":"1840:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:25","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"IfStatement","src":"1836:72:25","trueBody":{"id":3517,"nodeType":"Block","src":"1858:50:25","statements":[{"errorCall":{"arguments":[{"id":3514,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"1893:3:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3513,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"1879:13:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3516,"nodeType":"RevertStatement","src":"1872:25:25"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3527,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1965:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:25","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:25","typeDescriptions":{}}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":3530,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1974:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:25","memberName":"length","nodeType":"MemberAccess","src":"1974:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:25","typeDescriptions":{}}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3519,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"1924:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"type(ShortString)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:25","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:25","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"functionReturnParameters":3501,"id":3535,"nodeType":"Return","src":"1917:70:25"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"1533:170:25","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:25","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"str","nameLocation":"1745:3:25","nodeType":"VariableDeclaration","scope":3537,"src":"1731:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3495,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:25"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3537,"src":"1773:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3499,"nodeType":"UserDefinedTypeName","pathNode":{"id":3498,"name":"ShortString","nameLocations":["1773:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"1773:11:25"},"referencedDeclaration":3483,"src":"1773:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:25"},"scope":3694,"src":"1708:286:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"2152:331:25","statements":[{"assignments":[3547],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"len","nameLocation":"2170:3:25","nodeType":"VariableDeclaration","scope":3562,"src":"2162:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3551,"initialValue":{"arguments":[{"id":3549,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"2187:4:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"id":3548,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"2176:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:25"},{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"str","nameLocation":"2294:3:25","nodeType":"VariableDeclaration","scope":3562,"src":"2280:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3552,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3558,"initialValue":{"arguments":[{"hexValue":"3332","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3554,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:25"},{"AST":{"nodeType":"YulBlock","src":"2376:81:25","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2397:3:25"},{"name":"len","nodeType":"YulIdentifier","src":"2402:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:25"},"nodeType":"YulFunctionCall","src":"2390:16:25"},"nodeType":"YulExpressionStatement","src":"2390:16:25"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2430:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:25"},"nodeType":"YulFunctionCall","src":"2426:14:25"},{"name":"sstr","nodeType":"YulIdentifier","src":"2442:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:25"},"nodeType":"YulFunctionCall","src":"2419:28:25"},"nodeType":"YulExpressionStatement","src":"2419:28:25"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3547,"isOffset":false,"isSlot":false,"src":"2402:3:25","valueSize":1},{"declaration":3541,"isOffset":false,"isSlot":false,"src":"2442:4:25","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"2397:3:25","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"2430:3:25","valueSize":1}],"id":3559,"nodeType":"InlineAssembly","src":"2367:90:25"},{"expression":{"id":3560,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"2473:3:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3545,"id":3561,"nodeType":"Return","src":"2466:10:25"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"2000:73:25","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:25","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:25","nodeType":"VariableDeclaration","scope":3563,"src":"2096:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3540,"nodeType":"UserDefinedTypeName","pathNode":{"id":3539,"name":"ShortString","nameLocations":["2096:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"2096:11:25"},"referencedDeclaration":3483,"src":"2096:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:25"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"2137:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3543,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:25"},"scope":3694,"src":"2078:405:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"2625:175:25","statements":[{"assignments":[3573],"declarations":[{"constant":false,"id":3573,"mutability":"mutable","name":"result","nameLocation":"2643:6:25","nodeType":"VariableDeclaration","scope":3594,"src":"2635:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3583,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3578,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2679:4:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"expression":{"id":3576,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"2660:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"type(ShortString)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:25","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:25","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:25","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"2706:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:25","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"2702:69:25","trueBody":{"id":3590,"nodeType":"Block","src":"2719:52:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3587,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"2740:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3589,"nodeType":"RevertStatement","src":"2733:27:25"}]}},{"expression":{"id":3592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"2787:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3571,"id":3593,"nodeType":"Return","src":"2780:13:25"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"2489:61:25","text":" @dev Return the length of a `ShortString`."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:25","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:25","nodeType":"VariableDeclaration","scope":3595,"src":"2575:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3566,"nodeType":"UserDefinedTypeName","pathNode":{"id":3565,"name":"ShortString","nameLocations":["2575:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"2575:11:25"},"referencedDeclaration":3483,"src":"2575:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:25"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"2616:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:25"},"scope":3694,"src":"2555:245:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"3023:231:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"3043:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3606,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:25","typeDescriptions":{}}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:25","memberName":"length","nodeType":"MemberAccess","src":"3037:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3632,"nodeType":"Block","src":"3121:127:25","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3621,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3161:5:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":3618,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"3135:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3804_$","typeString":"type(library StorageSlot)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:25","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"3135:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$3712_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3712_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":3623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:25","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"3135:38:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"3176:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3626,"nodeType":"ExpressionStatement","src":"3135:46:25"},{"expression":{"arguments":[{"id":3629,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3219:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3627,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3202:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"type(ShortString)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:25","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:25","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"functionReturnParameters":3605,"id":3631,"nodeType":"Return","src":"3195:42:25"}]},"id":3633,"nodeType":"IfStatement","src":"3033:215:25","trueBody":{"id":3617,"nodeType":"Block","src":"3063:52:25","statements":[{"expression":{"arguments":[{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"3098:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3613,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"3084:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"functionReturnParameters":3605,"id":3616,"nodeType":"Return","src":"3077:27:25"}]}}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"2806:103:25","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:25","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"value","nameLocation":"2963:5:25","nodeType":"VariableDeclaration","scope":3635,"src":"2949:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3597,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"store","nameLocation":"2985:5:25","nodeType":"VariableDeclaration","scope":3635,"src":"2970:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3599,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:25"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"3010:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3603,"nodeType":"UserDefinedTypeName","pathNode":{"id":3602,"name":"ShortString","nameLocations":["3010:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"3010:11:25"},"referencedDeclaration":3483,"src":"3010:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:25"},"scope":3694,"src":"2914:340:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"3494:158:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"3527:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"expression":{"id":3646,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3508:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"type(ShortString)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:25","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:25","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3650,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3537:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3659,"nodeType":"Block","src":"3609:37:25","statements":[{"expression":{"id":3657,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3630:5:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":3645,"id":3658,"nodeType":"Return","src":"3623:12:25"}]},"id":3660,"nodeType":"IfStatement","src":"3504:142:25","trueBody":{"id":3656,"nodeType":"Block","src":"3556:47:25","statements":[{"expression":{"arguments":[{"id":3653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"3586:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"id":3652,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"3577:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3645,"id":3655,"nodeType":"Return","src":"3570:22:25"}]}}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"3260:120:25","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:25","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"value","nameLocation":"3427:5:25","nodeType":"VariableDeclaration","scope":3662,"src":"3415:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3638,"nodeType":"UserDefinedTypeName","pathNode":{"id":3637,"name":"ShortString","nameLocations":["3415:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"3415:11:25"},"referencedDeclaration":3483,"src":"3415:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"store","nameLocation":"3449:5:25","nodeType":"VariableDeclaration","scope":3662,"src":"3434:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3640,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:25"},"returnParameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"3479:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3643,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:25"},"scope":3694,"src":"3385:267:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3692,"nodeType":"Block","src":"4132:174:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"4165:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"expression":{"id":3673,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"4146:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"type(ShortString)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:25","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:25","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3677,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4175:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3690,"nodeType":"Block","src":"4249:51:25","statements":[{"expression":{"expression":{"arguments":[{"id":3686,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"4276:5:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3684,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:25","typeDescriptions":{}}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:25","memberName":"length","nodeType":"MemberAccess","src":"4270:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3672,"id":3689,"nodeType":"Return","src":"4263:26:25"}]},"id":3691,"nodeType":"IfStatement","src":"4142:158:25","trueBody":{"id":3683,"nodeType":"Block","src":"4194:49:25","statements":[{"expression":{"arguments":[{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"4226:5:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}],"id":3679,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"4215:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3483_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3672,"id":3682,"nodeType":"Return","src":"4208:24:25"}]}}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"3658:364:25","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":3693,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:25","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"value","nameLocation":"4071:5:25","nodeType":"VariableDeclaration","scope":3693,"src":"4059:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":3665,"nodeType":"UserDefinedTypeName","pathNode":{"id":3664,"name":"ShortString","nameLocations":["4059:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"4059:11:25"},"referencedDeclaration":3483,"src":"4059:11:25","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"store","nameLocation":"4093:5:25","nodeType":"VariableDeclaration","scope":3693,"src":"4078:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3667,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:25"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3693,"src":"4123:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:25"},"scope":3694,"src":"4027:279:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3695,"src":"1255:3053:25","usedErrors":[3491,3493],"usedEvents":[]}],"src":"106:4203:25"},"id":25},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3804]},"id":3805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3696,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"219:1025:26","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":3804,"linearizedBaseContracts":[3804],"name":"StorageSlot","nameLocation":"1253:11:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3700,"members":[{"constant":false,"id":3699,"mutability":"mutable","name":"value","nameLocation":"1308:5:26","nodeType":"VariableDeclaration","scope":3700,"src":"1300:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:26","nodeType":"StructDefinition","scope":3804,"src":"1271:49:26","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3703,"members":[{"constant":false,"id":3702,"mutability":"mutable","name":"value","nameLocation":"1360:5:26","nodeType":"VariableDeclaration","scope":3703,"src":"1355:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3701,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:26","nodeType":"StructDefinition","scope":3804,"src":"1326:46:26","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3706,"members":[{"constant":false,"id":3705,"mutability":"mutable","name":"value","nameLocation":"1415:5:26","nodeType":"VariableDeclaration","scope":3706,"src":"1407:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:26","nodeType":"StructDefinition","scope":3804,"src":"1378:49:26","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3709,"members":[{"constant":false,"id":3708,"mutability":"mutable","name":"value","nameLocation":"1470:5:26","nodeType":"VariableDeclaration","scope":3709,"src":"1462:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:26","nodeType":"StructDefinition","scope":3804,"src":"1433:49:26","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3712,"members":[{"constant":false,"id":3711,"mutability":"mutable","name":"value","nameLocation":"1523:5:26","nodeType":"VariableDeclaration","scope":3712,"src":"1516:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3710,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:26","nodeType":"StructDefinition","scope":3804,"src":"1488:47:26","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3715,"members":[{"constant":false,"id":3714,"mutability":"mutable","name":"value","nameLocation":"1574:5:26","nodeType":"VariableDeclaration","scope":3715,"src":"1568:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3713,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:26","nodeType":"StructDefinition","scope":3804,"src":"1541:45:26","visibility":"public"},{"body":{"id":3725,"nodeType":"Block","src":"1768:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:26","statements":[{"nodeType":"YulAssignment","src":"1844:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3722,"isOffset":false,"isSlot":true,"src":"1844:6:26","suffix":"slot","valueSize":1},{"declaration":3718,"isOffset":false,"isSlot":false,"src":"1854:4:26","valueSize":1}],"id":3724,"nodeType":"InlineAssembly","src":"1821:47:26"}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"1592:87:26","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:26","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"slot","nameLocation":"1716:4:26","nodeType":"VariableDeclaration","scope":3726,"src":"1708:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:26"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"r","nameLocation":"1765:1:26","nodeType":"VariableDeclaration","scope":3726,"src":"1745:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3700_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3721,"nodeType":"UserDefinedTypeName","pathNode":{"id":3720,"name":"AddressSlot","nameLocations":["1745:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3700,"src":"1745:11:26"},"referencedDeclaration":3700,"src":"1745:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3700_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:26"},"scope":3804,"src":"1684:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3736,"nodeType":"Block","src":"2056:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:26","statements":[{"nodeType":"YulAssignment","src":"2132:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3733,"isOffset":false,"isSlot":true,"src":"2132:6:26","suffix":"slot","valueSize":1},{"declaration":3729,"isOffset":false,"isSlot":false,"src":"2142:4:26","valueSize":1}],"id":3735,"nodeType":"InlineAssembly","src":"2109:47:26"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"1880:87:26","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3737,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:26","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"slot","nameLocation":"2004:4:26","nodeType":"VariableDeclaration","scope":3737,"src":"1996:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:26"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"r","nameLocation":"2053:1:26","nodeType":"VariableDeclaration","scope":3737,"src":"2033:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3703_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3732,"nodeType":"UserDefinedTypeName","pathNode":{"id":3731,"name":"BooleanSlot","nameLocations":["2033:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3703,"src":"2033:11:26"},"referencedDeclaration":3703,"src":"2033:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3703_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:26"},"scope":3804,"src":"1972:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"2344:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:26","statements":[{"nodeType":"YulAssignment","src":"2420:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3744,"isOffset":false,"isSlot":true,"src":"2420:6:26","suffix":"slot","valueSize":1},{"declaration":3740,"isOffset":false,"isSlot":false,"src":"2430:4:26","valueSize":1}],"id":3746,"nodeType":"InlineAssembly","src":"2397:47:26"}]},"documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"2168:87:26","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:26","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"slot","nameLocation":"2292:4:26","nodeType":"VariableDeclaration","scope":3748,"src":"2284:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:26"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"r","nameLocation":"2341:1:26","nodeType":"VariableDeclaration","scope":3748,"src":"2321:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3706_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3743,"nodeType":"UserDefinedTypeName","pathNode":{"id":3742,"name":"Bytes32Slot","nameLocations":["2321:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3706,"src":"2321:11:26"},"referencedDeclaration":3706,"src":"2321:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3706_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:26"},"scope":3804,"src":"2260:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"2632:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:26","statements":[{"nodeType":"YulAssignment","src":"2708:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3755,"isOffset":false,"isSlot":true,"src":"2708:6:26","suffix":"slot","valueSize":1},{"declaration":3751,"isOffset":false,"isSlot":false,"src":"2718:4:26","valueSize":1}],"id":3757,"nodeType":"InlineAssembly","src":"2685:47:26"}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"2456:87:26","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:26","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"slot","nameLocation":"2580:4:26","nodeType":"VariableDeclaration","scope":3759,"src":"2572:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:26"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"r","nameLocation":"2629:1:26","nodeType":"VariableDeclaration","scope":3759,"src":"2609:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3709_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3754,"nodeType":"UserDefinedTypeName","pathNode":{"id":3753,"name":"Uint256Slot","nameLocations":["2609:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"2609:11:26"},"referencedDeclaration":3709,"src":"2609:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3709_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:26"},"scope":3804,"src":"2548:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"2917:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:26","statements":[{"nodeType":"YulAssignment","src":"2993:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3766,"isOffset":false,"isSlot":true,"src":"2993:6:26","suffix":"slot","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"3003:4:26","valueSize":1}],"id":3768,"nodeType":"InlineAssembly","src":"2970:47:26"}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"2744:86:26","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:26","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"slot","nameLocation":"2866:4:26","nodeType":"VariableDeclaration","scope":3770,"src":"2858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:26"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"r","nameLocation":"2914:1:26","nodeType":"VariableDeclaration","scope":3770,"src":"2895:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3712_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"StringSlot","nameLocations":["2895:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"2895:10:26"},"referencedDeclaration":3712,"src":"2895:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3712_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:26"},"scope":3804,"src":"2835:188:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3780,"nodeType":"Block","src":"3225:112:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:26","statements":[{"nodeType":"YulAssignment","src":"3301:20:26","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3777,"isOffset":false,"isSlot":true,"src":"3301:6:26","suffix":"slot","valueSize":1},{"declaration":3773,"isOffset":false,"isSlot":true,"src":"3311:10:26","suffix":"slot","valueSize":1}],"id":3779,"nodeType":"InlineAssembly","src":"3278:53:26"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"3029:101:26","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:26","nodeType":"FunctionDefinition","parameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"store","nameLocation":"3173:5:26","nodeType":"VariableDeclaration","scope":3781,"src":"3158:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3772,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:26"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"r","nameLocation":"3222:1:26","nodeType":"VariableDeclaration","scope":3781,"src":"3203:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3712_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3776,"nodeType":"UserDefinedTypeName","pathNode":{"id":3775,"name":"StringSlot","nameLocations":["3203:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"3203:10:26"},"referencedDeclaration":3712,"src":"3203:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3712_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:26"},"scope":3804,"src":"3135:202:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3513:106:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:26","statements":[{"nodeType":"YulAssignment","src":"3589:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3788,"isOffset":false,"isSlot":true,"src":"3589:6:26","suffix":"slot","valueSize":1},{"declaration":3784,"isOffset":false,"isSlot":false,"src":"3599:4:26","valueSize":1}],"id":3790,"nodeType":"InlineAssembly","src":"3566:47:26"}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"3343:85:26","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:26","nodeType":"FunctionDefinition","parameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"slot","nameLocation":"3463:4:26","nodeType":"VariableDeclaration","scope":3792,"src":"3455:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:26"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"r","nameLocation":"3510:1:26","nodeType":"VariableDeclaration","scope":3792,"src":"3492:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3715_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3787,"nodeType":"UserDefinedTypeName","pathNode":{"id":3786,"name":"BytesSlot","nameLocations":["3492:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"3492:9:26"},"referencedDeclaration":3715,"src":"3492:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3715_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:26"},"scope":3804,"src":"3433:186:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3802,"nodeType":"Block","src":"3816:112:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:26","statements":[{"nodeType":"YulAssignment","src":"3892:20:26","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3799,"isOffset":false,"isSlot":true,"src":"3892:6:26","suffix":"slot","valueSize":1},{"declaration":3795,"isOffset":false,"isSlot":true,"src":"3902:10:26","suffix":"slot","valueSize":1}],"id":3801,"nodeType":"InlineAssembly","src":"3869:53:26"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3625:99:26","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:26","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"store","nameLocation":"3765:5:26","nodeType":"VariableDeclaration","scope":3803,"src":"3751:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3794,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:26"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"r","nameLocation":"3813:1:26","nodeType":"VariableDeclaration","scope":3803,"src":"3795:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3715_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3798,"nodeType":"UserDefinedTypeName","pathNode":{"id":3797,"name":"BytesSlot","nameLocations":["3795:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"3795:9:26"},"referencedDeclaration":3715,"src":"3795:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3715_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:26"},"scope":3804,"src":"3729:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3805,"src":"1245:2685:26","usedErrors":[],"usedEvents":[]}],"src":"193:3738:26"},"id":26},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5798],"SignedMath":[7658],"Strings":[4059]},"id":4060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3806,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4060,"sourceUnit":5799,"src":"127:37:27","symbolAliases":[{"foreign":{"id":3807,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"135:4:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4060,"sourceUnit":7659,"src":"165:49:27","symbolAliases":[{"foreign":{"id":3809,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"173:10:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"216:34:27","text":" @dev String operations."},"fullyImplemented":true,"id":4059,"linearizedBaseContracts":[4059],"name":"Strings","nameLocation":"259:7:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3814,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:27","nodeType":"VariableDeclaration","scope":4059,"src":"273:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3812,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3817,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:27","nodeType":"VariableDeclaration","scope":4059,"src":"335:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3815,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"384:81:27","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3824,"name":"StringsInsufficientHexLength","nameLocation":"476:28:27","nodeType":"ErrorDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"value","nameLocation":"513:5:27","nodeType":"VariableDeclaration","scope":3824,"src":"505:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"length","nameLocation":"528:6:27","nodeType":"VariableDeclaration","scope":3824,"src":"520:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:27"},"src":"470:66:27"},{"body":{"id":3871,"nodeType":"Block","src":"708:627:27","statements":[{"id":3870,"nodeType":"UncheckedBlock","src":"718:611:27","statements":[{"assignments":[3833],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"length","nameLocation":"750:6:27","nodeType":"VariableDeclaration","scope":3870,"src":"742:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3840,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"770:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3834,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"759:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:27","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5618,"src":"759:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:27"},{"assignments":[3842],"declarations":[{"constant":false,"id":3842,"mutability":"mutable","name":"buffer","nameLocation":"808:6:27","nodeType":"VariableDeclaration","scope":3870,"src":"794:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3841,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3847,"initialValue":{"arguments":[{"id":3845,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"828:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3843,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:27"},{"assignments":[3849],"declarations":[{"constant":false,"id":3849,"mutability":"mutable","name":"ptr","nameLocation":"857:3:27","nodeType":"VariableDeclaration","scope":3870,"src":"849:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3850,"nodeType":"VariableDeclarationStatement","src":"849:11:27"},{"AST":{"nodeType":"YulBlock","src":"930:67:27","statements":[{"nodeType":"YulAssignment","src":"948:35:27","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:27","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:27"},"nodeType":"YulFunctionCall","src":"967:15:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:27"},"nodeType":"YulFunctionCall","src":"955:28:27"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3842,"isOffset":false,"isSlot":false,"src":"959:6:27","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"975:6:27","valueSize":1},{"declaration":3849,"isOffset":false,"isSlot":false,"src":"948:3:27","valueSize":1}],"id":3851,"nodeType":"InlineAssembly","src":"921:76:27"},{"body":{"id":3866,"nodeType":"Block","src":"1023:269:27","statements":[{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:27","subExpression":{"id":3853,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"1041:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"1041:5:27"},{"AST":{"nodeType":"YulBlock","src":"1124:86:27","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:27","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:27"},"nodeType":"YulFunctionCall","src":"1164:14:27"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:27"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:27"},"nodeType":"YulFunctionCall","src":"1159:32:27"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:27"},"nodeType":"YulFunctionCall","src":"1146:46:27"},"nodeType":"YulExpressionStatement","src":"1146:46:27"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3814,"isOffset":false,"isSlot":false,"src":"1180:10:27","valueSize":1},{"declaration":3849,"isOffset":false,"isSlot":false,"src":"1154:3:27","valueSize":1},{"declaration":3827,"isOffset":false,"isSlot":false,"src":"1168:5:27","valueSize":1}],"id":3856,"nodeType":"InlineAssembly","src":"1115:95:27"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"1227:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"1227:11:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"1260:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3865,"nodeType":"IfStatement","src":"1256:21:27","trueBody":{"id":3864,"nodeType":"Break","src":"1272:5:27"}}]},"condition":{"hexValue":"74727565","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3867,"nodeType":"WhileStatement","src":"1010:282:27"},{"expression":{"id":3868,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"1312:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3831,"id":3869,"nodeType":"Return","src":"1305:13:27"}]}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"542:90:27","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:27","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"value","nameLocation":"663:5:27","nodeType":"VariableDeclaration","scope":3872,"src":"655:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:27"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"693:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:27"},"scope":4059,"src":"637:698:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"1511:92:27","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"1542:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:27","trueExpression":{"hexValue":"2d","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"1588:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3890,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"1573:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7658_$","typeString":"type(library SignedMath)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7657,"src":"1573:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3889,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"1564:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3880,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:27","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:27","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:27","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3879,"id":3896,"nodeType":"Return","src":"1521:75:27"}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"1341:89:27","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:27","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"value","nameLocation":"1466:5:27","nodeType":"VariableDeclaration","scope":3898,"src":"1459:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3874,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:27"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"1496:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3877,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:27"},"scope":4059,"src":"1435:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"1782:100:27","statements":[{"id":3916,"nodeType":"UncheckedBlock","src":"1792:84:27","statements":[{"expression":{"arguments":[{"id":3907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"1835:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"1854:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3908,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"1842:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:27","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5740,"src":"1842:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3918,4001,4021],"referencedDeclaration":4001,"src":"1823:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3905,"id":3915,"nodeType":"Return","src":"1816:49:27"}]}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"1609:94:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:27","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"value","nameLocation":"1737:5:27","nodeType":"VariableDeclaration","scope":3918,"src":"1729:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:27"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"1767:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3903,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:27"},"scope":4059,"src":"1708:174:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"2095:435:27","statements":[{"assignments":[3929],"declarations":[{"constant":false,"id":3929,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:27","nodeType":"VariableDeclaration","scope":4000,"src":"2105:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3931,"initialValue":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"2126:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:27"},{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:27","nodeType":"VariableDeclaration","scope":4000,"src":"2141:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3932,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3942,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3937,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2177:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3934,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:27"},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3943,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2198:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3945,"indexExpression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3948,"nodeType":"ExpressionStatement","src":"2198:15:27"},{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2223:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3951,"indexExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3954,"nodeType":"ExpressionStatement","src":"2223:15:27"},{"body":{"id":3983,"nodeType":"Block","src":"2293:95:27","statements":[{"expression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3969,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2307:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3971,"indexExpression":{"id":3970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"2314:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3972,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"2319:10:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3976,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"2330:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3978,"nodeType":"ExpressionStatement","src":"2307:40:27"},{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3979,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"2361:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"nodeType":"ExpressionStatement","src":"2361:16:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"2281:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3984,"initializationExpression":{"assignments":[3956],"declarations":[{"constant":false,"id":3956,"mutability":"mutable","name":"i","nameLocation":"2261:1:27","nodeType":"VariableDeclaration","scope":3984,"src":"2253:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3962,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3958,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2269:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:27"},"loopExpression":{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:27","subExpression":{"id":3966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"2290:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"2288:3:27"},"nodeType":"ForStatement","src":"2248:140:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"2401:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3994,"nodeType":"IfStatement","src":"2397:96:27","trueBody":{"id":3993,"nodeType":"Block","src":"2418:75:27","statements":[{"errorCall":{"arguments":[{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"2468:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3990,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2475:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3988,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"2439:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3992,"nodeType":"RevertStatement","src":"2432:50:27"}]}},{"expression":{"arguments":[{"id":3997,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2516:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3995,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:27","typeDescriptions":{}}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3927,"id":3999,"nodeType":"Return","src":"2502:21:27"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"1888:112:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:27","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"value","nameLocation":"2034:5:27","nodeType":"VariableDeclaration","scope":4001,"src":"2026:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"length","nameLocation":"2049:6:27","nodeType":"VariableDeclaration","scope":4001,"src":"2041:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:27"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"2080:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3925,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:27"},"scope":4059,"src":"2005:525:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"2762:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4014,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"2807:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4012,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:27","typeDescriptions":{}}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:27","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4017,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"2815:14:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4009,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3918,4001,4021],"referencedDeclaration":4001,"src":"2779:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4008,"id":4019,"nodeType":"Return","src":"2772:58:27"}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"2536:148:27","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:27","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"addr","nameLocation":"2718:4:27","nodeType":"VariableDeclaration","scope":4021,"src":"2710:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4003,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:27"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"2747:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4006,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:27"},"scope":4059,"src":"2689:148:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4057,"nodeType":"Block","src":"2992:104:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"3015:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4031,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:27","typeDescriptions":{}}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:27","memberName":"length","nodeType":"MemberAccess","src":"3009:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"3034:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4036,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:27","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:27","memberName":"length","nodeType":"MemberAccess","src":"3028:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"3063:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:27","typeDescriptions":{}}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4042,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"3086:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:27","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4048,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4030,"id":4056,"nodeType":"Return","src":"3002:87:27"}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"2843:66:27","text":" @dev Returns true if the two strings are equal."},"id":4058,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:27","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"a","nameLocation":"2943:1:27","nodeType":"VariableDeclaration","scope":4058,"src":"2929:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4023,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"b","nameLocation":"2960:1:27","nodeType":"VariableDeclaration","scope":4058,"src":"2946:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4025,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:27"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4058,"src":"2986:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4028,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:27"},"scope":4059,"src":"2914:182:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4060,"src":"251:2847:27","usedErrors":[3824],"usedEvents":[]}],"src":"101:2998:27"},"id":27},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4407]},"id":4408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4062,"nodeType":"StructuredDocumentation","src":"138:205:28","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4407,"linearizedBaseContracts":[4407],"name":"ECDSA","nameLocation":"352:5:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4067,"members":[{"id":4063,"name":"NoError","nameLocation":"392:7:28","nodeType":"EnumValue","src":"392:7:28"},{"id":4064,"name":"InvalidSignature","nameLocation":"409:16:28","nodeType":"EnumValue","src":"409:16:28"},{"id":4065,"name":"InvalidSignatureLength","nameLocation":"435:22:28","nodeType":"EnumValue","src":"435:22:28"},{"id":4066,"name":"InvalidSignatureS","nameLocation":"467:17:28","nodeType":"EnumValue","src":"467:17:28"}],"name":"RecoverError","nameLocation":"369:12:28","nodeType":"EnumDefinition","src":"364:126:28"},{"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"496:63:28","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4070,"name":"ECDSAInvalidSignature","nameLocation":"570:21:28","nodeType":"ErrorDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[],"src":"591:2:28"},"src":"564:30:28"},{"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"600:60:28","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4075,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:28","nodeType":"ErrorDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"length","nameLocation":"707:6:28","nodeType":"VariableDeclaration","scope":4075,"src":"699:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:28"},"src":"665:50:28"},{"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"721:85:28","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4080,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:28","nodeType":"ErrorDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"s","nameLocation":"848:1:28","nodeType":"VariableDeclaration","scope":4080,"src":"840:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:28"},"src":"811:40:28"},{"body":{"id":4132,"nodeType":"Block","src":"2242:653:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4095,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2256:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:28","memberName":"length","nodeType":"MemberAccess","src":"2256:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4130,"nodeType":"Block","src":"2781:108:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:28","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4121,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"2815:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:28","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"2815:35:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4125,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2860:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:28","memberName":"length","nodeType":"MemberAccess","src":"2860:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:28","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4094,"id":4129,"nodeType":"Return","src":"2795:83:28"}]},"id":4131,"nodeType":"IfStatement","src":"2252:637:28","trueBody":{"id":4116,"nodeType":"Block","src":"2280:495:28","statements":[{"assignments":[4100],"declarations":[{"constant":false,"id":4100,"mutability":"mutable","name":"r","nameLocation":"2302:1:28","nodeType":"VariableDeclaration","scope":4116,"src":"2294:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4101,"nodeType":"VariableDeclarationStatement","src":"2294:9:28"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"s","nameLocation":"2325:1:28","nodeType":"VariableDeclaration","scope":4116,"src":"2317:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4104,"nodeType":"VariableDeclarationStatement","src":"2317:9:28"},{"assignments":[4106],"declarations":[{"constant":false,"id":4106,"mutability":"mutable","name":"v","nameLocation":"2346:1:28","nodeType":"VariableDeclaration","scope":4116,"src":"2340:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4105,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4107,"nodeType":"VariableDeclarationStatement","src":"2340:7:28"},{"AST":{"nodeType":"YulBlock","src":"2548:171:28","statements":[{"nodeType":"YulAssignment","src":"2566:32:28","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:28"},"nodeType":"YulFunctionCall","src":"2577:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:28"},"nodeType":"YulFunctionCall","src":"2571:27:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:28"}]},{"nodeType":"YulAssignment","src":"2615:32:28","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:28"},"nodeType":"YulFunctionCall","src":"2626:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:28"},"nodeType":"YulFunctionCall","src":"2620:27:28"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:28"}]},{"nodeType":"YulAssignment","src":"2664:41:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:28","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:28"},"nodeType":"YulFunctionCall","src":"2683:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:28"},"nodeType":"YulFunctionCall","src":"2677:27:28"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:28"},"nodeType":"YulFunctionCall","src":"2669:36:28"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:28"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4100,"isOffset":false,"isSlot":false,"src":"2566:1:28","valueSize":1},{"declaration":4103,"isOffset":false,"isSlot":false,"src":"2615:1:28","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"2581:9:28","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"2630:9:28","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"2687:9:28","valueSize":1},{"declaration":4106,"isOffset":false,"isSlot":false,"src":"2664:1:28","valueSize":1}],"id":4108,"nodeType":"InlineAssembly","src":"2539:180:28"},{"expression":{"arguments":[{"id":4110,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"2750:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4111,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"2756:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4112,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"2759:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4113,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"2762:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4109,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4133,4213,4321],"referencedDeclaration":4321,"src":"2739:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4094,"id":4115,"nodeType":"Return","src":"2732:32:28"}]}}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"857:1267:28","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:28","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"hash","nameLocation":"2157:4:28","nodeType":"VariableDeclaration","scope":4133,"src":"2149:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"signature","nameLocation":"2176:9:28","nodeType":"VariableDeclaration","scope":4133,"src":"2163:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4084,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:28"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"2210:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4087,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"2219:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4090,"nodeType":"UserDefinedTypeName","pathNode":{"id":4089,"name":"RecoverError","nameLocations":["2219:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"2219:12:28"},"referencedDeclaration":4067,"src":"2219:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"2233:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:28"},"scope":4407,"src":"2129:766:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4162,"nodeType":"Block","src":"3789:168:28","statements":[{"assignments":[4144,4147,4149],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:28","nodeType":"VariableDeclaration","scope":4162,"src":"3800:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4143,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"error","nameLocation":"3832:5:28","nodeType":"VariableDeclaration","scope":4162,"src":"3819:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4146,"nodeType":"UserDefinedTypeName","pathNode":{"id":4145,"name":"RecoverError","nameLocations":["3819:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"3819:12:28"},"referencedDeclaration":4067,"src":"3819:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:28","nodeType":"VariableDeclaration","scope":4162,"src":"3839:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4154,"initialValue":{"arguments":[{"id":4151,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"3870:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4152,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3876:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4150,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4133,4213,4321],"referencedDeclaration":4133,"src":"3859:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:28"},{"expression":{"arguments":[{"id":4156,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"3908:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"id":4157,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"3915:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4155,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"3896:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4159,"nodeType":"ExpressionStatement","src":"3896:28:28"},{"expression":{"id":4160,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"3941:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4142,"id":4161,"nodeType":"Return","src":"3934:16:28"}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"2901:796:28","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:28","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"hash","nameLocation":"3727:4:28","nodeType":"VariableDeclaration","scope":4163,"src":"3719:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"signature","nameLocation":"3746:9:28","nodeType":"VariableDeclaration","scope":4163,"src":"3733:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4137,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:28"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4163,"src":"3780:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:28"},"scope":4407,"src":"3702:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4212,"nodeType":"Block","src":"4285:342:28","statements":[{"id":4211,"nodeType":"UncheckedBlock","src":"4295:326:28","statements":[{"assignments":[4181],"declarations":[{"constant":false,"id":4181,"mutability":"mutable","name":"s","nameLocation":"4327:1:28","nodeType":"VariableDeclaration","scope":4211,"src":"4319:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4188,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"4331:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:28","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:28","typeDescriptions":{}}},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:28"},{"assignments":[4190],"declarations":[{"constant":false,"id":4190,"mutability":"mutable","name":"v","nameLocation":"4528:1:28","nodeType":"VariableDeclaration","scope":4211,"src":"4522:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4189,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4203,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4195,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"4547:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:28","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:28","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4191,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:28","typeDescriptions":{}}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:28"},{"expression":{"arguments":[{"id":4205,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"4596:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4206,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4602:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4207,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"4605:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4208,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"4608:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4204,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4133,4213,4321],"referencedDeclaration":4321,"src":"4585:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4179,"id":4210,"nodeType":"Return","src":"4578:32:28"}]}]},"documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"3963:205:28","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":4213,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:28","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"hash","nameLocation":"4201:4:28","nodeType":"VariableDeclaration","scope":4213,"src":"4193:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"r","nameLocation":"4215:1:28","nodeType":"VariableDeclaration","scope":4213,"src":"4207:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"vs","nameLocation":"4226:2:28","nodeType":"VariableDeclaration","scope":4213,"src":"4218:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:28"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4213,"src":"4253:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4213,"src":"4262:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4175,"nodeType":"UserDefinedTypeName","pathNode":{"id":4174,"name":"RecoverError","nameLocations":["4262:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"4262:12:28"},"referencedDeclaration":4067,"src":"4262:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4213,"src":"4276:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:28"},"scope":4407,"src":"4173:454:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"4840:164:28","statements":[{"assignments":[4226,4229,4231],"declarations":[{"constant":false,"id":4226,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:28","nodeType":"VariableDeclaration","scope":4245,"src":"4851:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4225,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"error","nameLocation":"4883:5:28","nodeType":"VariableDeclaration","scope":4245,"src":"4870:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4228,"nodeType":"UserDefinedTypeName","pathNode":{"id":4227,"name":"RecoverError","nameLocations":["4870:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"4870:12:28"},"referencedDeclaration":4067,"src":"4870:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:28","nodeType":"VariableDeclaration","scope":4245,"src":"4890:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4237,"initialValue":{"arguments":[{"id":4233,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"4921:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"4927:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4235,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"4930:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4232,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4133,4213,4321],"referencedDeclaration":4213,"src":"4910:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:28"},{"expression":{"arguments":[{"id":4239,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4955:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"id":4240,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"4962:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4238,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"4943:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4242,"nodeType":"ExpressionStatement","src":"4943:28:28"},{"expression":{"id":4243,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"4988:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4224,"id":4244,"nodeType":"Return","src":"4981:16:28"}]},"documentation":{"id":4214,"nodeType":"StructuredDocumentation","src":"4633:116:28","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:28","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"hash","nameLocation":"4779:4:28","nodeType":"VariableDeclaration","scope":4246,"src":"4771:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"r","nameLocation":"4793:1:28","nodeType":"VariableDeclaration","scope":4246,"src":"4785:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"vs","nameLocation":"4804:2:28","nodeType":"VariableDeclaration","scope":4246,"src":"4796:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:28"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4246,"src":"4831:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:28"},"scope":4407,"src":"4754:250:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"5298:1372:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4267,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"6194:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:28","typeDescriptions":{}}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:28","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4281,"nodeType":"IfStatement","src":"6182:164:28","trueBody":{"id":4280,"nodeType":"Block","src":"6267:79:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:28","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4275,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"6301:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:28","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4066,"src":"6301:30:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"id":4277,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"6333:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4264,"id":4279,"nodeType":"Return","src":"6281:54:28"}]}},{"assignments":[4283],"declarations":[{"constant":false,"id":4283,"mutability":"mutable","name":"signer","nameLocation":"6448:6:28","nodeType":"VariableDeclaration","scope":4320,"src":"6440:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4290,"initialValue":{"arguments":[{"id":4285,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6467:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4286,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"6473:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"6476:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4288,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"6479:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4284,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:28","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6495:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4292,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:28","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"6491:113:28","trueBody":{"id":4309,"nodeType":"Block","src":"6517:87:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:28","typeDescriptions":{}}},"id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4301,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"6551:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:28","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4064,"src":"6551:29:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:28","typeDescriptions":{}}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4264,"id":4308,"nodeType":"Return","src":"6531:62:28"}]}},{"expression":{"components":[{"id":4311,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6622:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4312,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"6630:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:28","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4063,"src":"6630:20:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:28","typeDescriptions":{}}},"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4264,"id":4319,"nodeType":"Return","src":"6614:49:28"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"5010:125:28","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:28","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"hash","nameLocation":"5177:4:28","nodeType":"VariableDeclaration","scope":4321,"src":"5169:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"v","nameLocation":"5197:1:28","nodeType":"VariableDeclaration","scope":4321,"src":"5191:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4250,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"r","nameLocation":"5216:1:28","nodeType":"VariableDeclaration","scope":4321,"src":"5208:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"s","nameLocation":"5235:1:28","nodeType":"VariableDeclaration","scope":4321,"src":"5227:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:28"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"5266:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"5275:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4260,"nodeType":"UserDefinedTypeName","pathNode":{"id":4259,"name":"RecoverError","nameLocations":["5275:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"5275:12:28"},"referencedDeclaration":4067,"src":"5275:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"5289:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:28"},"scope":4407,"src":"5140:1530:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"6897:166:28","statements":[{"assignments":[4336,4339,4341],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:28","nodeType":"VariableDeclaration","scope":4356,"src":"6908:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4335,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"error","nameLocation":"6940:5:28","nodeType":"VariableDeclaration","scope":4356,"src":"6927:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4338,"nodeType":"UserDefinedTypeName","pathNode":{"id":4337,"name":"RecoverError","nameLocations":["6927:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"6927:12:28"},"referencedDeclaration":4067,"src":"6927:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:28","nodeType":"VariableDeclaration","scope":4356,"src":"6947:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4348,"initialValue":{"arguments":[{"id":4343,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6978:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4344,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"6984:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4345,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"6987:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4346,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"6990:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4342,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4133,4213,4321],"referencedDeclaration":4321,"src":"6967:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:28"},{"expression":{"arguments":[{"id":4350,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7014:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},{"id":4351,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"7021:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4349,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"7002:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4353,"nodeType":"ExpressionStatement","src":"7002:28:28"},{"expression":{"id":4354,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"7047:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4334,"id":4355,"nodeType":"Return","src":"7040:16:28"}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"6676:122:28","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:28","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"hash","nameLocation":"6828:4:28","nodeType":"VariableDeclaration","scope":4357,"src":"6820:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"v","nameLocation":"6840:1:28","nodeType":"VariableDeclaration","scope":4357,"src":"6834:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4325,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"r","nameLocation":"6851:1:28","nodeType":"VariableDeclaration","scope":4357,"src":"6843:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"s","nameLocation":"6862:1:28","nodeType":"VariableDeclaration","scope":4357,"src":"6854:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:28"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4357,"src":"6888:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4332,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:28"},"scope":4407,"src":"6803:260:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4405,"nodeType":"Block","src":"7268:460:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7282:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4367,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7291:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:28","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4063,"src":"7291:20:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7378:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4373,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7387:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:28","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4064,"src":"7387:29:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7483:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4381,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7492:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:28","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"7492:35:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7617:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4393,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7626:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:28","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4066,"src":"7626:30:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"7613:109:28","trueBody":{"id":4400,"nodeType":"Block","src":"7658:64:28","statements":[{"errorCall":{"arguments":[{"id":4397,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"7702:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4396,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"7679:22:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"RevertStatement","src":"7672:39:28"}]}},"id":4402,"nodeType":"IfStatement","src":"7479:243:28","trueBody":{"id":4391,"nodeType":"Block","src":"7529:78:28","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4387,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"7586:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:28","typeDescriptions":{}}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"7550:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4390,"nodeType":"RevertStatement","src":"7543:53:28"}]}},"id":4403,"nodeType":"IfStatement","src":"7374:348:28","trueBody":{"id":4379,"nodeType":"Block","src":"7418:55:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4376,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7439:21:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4378,"nodeType":"RevertStatement","src":"7432:30:28"}]}},"id":4404,"nodeType":"IfStatement","src":"7278:444:28","trueBody":{"id":4371,"nodeType":"Block","src":"7313:55:28","statements":[{"functionReturnParameters":4365,"id":4370,"nodeType":"Return","src":"7327:7:28"}]}}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"7069:122:28","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4406,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:28","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"error","nameLocation":"7230:5:28","nodeType":"VariableDeclaration","scope":4406,"src":"7217:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4360,"nodeType":"UserDefinedTypeName","pathNode":{"id":4359,"name":"RecoverError","nameLocations":["7217:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":4067,"src":"7217:12:28"},"referencedDeclaration":4067,"src":"7217:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:28","nodeType":"VariableDeclaration","scope":4406,"src":"7237:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:28"},"returnParameters":{"id":4365,"nodeType":"ParameterList","parameters":[],"src":"7268:0:28"},"scope":4407,"src":"7196:532:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4408,"src":"344:7386:28","usedErrors":[4070,4075,4080],"usedEvents":[]}],"src":"112:7619:28"},"id":28},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4634],"IERC5267":[830],"MessageHashUtils":[4708],"ShortString":[3483],"ShortStrings":[3694]},"id":4635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4409,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4635,"sourceUnit":4709,"src":"139:56:29","symbolAliases":[{"foreign":{"id":4410,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"147:16:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4635,"sourceUnit":3695,"src":"196:62:29","symbolAliases":[{"foreign":{"id":4412,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"204:12:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4413,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"218:11:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4635,"sourceUnit":831,"src":"259:55:29","symbolAliases":[{"foreign":{"id":4415,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"267:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4418,"name":"IERC5267","nameLocations":["1988:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":830,"src":"1988:8:29"},"id":4419,"nodeType":"InheritanceSpecifier","src":"1988:8:29"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4417,"nodeType":"StructuredDocumentation","src":"316:1643:29","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4634,"linearizedBaseContracts":[4634,830],"name":"EIP712","nameLocation":"1978:6:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4421,"libraryName":{"id":4420,"name":"ShortStrings","nameLocations":["2009:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3694,"src":"2009:12:29"},"nodeType":"UsingForDirective","src":"2003:25:29"},{"constant":true,"id":4426,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:29","nodeType":"VariableDeclaration","scope":4634,"src":"2034:140:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4423,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4428,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:29","nodeType":"VariableDeclaration","scope":4634,"src":"2373:48:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4430,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:29","nodeType":"VariableDeclaration","scope":4634,"src":"2427:40:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4432,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:29","nodeType":"VariableDeclaration","scope":4634,"src":"2473:37:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4434,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:29","nodeType":"VariableDeclaration","scope":4634,"src":"2517:37:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4436,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:29","nodeType":"VariableDeclaration","scope":4634,"src":"2560:40:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4439,"mutability":"immutable","name":"_name","nameLocation":"2637:5:29","nodeType":"VariableDeclaration","scope":4634,"src":"2607:35:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":4438,"nodeType":"UserDefinedTypeName","pathNode":{"id":4437,"name":"ShortString","nameLocations":["2607:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"2607:11:29"},"referencedDeclaration":3483,"src":"2607:11:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4442,"mutability":"immutable","name":"_version","nameLocation":"2678:8:29","nodeType":"VariableDeclaration","scope":4634,"src":"2648:38:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"},"typeName":{"id":4441,"nodeType":"UserDefinedTypeName","pathNode":{"id":4440,"name":"ShortString","nameLocations":["2648:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":3483,"src":"2648:11:29"},"referencedDeclaration":3483,"src":"2648:11:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4444,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:29","nodeType":"VariableDeclaration","scope":4634,"src":"2692:28:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4443,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4446,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:29","nodeType":"VariableDeclaration","scope":4634,"src":"2726:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4445,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4503,"nodeType":"Block","src":"3383:376:29","statements":[{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"3393:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4457,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"3432:13:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4455,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3401:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:29","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3635,"src":"3401:30:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3483_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"src":"3393:53:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"id":4460,"nodeType":"ExpressionStatement","src":"3393:53:29"},{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"3456:8:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4464,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3501:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4462,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"3467:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:29","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3635,"src":"3467:33:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3483_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"src":"3456:62:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"id":4467,"nodeType":"ExpressionStatement","src":"3456:62:29"},{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"3528:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4472,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3558:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4470,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:29","typeDescriptions":{}}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4469,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4476,"nodeType":"ExpressionStatement","src":"3528:36:29"},{"expression":{"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4477,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"3574:14:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4481,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"3607:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4479,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:29","typeDescriptions":{}}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4478,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4485,"nodeType":"ExpressionStatement","src":"3574:42:29"},{"expression":{"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"3627:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ExpressionStatement","src":"3627:30:29"},{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"3667:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4492,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"3692:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4495,"nodeType":"ExpressionStatement","src":"3667:48:29"},{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"3725:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4497,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:29","typeDescriptions":{}}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4502,"nodeType":"ExpressionStatement","src":"3725:27:29"}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"2764:559:29","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4504,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"name","nameLocation":"3354:4:29","nodeType":"VariableDeclaration","scope":4504,"src":"3340:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4448,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"version","nameLocation":"3374:7:29","nodeType":"VariableDeclaration","scope":4504,"src":"3360:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4450,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:29"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[],"src":"3383:0:29"},"scope":4634,"src":"3328:431:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"3907:200:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4512,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}],"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:29","typeDescriptions":{}}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4514,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"3938:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4516,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4518,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"3970:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4527,"nodeType":"Block","src":"4046:55:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4524,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"4067:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4509,"id":4526,"nodeType":"Return","src":"4060:30:29"}]},"id":4528,"nodeType":"IfStatement","src":"3917:184:29","trueBody":{"id":4523,"nodeType":"Block","src":"3986:54:29","statements":[{"expression":{"id":4521,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"4007:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4509,"id":4522,"nodeType":"Return","src":"4000:29:29"}]}}]},"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"3765:75:29","text":" @dev Returns the domain separator for the current chain."},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:29","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[],"src":"3872:2:29"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4530,"src":"3898:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:29"},"scope":4634,"src":"3845:262:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"4177:115:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4538,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"4215:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4539,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"4226:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4540,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"4239:14:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4541,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4545,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}],"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4543,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:29","typeDescriptions":{}}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4536,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:29","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4534,"id":4549,"nodeType":"Return","src":"4187:98:29"}]},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:29","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[],"src":"4143:2:29"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"4168:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:29"},"scope":4634,"src":"4113:179:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4566,"nodeType":"Block","src":"5003:90:29","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4561,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"5053:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4563,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"5075:10:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4559,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"5020:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4708_$","typeString":"type(library MessageHashUtils)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:29","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4707,"src":"5020:32:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4558,"id":4565,"nodeType":"Return","src":"5013:73:29"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"4298:614:29","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:29","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:29","nodeType":"VariableDeclaration","scope":4567,"src":"4943:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:29"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"4994:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:29"},"scope":4634,"src":"4917:176:29","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[829],"body":{"id":4608,"nodeType":"Block","src":"5472:229:29","statements":[{"expression":{"components":[{"hexValue":"0f","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4587,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"5533:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4589,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"5560:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4591,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4595,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4634","typeString":"contract EIP712"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4593,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:29","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:29","typeDescriptions":{}}},"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4602,"nodeType":"ArrayTypeName","src":"5672:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4585,"id":4607,"nodeType":"Return","src":"5482:212:29"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"5099:40:29","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:29","nodeType":"FunctionDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[],"src":"5165:2:29"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"fields","nameLocation":"5249:6:29","nodeType":"VariableDeclaration","scope":4609,"src":"5242:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4570,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4573,"mutability":"mutable","name":"name","nameLocation":"5283:4:29","nodeType":"VariableDeclaration","scope":4609,"src":"5269:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4572,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"version","nameLocation":"5315:7:29","nodeType":"VariableDeclaration","scope":4609,"src":"5301:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4574,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:29","nodeType":"VariableDeclaration","scope":4609,"src":"5336:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:29","nodeType":"VariableDeclaration","scope":4609,"src":"5365:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"salt","nameLocation":"5412:4:29","nodeType":"VariableDeclaration","scope":4609,"src":"5404:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:29","nodeType":"VariableDeclaration","scope":4609,"src":"5430:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ArrayTypeName","src":"5430:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:29"},"scope":4634,"src":"5144:557:29","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4620,"nodeType":"Block","src":"6082:65:29","statements":[{"expression":{"arguments":[{"id":4617,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"6126:13:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4615,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6099:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:29","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"6099:26:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3483_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4614,"id":4619,"nodeType":"Return","src":"6092:48:29"}]},"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"5707:256:29","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:29","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[],"src":"6041:2:29"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4621,"src":"6067:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4612,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:29"},"scope":4634,"src":"6021:126:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4632,"nodeType":"Block","src":"6537:71:29","statements":[{"expression":{"arguments":[{"id":4629,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"6584:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4627,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"6554:8:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3483","typeString":"ShortString"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:29","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"6554:29:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3483_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3483_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4626,"id":4631,"nodeType":"Return","src":"6547:54:29"}]},"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"6153:262:29","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:29","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[],"src":"6496:2:29"},"returnParameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"6522:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4624,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:29"},"scope":4634,"src":"6473:135:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4635,"src":"1960:4650:29","usedErrors":[3491,3493],"usedEvents":[810]}],"src":"113:6498:29"},"id":29},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4708],"Strings":[4059]},"id":4709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4636,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4709,"sourceUnit":4060,"src":"149:39:30","symbolAliases":[{"foreign":{"id":4637,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"157:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"190:330:30","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4708,"linearizedBaseContracts":[4708],"name":"MessageHashUtils","nameLocation":"529:16:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":4648,"nodeType":"Block","src":"1314:368:30","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:30","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:30","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:30"},"nodeType":"YulFunctionCall","src":"1390:48:30"},"nodeType":"YulExpressionStatement","src":"1390:48:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:30","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:30"},"nodeType":"YulFunctionCall","src":"1492:25:30"},"nodeType":"YulExpressionStatement","src":"1492:25:30"},{"nodeType":"YulAssignment","src":"1571:31:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:30","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:30","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:30"},"nodeType":"YulFunctionCall","src":"1581:21:30"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4645,"isOffset":false,"isSlot":false,"src":"1571:6:30","valueSize":1},{"declaration":4642,"isOffset":false,"isSlot":false,"src":"1505:11:30","valueSize":1}],"id":4647,"nodeType":"InlineAssembly","src":"1367:309:30"}]},"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"552:665:30","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4649,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:30","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:30","nodeType":"VariableDeclaration","scope":4649,"src":"1254:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:30"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"digest","nameLocation":"1306:6:30","nodeType":"VariableDeclaration","scope":4649,"src":"1298:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:30"},"scope":4708,"src":"1222:460:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4674,"nodeType":"Block","src":"2234:143:30","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4666,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"2343:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:30","memberName":"length","nodeType":"MemberAccess","src":"2343:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4664,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"2326:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4059_$","typeString":"type(library Strings)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:30","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3872,"src":"2326:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:30","typeDescriptions":{}}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4670,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"2361:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4658,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:30","typeDescriptions":{}}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:30","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4657,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4673,"nodeType":"Return","src":"2244:126:30"}]},"documentation":{"id":4650,"nodeType":"StructuredDocumentation","src":"1688:455:30","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4675,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:30","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"message","nameLocation":"2193:7:30","nodeType":"VariableDeclaration","scope":4675,"src":"2180:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4651,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:30"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4675,"src":"2225:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:30"},"scope":4708,"src":"2148:229:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4694,"nodeType":"Block","src":"2831:80:30","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4689,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"2887:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4690,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2898:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4686,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4685,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4684,"id":4693,"nodeType":"Return","src":"2841:63:30"}]},"documentation":{"id":4676,"nodeType":"StructuredDocumentation","src":"2383:332:30","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4695,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:30","nodeType":"FunctionDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"validator","nameLocation":"2769:9:30","nodeType":"VariableDeclaration","scope":4695,"src":"2761:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4677,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4680,"mutability":"mutable","name":"data","nameLocation":"2793:4:30","nodeType":"VariableDeclaration","scope":4695,"src":"2780:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4679,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:30"},"returnParameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4695,"src":"2822:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:30"},"scope":4708,"src":"2720:191:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"3462:292:30","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:30","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:30"},"nodeType":"YulFunctionCall","src":"3549:11:30"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:30","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:30"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:30","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:30"},"nodeType":"YulFunctionCall","src":"3573:23:30"},"nodeType":"YulExpressionStatement","src":"3573:23:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:30","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:30"},"nodeType":"YulFunctionCall","src":"3616:14:30"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:30"},"nodeType":"YulFunctionCall","src":"3609:39:30"},"nodeType":"YulExpressionStatement","src":"3609:39:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:30","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:30"},"nodeType":"YulFunctionCall","src":"3668:14:30"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:30"},"nodeType":"YulFunctionCall","src":"3661:34:30"},"nodeType":"YulExpressionStatement","src":"3661:34:30"},{"nodeType":"YulAssignment","src":"3708:30:30","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:30","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:30"},"nodeType":"YulFunctionCall","src":"3718:20:30"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4703,"isOffset":false,"isSlot":false,"src":"3708:6:30","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"3632:15:30","valueSize":1},{"declaration":4700,"isOffset":false,"isSlot":false,"src":"3684:10:30","valueSize":1}],"id":4705,"nodeType":"InlineAssembly","src":"3515:233:30"}]},"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"2917:431:30","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:30","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:30","nodeType":"VariableDeclaration","scope":4707,"src":"3378:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4700,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:30","nodeType":"VariableDeclaration","scope":4707,"src":"3403:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:30"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"digest","nameLocation":"3454:6:30","nodeType":"VariableDeclaration","scope":4707,"src":"3446:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:30"},"scope":4708,"src":"3353:401:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4709,"src":"521:3235:30","usedErrors":[],"usedEvents":[]}],"src":"123:3634:30"},"id":30},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4732],"IERC165":[4744]},"id":4733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4710,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4733,"sourceUnit":4745,"src":"140:38:31","symbolAliases":[{"foreign":{"id":4711,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"148:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4714,"name":"IERC165","nameLocations":["687:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"687:7:31"},"id":4715,"nodeType":"InheritanceSpecifier","src":"687:7:31"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"180:478:31","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4732,"linearizedBaseContracts":[4732,4744],"name":"ERC165","nameLocation":"677:6:31","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4743],"body":{"id":4730,"nodeType":"Block","src":"844:64:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"861:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4725,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"881:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4744_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4744_$","typeString":"type(contract IERC165)"}],"id":4724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4744","typeString":"type(contract IERC165)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:31","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4722,"id":4729,"nodeType":"Return","src":"854:47:31"}]},"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"701:56:31","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4731,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:31","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:31","nodeType":"VariableDeclaration","scope":4731,"src":"789:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4717,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:31"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4731,"src":"838:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4720,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:31"},"scope":4732,"src":"762:146:31","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4733,"src":"659:251:31","usedErrors":[],"usedEvents":[]}],"src":"114:797:31"},"id":31},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4744]},"id":4745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:32"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"141:279:32","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4744,"linearizedBaseContracts":[4744],"name":"IERC165","nameLocation":"431:7:32","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"445:340:32","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4743,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:32","nodeType":"FunctionDefinition","parameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:32","nodeType":"VariableDeclaration","scope":4743,"src":"817:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4737,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:32"},"returnParameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"860:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4740,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:32"},"scope":4744,"src":"790:76:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4745,"src":"421:447:32","usedErrors":[],"usedEvents":[]}],"src":"115:754:32"},"id":32},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5798]},"id":5799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4746,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"129:73:33","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5798,"linearizedBaseContracts":[5798],"name":"Math","nameLocation":"211:4:33","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"222:50:33","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":4750,"name":"MathOverflowedMulDiv","nameLocation":"283:20:33","nodeType":"ErrorDefinition","parameters":{"id":4749,"nodeType":"ParameterList","parameters":[],"src":"303:2:33"},"src":"277:29:33"},{"canonicalName":"Math.Rounding","id":4755,"members":[{"id":4751,"name":"Floor","nameLocation":"336:5:33","nodeType":"EnumValue","src":"336:5:33"},{"id":4752,"name":"Ceil","nameLocation":"379:4:33","nodeType":"EnumValue","src":"379:4:33"},{"id":4753,"name":"Trunc","nameLocation":"421:5:33","nodeType":"EnumValue","src":"421:5:33"},{"id":4754,"name":"Expand","nameLocation":"451:6:33","nodeType":"EnumValue","src":"451:6:33"}],"name":"Rounding","nameLocation":"317:8:33","nodeType":"EnumDefinition","src":"312:169:33"},{"body":{"id":4786,"nodeType":"Block","src":"661:140:33","statements":[{"id":4785,"nodeType":"UncheckedBlock","src":"671:124:33","statements":[{"assignments":[4768],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"c","nameLocation":"703:1:33","nodeType":"VariableDeclaration","scope":4785,"src":"695:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4772,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4769,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"707:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4770,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"711:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"730:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"734:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4780,"nodeType":"IfStatement","src":"726:28:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4766,"id":4779,"nodeType":"Return","src":"737:17:33"}},{"expression":{"components":[{"hexValue":"74727565","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4782,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"782:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4766,"id":4784,"nodeType":"Return","src":"768:16:33"}]}]},"documentation":{"id":4756,"nodeType":"StructuredDocumentation","src":"487:93:33","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":4787,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:33","nodeType":"FunctionDefinition","parameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"a","nameLocation":"609:1:33","nodeType":"VariableDeclaration","scope":4787,"src":"601:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4760,"mutability":"mutable","name":"b","nameLocation":"620:1:33","nodeType":"VariableDeclaration","scope":4787,"src":"612:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:33"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"646:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4762,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"652:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:33"},"scope":5798,"src":"585:216:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4814,"nodeType":"Block","src":"984:113:33","statements":[{"id":4813,"nodeType":"UncheckedBlock","src":"994:97:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"1022:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"1026:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"1018:28:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4798,"id":4805,"nodeType":"Return","src":"1029:17:33"}},{"expression":{"components":[{"hexValue":"74727565","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"1074:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"1078:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4798,"id":4812,"nodeType":"Return","src":"1060:20:33"}]}]},"documentation":{"id":4788,"nodeType":"StructuredDocumentation","src":"807:96:33","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:33","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"a","nameLocation":"932:1:33","nodeType":"VariableDeclaration","scope":4815,"src":"924:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"b","nameLocation":"943:1:33","nodeType":"VariableDeclaration","scope":4815,"src":"935:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:33"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"969:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4794,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"975:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:33"},"scope":5798,"src":"908:189:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4856,"nodeType":"Block","src":"1283:417:33","statements":[{"id":4855,"nodeType":"UncheckedBlock","src":"1293:401:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"1551:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4834,"nodeType":"IfStatement","src":"1547:28:33","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4826,"id":4833,"nodeType":"Return","src":"1559:16:33"}},{"assignments":[4836],"declarations":[{"constant":false,"id":4836,"mutability":"mutable","name":"c","nameLocation":"1597:1:33","nodeType":"VariableDeclaration","scope":4855,"src":"1589:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4840,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"1601:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"1605:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"1624:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"1628:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"1633:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"nodeType":"IfStatement","src":"1620:33:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4826,"id":4849,"nodeType":"Return","src":"1636:17:33"}},{"expression":{"components":[{"hexValue":"74727565","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4852,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"1681:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4826,"id":4854,"nodeType":"Return","src":"1667:16:33"}]}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"1103:99:33","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":4857,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:33","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"a","nameLocation":"1231:1:33","nodeType":"VariableDeclaration","scope":4857,"src":"1223:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"b","nameLocation":"1242:1:33","nodeType":"VariableDeclaration","scope":4857,"src":"1234:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:33"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"1268:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4822,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"1274:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:33"},"scope":5798,"src":"1207:493:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4884,"nodeType":"Block","src":"1887:114:33","statements":[{"id":4883,"nodeType":"UncheckedBlock","src":"1897:98:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"1925:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"1921:29:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4868,"id":4875,"nodeType":"Return","src":"1933:17:33"}},{"expression":{"components":[{"hexValue":"74727565","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"1978:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"1982:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4868,"id":4882,"nodeType":"Return","src":"1964:20:33"}]}]},"documentation":{"id":4858,"nodeType":"StructuredDocumentation","src":"1706:100:33","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":4885,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:33","nodeType":"FunctionDefinition","parameters":{"id":4863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"a","nameLocation":"1835:1:33","nodeType":"VariableDeclaration","scope":4885,"src":"1827:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"b","nameLocation":"1846:1:33","nodeType":"VariableDeclaration","scope":4885,"src":"1838:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:33"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4885,"src":"1872:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4864,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4885,"src":"1878:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:33"},"scope":5798,"src":"1811:190:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4912,"nodeType":"Block","src":"2198:114:33","statements":[{"id":4911,"nodeType":"UncheckedBlock","src":"2208:98:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2236:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"2232:29:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4896,"id":4903,"nodeType":"Return","src":"2244:17:33"}},{"expression":{"components":[{"hexValue":"74727565","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2289:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2293:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4896,"id":4910,"nodeType":"Return","src":"2275:20:33"}]}]},"documentation":{"id":4886,"nodeType":"StructuredDocumentation","src":"2007:110:33","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4913,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:33","nodeType":"FunctionDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"a","nameLocation":"2146:1:33","nodeType":"VariableDeclaration","scope":4913,"src":"2138:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4890,"mutability":"mutable","name":"b","nameLocation":"2157:1:33","nodeType":"VariableDeclaration","scope":4913,"src":"2149:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4889,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:33"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4913,"src":"2183:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4892,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4913,"src":"2189:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:33"},"scope":5798,"src":"2122:190:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4930,"nodeType":"Block","src":"2449:37:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"2466:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"2470:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"2478:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:33","trueExpression":{"id":4926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"2474:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4922,"id":4929,"nodeType":"Return","src":"2459:20:33"}]},"documentation":{"id":4914,"nodeType":"StructuredDocumentation","src":"2318:59:33","text":" @dev Returns the largest of two numbers."},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:33","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"a","nameLocation":"2403:1:33","nodeType":"VariableDeclaration","scope":4931,"src":"2395:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"b","nameLocation":"2414:1:33","nodeType":"VariableDeclaration","scope":4931,"src":"2406:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:33"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4931,"src":"2440:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:33"},"scope":5798,"src":"2382:104:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"2624:37:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"2641:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"2645:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"2653:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:33","trueExpression":{"id":4944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"2649:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4940,"id":4947,"nodeType":"Return","src":"2634:20:33"}]},"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"2492:60:33","text":" @dev Returns the smallest of two numbers."},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:33","nodeType":"FunctionDefinition","parameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"a","nameLocation":"2578:1:33","nodeType":"VariableDeclaration","scope":4949,"src":"2570:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"b","nameLocation":"2589:1:33","nodeType":"VariableDeclaration","scope":4949,"src":"2581:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:33"},"returnParameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"2615:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:33"},"scope":5798,"src":"2557:104:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4971,"nodeType":"Block","src":"2845:82:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"2900:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"2904:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"2910:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"2914:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4958,"id":4970,"nodeType":"Return","src":"2892:28:33"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"2667:102:33","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4972,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:33","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"a","nameLocation":"2799:1:33","nodeType":"VariableDeclaration","scope":4972,"src":"2791:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"b","nameLocation":"2810:1:33","nodeType":"VariableDeclaration","scope":4972,"src":"2802:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:33"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4972,"src":"2836:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:33"},"scope":5798,"src":"2774:153:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"3219:260:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"3233:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4990,"nodeType":"IfStatement","src":"3229:127:33","trueBody":{"id":4989,"nodeType":"Block","src":"3241:115:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"3340:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"3344:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":4988,"nodeType":"Return","src":"3333:12:33"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"3444:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"3458:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"3467:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:33","trueExpression":{"hexValue":"30","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":5004,"nodeType":"Return","src":"3437:35:33"}]},"documentation":{"id":4973,"nodeType":"StructuredDocumentation","src":"2933:210:33","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:33","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"a","nameLocation":"3173:1:33","nodeType":"VariableDeclaration","scope":5006,"src":"3165:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"b","nameLocation":"3184:1:33","nodeType":"VariableDeclaration","scope":5006,"src":"3176:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:33"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"3210:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:33"},"scope":5798,"src":"3148:331:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"3901:4018:33","statements":[{"id":5130,"nodeType":"UncheckedBlock","src":"3911:4002:33","statements":[{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:33","nodeType":"VariableDeclaration","scope":5130,"src":"4232:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5023,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4248:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5021,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"4252:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:33"},{"assignments":[5025],"declarations":[{"constant":false,"id":5025,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:33","nodeType":"VariableDeclaration","scope":5130,"src":"4312:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5026,"nodeType":"VariableDeclarationStatement","src":"4312:13:33"},{"AST":{"nodeType":"YulBlock","src":"4392:122:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:33"},"nodeType":"YulFunctionCall","src":"4433:6:33"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:33"},"nodeType":"YulFunctionCall","src":"4420:20:33"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:33","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:33","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:33"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:33"},"nodeType":"YulFunctionCall","src":"4470:14:33"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:33"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:33"},"nodeType":"YulFunctionCall","src":"4486:13:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:33"},"nodeType":"YulFunctionCall","src":"4466:34:33"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5019,"isOffset":false,"isSlot":false,"src":"4478:5:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"4493:5:33","valueSize":1},{"declaration":5025,"isOffset":false,"isSlot":false,"src":"4457:5:33","valueSize":1},{"declaration":5009,"isOffset":false,"isSlot":false,"src":"4427:1:33","valueSize":1},{"declaration":5011,"isOffset":false,"isSlot":false,"src":"4430:1:33","valueSize":1}],"id":5027,"nodeType":"InlineAssembly","src":"4383:131:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"4595:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"IfStatement","src":"4591:368:33","trueBody":{"id":5035,"nodeType":"Block","src":"4607:352:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"4925:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5032,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"4933:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5017,"id":5034,"nodeType":"Return","src":"4918:26:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"5065:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5038,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5080:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"5061:88:33","trueBody":{"id":5043,"nodeType":"Block","src":"5087:62:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5040,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5112:20:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"5105:29:33"}]}},{"assignments":[5046],"declarations":[{"constant":false,"id":5046,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:33","nodeType":"VariableDeclaration","scope":5130,"src":"5404:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5047,"nodeType":"VariableDeclarationStatement","src":"5404:17:33"},{"AST":{"nodeType":"YulBlock","src":"5444:291:33","statements":[{"nodeType":"YulAssignment","src":"5513:38:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:33"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:33"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:33"},"nodeType":"YulFunctionCall","src":"5526:25:33"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:33"}]},{"nodeType":"YulAssignment","src":"5633:41:33","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:33"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:33"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:33"},"nodeType":"YulFunctionCall","src":"5653:20:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:33"},"nodeType":"YulFunctionCall","src":"5642:32:33"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:33"}]},{"nodeType":"YulAssignment","src":"5691:30:33","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:33"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:33"},"nodeType":"YulFunctionCall","src":"5700:21:33"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5013,"isOffset":false,"isSlot":false,"src":"5539:11:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"5667:5:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"5691:5:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"5704:5:33","valueSize":1},{"declaration":5025,"isOffset":false,"isSlot":false,"src":"5633:5:33","valueSize":1},{"declaration":5025,"isOffset":false,"isSlot":false,"src":"5646:5:33","valueSize":1},{"declaration":5046,"isOffset":false,"isSlot":false,"src":"5513:9:33","valueSize":1},{"declaration":5046,"isOffset":false,"isSlot":false,"src":"5656:9:33","valueSize":1},{"declaration":5046,"isOffset":false,"isSlot":false,"src":"5711:9:33","valueSize":1},{"declaration":5009,"isOffset":false,"isSlot":false,"src":"5533:1:33","valueSize":1},{"declaration":5011,"isOffset":false,"isSlot":false,"src":"5536:1:33","valueSize":1}],"id":5048,"nodeType":"InlineAssembly","src":"5435:300:33"},{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"twos","nameLocation":"5947:4:33","nodeType":"VariableDeclaration","scope":5130,"src":"5939:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5057,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"5954:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5053,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"5973:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:33"},{"AST":{"nodeType":"YulBlock","src":"6008:362:33","statements":[{"nodeType":"YulAssignment","src":"6073:37:33","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:33"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:33"},"nodeType":"YulFunctionCall","src":"6088:22:33"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:33"}]},{"nodeType":"YulAssignment","src":"6177:25:33","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:33"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:33"},"nodeType":"YulFunctionCall","src":"6186:16:33"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:33"}]},{"nodeType":"YulAssignment","src":"6317:39:33","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:33","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:33"},"nodeType":"YulFunctionCall","src":"6333:12:33"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:33"},"nodeType":"YulFunctionCall","src":"6329:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:33"},"nodeType":"YulFunctionCall","src":"6325:31:33"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5013,"isOffset":false,"isSlot":false,"src":"6073:11:33","valueSize":1},{"declaration":5013,"isOffset":false,"isSlot":false,"src":"6092:11:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"6177:5:33","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"6190:5:33","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"6105:4:33","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"6197:4:33","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"6317:4:33","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"6340:4:33","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"6347:4:33","valueSize":1}],"id":5058,"nodeType":"InlineAssembly","src":"5999:371:33"},{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"6436:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"6445:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5061,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"6453:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5064,"nodeType":"ExpressionStatement","src":"6436:21:33"},{"assignments":[5066],"declarations":[{"constant":false,"id":5066,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:33","nodeType":"VariableDeclaration","scope":5130,"src":"6775:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5073,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6798:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:33"},{"expression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5074,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7031:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7046:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5077,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7060:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"nodeType":"ExpressionStatement","src":"7031:36:33"},{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5082,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7100:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7115:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5085,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7129:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5089,"nodeType":"ExpressionStatement","src":"7100:36:33"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7170:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7185:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5093,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7199:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"7170:36:33"},{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7240:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7255:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5101,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7269:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5105,"nodeType":"ExpressionStatement","src":"7240:36:33"},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7310:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7325:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5109,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7339:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"7310:36:33"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7381:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7396:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5117,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7410:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"7381:36:33"},{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"7851:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"7860:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7868:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"7851:24:33"},{"expression":{"id":5128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"7896:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5017,"id":5129,"nodeType":"Return","src":"7889:13:33"}]}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"3485:313:33","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:33","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"x","nameLocation":"3827:1:33","nodeType":"VariableDeclaration","scope":5132,"src":"3819:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5011,"mutability":"mutable","name":"y","nameLocation":"3838:1:33","nodeType":"VariableDeclaration","scope":5132,"src":"3830:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:33","nodeType":"VariableDeclaration","scope":5132,"src":"3841:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:33"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"result","nameLocation":"3893:6:33","nodeType":"VariableDeclaration","scope":5132,"src":"3885:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:33"},"scope":5798,"src":"3803:4116:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"8161:192:33","statements":[{"assignments":[5148],"declarations":[{"constant":false,"id":5148,"mutability":"mutable","name":"result","nameLocation":"8179:6:33","nodeType":"VariableDeclaration","scope":5174,"src":"8171:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5154,"initialValue":{"arguments":[{"id":5150,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"8195:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5151,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"8198:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"8201:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5132,5175],"referencedDeclaration":5132,"src":"8188:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5156,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"8244:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5155,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"8227:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4755_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5159,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"8264:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5160,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"8267:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5161,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"8270:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:33","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5171,"nodeType":"IfStatement","src":"8223:101:33","trueBody":{"id":5170,"nodeType":"Block","src":"8288:36:33","statements":[{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"8302:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5169,"nodeType":"ExpressionStatement","src":"8302:11:33"}]}},{"expression":{"id":5172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"8340:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5146,"id":5173,"nodeType":"Return","src":"8333:13:33"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"7925:121:33","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:33","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"x","nameLocation":"8075:1:33","nodeType":"VariableDeclaration","scope":5175,"src":"8067:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"y","nameLocation":"8086:1:33","nodeType":"VariableDeclaration","scope":5175,"src":"8078:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:33","nodeType":"VariableDeclaration","scope":5175,"src":"8089:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:33","nodeType":"VariableDeclaration","scope":5175,"src":"8110:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5141,"nodeType":"UserDefinedTypeName","pathNode":{"id":5140,"name":"Rounding","nameLocations":["8110:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"8110:8:33"},"referencedDeclaration":4755,"src":"8110:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:33"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"8152:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:33"},"scope":5798,"src":"8051:302:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5286,"nodeType":"Block","src":"8644:1585:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"8658:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"IfStatement","src":"8654:45:33","trueBody":{"id":5188,"nodeType":"Block","src":"8666:33:33","statements":[{"expression":{"hexValue":"30","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5182,"id":5187,"nodeType":"Return","src":"8680:8:33"}]}},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"result","nameLocation":"9386:6:33","nodeType":"VariableDeclaration","scope":5286,"src":"9378:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"9406:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5193,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5454,5489],"referencedDeclaration":5454,"src":"9401:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:33"},{"id":5285,"nodeType":"UncheckedBlock","src":"9815:408:33","statements":[{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9839:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9849:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"9858:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9862:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5207,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5211,"nodeType":"ExpressionStatement","src":"9839:35:33"},{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9888:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9898:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"9907:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9911:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"9888:35:33"},{"expression":{"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9937:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9947:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"9956:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9960:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5233,"nodeType":"ExpressionStatement","src":"9937:35:33"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9986:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9996:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10005:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10009:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5244,"nodeType":"ExpressionStatement","src":"9986:35:33"},{"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10035:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10045:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10054:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10058:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5255,"nodeType":"ExpressionStatement","src":"10035:35:33"},{"expression":{"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10084:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10094:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10103:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10107:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5266,"nodeType":"ExpressionStatement","src":"10084:35:33"},{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10133:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10143:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10152:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10156:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"10133:35:33"},{"expression":{"arguments":[{"id":5279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10193:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10201:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10205:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5278,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"10189:3:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5182,"id":5284,"nodeType":"Return","src":"10182:30:33"}]}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"8359:223:33","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:33","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"a","nameLocation":"8609:1:33","nodeType":"VariableDeclaration","scope":5287,"src":"8601:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:33"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5287,"src":"8635:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:33"},"scope":5798,"src":"8587:1642:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"10405:164:33","statements":[{"id":5320,"nodeType":"UncheckedBlock","src":"10415:148:33","statements":[{"assignments":[5299],"declarations":[{"constant":false,"id":5299,"mutability":"mutable","name":"result","nameLocation":"10447:6:33","nodeType":"VariableDeclaration","scope":5320,"src":"10439:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5303,"initialValue":{"arguments":[{"id":5301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"10461:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5287,5322],"referencedDeclaration":5287,"src":"10456:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"10484:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5306,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"10511:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5305,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"10494:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4755_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"10524:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"10533:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"10542:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:33","trueExpression":{"hexValue":"31","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5297,"id":5319,"nodeType":"Return","src":"10477:75:33"}]}]},"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"10235:89:33","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:33","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"a","nameLocation":"10351:1:33","nodeType":"VariableDeclaration","scope":5322,"src":"10343:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:33","nodeType":"VariableDeclaration","scope":5322,"src":"10354:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5292,"nodeType":"UserDefinedTypeName","pathNode":{"id":5291,"name":"Rounding","nameLocations":["10354:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"10354:8:33"},"referencedDeclaration":4755,"src":"10354:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:33"},"returnParameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"10396:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:33"},"scope":5798,"src":"10329:240:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"10760:922:33","statements":[{"assignments":[5331],"declarations":[{"constant":false,"id":5331,"mutability":"mutable","name":"result","nameLocation":"10778:6:33","nodeType":"VariableDeclaration","scope":5453,"src":"10770:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5333,"initialValue":{"hexValue":"30","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:33"},{"id":5450,"nodeType":"UncheckedBlock","src":"10798:855:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"10826:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5348,"nodeType":"IfStatement","src":"10822:99:33","trueBody":{"id":5347,"nodeType":"Block","src":"10844:77:33","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"10862:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"10862:13:33"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"10893:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"10893:13:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"10938:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"10934:96:33","trueBody":{"id":5362,"nodeType":"Block","src":"10955:75:33","statements":[{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"10973:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"10973:12:33"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11003:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"11003:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11047:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"nodeType":"IfStatement","src":"11043:96:33","trueBody":{"id":5377,"nodeType":"Block","src":"11064:75:33","statements":[{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11082:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5372,"nodeType":"ExpressionStatement","src":"11082:12:33"},{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11112:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5376,"nodeType":"ExpressionStatement","src":"11112:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11156:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5393,"nodeType":"IfStatement","src":"11152:96:33","trueBody":{"id":5392,"nodeType":"Block","src":"11173:75:33","statements":[{"expression":{"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11191:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5387,"nodeType":"ExpressionStatement","src":"11191:12:33"},{"expression":{"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11221:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5391,"nodeType":"ExpressionStatement","src":"11221:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11265:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"11261:93:33","trueBody":{"id":5407,"nodeType":"Block","src":"11281:73:33","statements":[{"expression":{"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11299:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5402,"nodeType":"ExpressionStatement","src":"11299:11:33"},{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11328:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5406,"nodeType":"ExpressionStatement","src":"11328:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11371:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5423,"nodeType":"IfStatement","src":"11367:93:33","trueBody":{"id":5422,"nodeType":"Block","src":"11387:73:33","statements":[{"expression":{"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11405:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5417,"nodeType":"ExpressionStatement","src":"11405:11:33"},{"expression":{"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11434:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5421,"nodeType":"ExpressionStatement","src":"11434:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11477:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5438,"nodeType":"IfStatement","src":"11473:93:33","trueBody":{"id":5437,"nodeType":"Block","src":"11493:73:33","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11511:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5432,"nodeType":"ExpressionStatement","src":"11511:11:33"},{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11540:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5436,"nodeType":"ExpressionStatement","src":"11540:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"11583:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5449,"nodeType":"IfStatement","src":"11579:64:33","trueBody":{"id":5448,"nodeType":"Block","src":"11599:44:33","statements":[{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11617:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5447,"nodeType":"ExpressionStatement","src":"11617:11:33"}]}}]},{"expression":{"id":5451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11669:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5329,"id":5452,"nodeType":"Return","src":"11662:13:33"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"10575:119:33","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:33","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"value","nameLocation":"10721:5:33","nodeType":"VariableDeclaration","scope":5454,"src":"10713:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:33"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"10751:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:33"},"scope":5798,"src":"10699:983:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"11915:168:33","statements":[{"id":5487,"nodeType":"UncheckedBlock","src":"11925:152:33","statements":[{"assignments":[5466],"declarations":[{"constant":false,"id":5466,"mutability":"mutable","name":"result","nameLocation":"11957:6:33","nodeType":"VariableDeclaration","scope":5487,"src":"11949:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5470,"initialValue":{"arguments":[{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"11971:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5467,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5454,5489],"referencedDeclaration":5454,"src":"11966:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"11998:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5473,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"12025:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5472,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"12008:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4755_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"12043:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"12052:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:33","trueExpression":{"hexValue":"31","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5464,"id":5486,"nodeType":"Return","src":"11991:75:33"}]}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"11688:142:33","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:33","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"value","nameLocation":"11857:5:33","nodeType":"VariableDeclaration","scope":5489,"src":"11849:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5460,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:33","nodeType":"VariableDeclaration","scope":5489,"src":"11864:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5459,"nodeType":"UserDefinedTypeName","pathNode":{"id":5458,"name":"Rounding","nameLocations":["11864:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"11864:8:33"},"referencedDeclaration":4755,"src":"11864:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:33"},"returnParameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"11906:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:33"},"scope":5798,"src":"11835:248:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5617,"nodeType":"Block","src":"12276:854:33","statements":[{"assignments":[5498],"declarations":[{"constant":false,"id":5498,"mutability":"mutable","name":"result","nameLocation":"12294:6:33","nodeType":"VariableDeclaration","scope":5617,"src":"12286:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5500,"initialValue":{"hexValue":"30","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:33"},{"id":5614,"nodeType":"UncheckedBlock","src":"12314:787:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12342:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"12338:103:33","trueBody":{"id":5516,"nodeType":"Block","src":"12361:80:33","statements":[{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12379:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5511,"nodeType":"ExpressionStatement","src":"12379:17:33"},{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12414:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5515,"nodeType":"ExpressionStatement","src":"12414:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12458:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5534,"nodeType":"IfStatement","src":"12454:103:33","trueBody":{"id":5533,"nodeType":"Block","src":"12477:80:33","statements":[{"expression":{"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12495:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5528,"nodeType":"ExpressionStatement","src":"12495:17:33"},{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12530:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5532,"nodeType":"ExpressionStatement","src":"12530:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12574:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5551,"nodeType":"IfStatement","src":"12570:103:33","trueBody":{"id":5550,"nodeType":"Block","src":"12593:80:33","statements":[{"expression":{"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12611:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5545,"nodeType":"ExpressionStatement","src":"12611:17:33"},{"expression":{"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12646:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5549,"nodeType":"ExpressionStatement","src":"12646:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12690:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"nodeType":"IfStatement","src":"12686:100:33","trueBody":{"id":5567,"nodeType":"Block","src":"12708:78:33","statements":[{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12726:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"12726:16:33"},{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12760:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5566,"nodeType":"ExpressionStatement","src":"12760:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12803:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"12799:100:33","trueBody":{"id":5584,"nodeType":"Block","src":"12821:78:33","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12839:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5579,"nodeType":"ExpressionStatement","src":"12839:16:33"},{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12873:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"nodeType":"ExpressionStatement","src":"12873:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12916:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5602,"nodeType":"IfStatement","src":"12912:100:33","trueBody":{"id":5601,"nodeType":"Block","src":"12934:78:33","statements":[{"expression":{"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"12952:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5596,"nodeType":"ExpressionStatement","src":"12952:16:33"},{"expression":{"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12986:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5600,"nodeType":"ExpressionStatement","src":"12986:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"13029:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5613,"nodeType":"IfStatement","src":"13025:66:33","trueBody":{"id":5612,"nodeType":"Block","src":"13047:44:33","statements":[{"expression":{"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"13065:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5611,"nodeType":"ExpressionStatement","src":"13065:11:33"}]}}]},{"expression":{"id":5615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"13117:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5496,"id":5616,"nodeType":"Return","src":"13110:13:33"}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"12089:120:33","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:33","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"12237:5:33","nodeType":"VariableDeclaration","scope":5618,"src":"12229:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:33"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5618,"src":"12267:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:33"},"scope":5798,"src":"12214:916:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5652,"nodeType":"Block","src":"13365:170:33","statements":[{"id":5651,"nodeType":"UncheckedBlock","src":"13375:154:33","statements":[{"assignments":[5630],"declarations":[{"constant":false,"id":5630,"mutability":"mutable","name":"result","nameLocation":"13407:6:33","nodeType":"VariableDeclaration","scope":5651,"src":"13399:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5634,"initialValue":{"arguments":[{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"13422:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5631,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5618,5653],"referencedDeclaration":5618,"src":"13416:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"13449:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5637,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"13476:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5636,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"13459:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4755_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"13495:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"13504:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:33","trueExpression":{"hexValue":"31","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5628,"id":5650,"nodeType":"Return","src":"13442:76:33"}]}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"13136:143:33","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5653,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:33","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"value","nameLocation":"13307:5:33","nodeType":"VariableDeclaration","scope":5653,"src":"13299:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:33","nodeType":"VariableDeclaration","scope":5653,"src":"13314:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5623,"nodeType":"UserDefinedTypeName","pathNode":{"id":5622,"name":"Rounding","nameLocations":["13314:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"13314:8:33"},"referencedDeclaration":4755,"src":"13314:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:33"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5653,"src":"13356:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:33"},"scope":5798,"src":"13284:251:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"13855:600:33","statements":[{"assignments":[5662],"declarations":[{"constant":false,"id":5662,"mutability":"mutable","name":"result","nameLocation":"13873:6:33","nodeType":"VariableDeclaration","scope":5739,"src":"13865:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5664,"initialValue":{"hexValue":"30","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:33"},{"id":5736,"nodeType":"UncheckedBlock","src":"13893:533:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"13921:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5679,"nodeType":"IfStatement","src":"13917:98:33","trueBody":{"id":5678,"nodeType":"Block","src":"13939:76:33","statements":[{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"13957:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"13957:13:33"},{"expression":{"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"13988:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5677,"nodeType":"ExpressionStatement","src":"13988:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14032:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5694,"nodeType":"IfStatement","src":"14028:95:33","trueBody":{"id":5693,"nodeType":"Block","src":"14049:74:33","statements":[{"expression":{"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14067:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5688,"nodeType":"ExpressionStatement","src":"14067:12:33"},{"expression":{"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"14097:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5692,"nodeType":"ExpressionStatement","src":"14097:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14140:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5709,"nodeType":"IfStatement","src":"14136:95:33","trueBody":{"id":5708,"nodeType":"Block","src":"14157:74:33","statements":[{"expression":{"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14175:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ExpressionStatement","src":"14175:12:33"},{"expression":{"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"14205:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5707,"nodeType":"ExpressionStatement","src":"14205:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14248:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5724,"nodeType":"IfStatement","src":"14244:95:33","trueBody":{"id":5723,"nodeType":"Block","src":"14265:74:33","statements":[{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14283:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5718,"nodeType":"ExpressionStatement","src":"14283:12:33"},{"expression":{"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"14313:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5722,"nodeType":"ExpressionStatement","src":"14313:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"14356:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5735,"nodeType":"IfStatement","src":"14352:64:33","trueBody":{"id":5734,"nodeType":"Block","src":"14372:44:33","statements":[{"expression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"14390:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5733,"nodeType":"ExpressionStatement","src":"14390:11:33"}]}}]},{"expression":{"id":5737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"14442:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5660,"id":5738,"nodeType":"Return","src":"14435:13:33"}]},"documentation":{"id":5654,"nodeType":"StructuredDocumentation","src":"13541:246:33","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:33","nodeType":"FunctionDefinition","parameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"value","nameLocation":"13816:5:33","nodeType":"VariableDeclaration","scope":5740,"src":"13808:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:33"},"returnParameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"13846:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:33"},"scope":5798,"src":"13792:663:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5777,"nodeType":"Block","src":"14692:177:33","statements":[{"id":5776,"nodeType":"UncheckedBlock","src":"14702:161:33","statements":[{"assignments":[5752],"declarations":[{"constant":false,"id":5752,"mutability":"mutable","name":"result","nameLocation":"14734:6:33","nodeType":"VariableDeclaration","scope":5776,"src":"14726:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5756,"initialValue":{"arguments":[{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"14750:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5753,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5740,5778],"referencedDeclaration":5740,"src":"14743:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"14777:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5759,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"14804:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5758,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"14787:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4755_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"14823:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"14838:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:33","trueExpression":{"hexValue":"31","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5750,"id":5775,"nodeType":"Return","src":"14770:82:33"}]}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"14461:144:33","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5778,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:33","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"value","nameLocation":"14634:5:33","nodeType":"VariableDeclaration","scope":5778,"src":"14626:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5746,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:33","nodeType":"VariableDeclaration","scope":5778,"src":"14641:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5745,"nodeType":"UserDefinedTypeName","pathNode":{"id":5744,"name":"Rounding","nameLocations":["14641:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"14641:8:33"},"referencedDeclaration":4755,"src":"14641:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:33"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5778,"src":"14683:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:33"},"scope":5798,"src":"14610:259:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"15067:48:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5789,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"15090:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}],"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5787,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:33","typeDescriptions":{}}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5786,"id":5795,"nodeType":"Return","src":"15077:31:33"}]},"documentation":{"id":5779,"nodeType":"StructuredDocumentation","src":"14875:113:33","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:33","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:33","nodeType":"VariableDeclaration","scope":5797,"src":"15019:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"},"typeName":{"id":5781,"nodeType":"UserDefinedTypeName","pathNode":{"id":5780,"name":"Rounding","nameLocations":["15019:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"15019:8:33"},"referencedDeclaration":4755,"src":"15019:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4755","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:33"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"15061:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5784,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:33"},"scope":5798,"src":"14993:122:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5799,"src":"203:14914:33","usedErrors":[4750],"usedEvents":[]}],"src":"103:15015:33"},"id":33},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7553]},"id":7554,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:34"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"218:545:34","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7553,"linearizedBaseContracts":[7553],"name":"SafeCast","nameLocation":"772:8:34","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"787:68:34","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5808,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:34","nodeType":"ErrorDefinition","parameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"bits","nameLocation":"903:4:34","nodeType":"VariableDeclaration","scope":5808,"src":"897:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5803,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5806,"mutability":"mutable","name":"value","nameLocation":"917:5:34","nodeType":"VariableDeclaration","scope":5808,"src":"909:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5805,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:34"},"src":"860:64:34"},{"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"930:75:34","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5813,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:34","nodeType":"ErrorDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"value","nameLocation":"1051:5:34","nodeType":"VariableDeclaration","scope":5813,"src":"1044:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:34"},"src":"1010:48:34"},{"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"1064:67:34","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5820,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:34","nodeType":"ErrorDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"bits","nameLocation":"1178:4:34","nodeType":"VariableDeclaration","scope":5820,"src":"1172:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5815,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"value","nameLocation":"1191:5:34","nodeType":"VariableDeclaration","scope":5820,"src":"1184:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5817,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:34"},"src":"1136:62:34"},{"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"1204:75:34","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5825,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:34","nodeType":"ErrorDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"value","nameLocation":"1326:5:34","nodeType":"VariableDeclaration","scope":5825,"src":"1318:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:34"},"src":"1284:49:34"},{"body":{"id":5852,"nodeType":"Block","src":"1690:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"1704:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5835,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:34","memberName":"max","nodeType":"MemberAccess","src":"1712:17:34","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5846,"nodeType":"IfStatement","src":"1700:105:34","trueBody":{"id":5845,"nodeType":"Block","src":"1731:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:34","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"1788:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"1752:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5844,"nodeType":"RevertStatement","src":"1745:49:34"}]}},{"expression":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"1829:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5847,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:34","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5832,"id":5851,"nodeType":"Return","src":"1814:21:34"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"1339:280:34","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:34","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"1651:5:34","nodeType":"VariableDeclaration","scope":5853,"src":"1643:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:34"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5853,"src":"1681:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5830,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:34","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:34"},"scope":7553,"src":"1624:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"2199:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2213:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5863,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:34","memberName":"max","nodeType":"MemberAccess","src":"2221:17:34","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"IfStatement","src":"2209:105:34","trueBody":{"id":5873,"nodeType":"Block","src":"2240:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:34","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2297:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"2261:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5872,"nodeType":"RevertStatement","src":"2254:49:34"}]}},{"expression":{"arguments":[{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"2338:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5875,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:34","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5860,"id":5879,"nodeType":"Return","src":"2323:21:34"}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"1848:280:34","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:34","nodeType":"FunctionDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"value","nameLocation":"2160:5:34","nodeType":"VariableDeclaration","scope":5881,"src":"2152:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:34"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5881,"src":"2190:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5858,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:34","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:34"},"scope":7553,"src":"2133:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"2708:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"2722:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5891,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:34","memberName":"max","nodeType":"MemberAccess","src":"2730:17:34","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5902,"nodeType":"IfStatement","src":"2718:105:34","trueBody":{"id":5901,"nodeType":"Block","src":"2749:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:34","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"2806:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"2770:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"RevertStatement","src":"2763:49:34"}]}},{"expression":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"2847:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5903,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:34","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5888,"id":5907,"nodeType":"Return","src":"2832:21:34"}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"2357:280:34","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:34","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"2669:5:34","nodeType":"VariableDeclaration","scope":5909,"src":"2661:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:34"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"2699:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5886,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:34","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:34"},"scope":7553,"src":"2642:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5936,"nodeType":"Block","src":"3217:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"3231:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5919,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:34","memberName":"max","nodeType":"MemberAccess","src":"3239:17:34","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5930,"nodeType":"IfStatement","src":"3227:105:34","trueBody":{"id":5929,"nodeType":"Block","src":"3258:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:34","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"3315:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"3279:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"RevertStatement","src":"3272:49:34"}]}},{"expression":{"arguments":[{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"3356:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5931,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:34","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5916,"id":5935,"nodeType":"Return","src":"3341:21:34"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"2866:280:34","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:34","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"3178:5:34","nodeType":"VariableDeclaration","scope":5937,"src":"3170:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:34"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"3208:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5914,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:34","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:34"},"scope":7553,"src":"3151:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5964,"nodeType":"Block","src":"3726:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"3740:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5947,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:34","memberName":"max","nodeType":"MemberAccess","src":"3748:17:34","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5958,"nodeType":"IfStatement","src":"3736:105:34","trueBody":{"id":5957,"nodeType":"Block","src":"3767:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:34","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"3824:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"3788:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"RevertStatement","src":"3781:49:34"}]}},{"expression":{"arguments":[{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"3865:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5959,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:34","typeDescriptions":{}}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5944,"id":5963,"nodeType":"Return","src":"3850:21:34"}]},"documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"3375:280:34","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:34","nodeType":"FunctionDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"value","nameLocation":"3687:5:34","nodeType":"VariableDeclaration","scope":5965,"src":"3679:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:34"},"returnParameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5965,"src":"3717:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5942,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:34","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:34"},"scope":7553,"src":"3660:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5992,"nodeType":"Block","src":"4235:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"4249:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5975,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:34","memberName":"max","nodeType":"MemberAccess","src":"4257:17:34","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5986,"nodeType":"IfStatement","src":"4245:105:34","trueBody":{"id":5985,"nodeType":"Block","src":"4276:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:34","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"4333:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"4297:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5984,"nodeType":"RevertStatement","src":"4290:49:34"}]}},{"expression":{"arguments":[{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"4374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5987,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:34","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5972,"id":5991,"nodeType":"Return","src":"4359:21:34"}]},"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"3884:280:34","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:34","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"value","nameLocation":"4196:5:34","nodeType":"VariableDeclaration","scope":5993,"src":"4188:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:34"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5993,"src":"4226:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5970,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:34","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:34"},"scope":7553,"src":"4169:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"4744:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"4758:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6003,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:34","memberName":"max","nodeType":"MemberAccess","src":"4766:17:34","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"4754:105:34","trueBody":{"id":6013,"nodeType":"Block","src":"4785:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:34","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"4842:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"4806:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"4799:49:34"}]}},{"expression":{"arguments":[{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"4883:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6015,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:34","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6000,"id":6019,"nodeType":"Return","src":"4868:21:34"}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"4393:280:34","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:34","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"value","nameLocation":"4705:5:34","nodeType":"VariableDeclaration","scope":6021,"src":"4697:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:34"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6021,"src":"4735:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5998,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:34","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:34"},"scope":7553,"src":"4678:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6048,"nodeType":"Block","src":"5253:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"5267:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6031,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:34","memberName":"max","nodeType":"MemberAccess","src":"5275:17:34","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"5263:105:34","trueBody":{"id":6041,"nodeType":"Block","src":"5294:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:34","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"5351:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"5315:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6040,"nodeType":"RevertStatement","src":"5308:49:34"}]}},{"expression":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"5392:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6043,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:34","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6028,"id":6047,"nodeType":"Return","src":"5377:21:34"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"4902:280:34","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:34","nodeType":"FunctionDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"value","nameLocation":"5214:5:34","nodeType":"VariableDeclaration","scope":6049,"src":"5206:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:34"},"returnParameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"5244:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6026,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:34","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:34"},"scope":7553,"src":"5187:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"5762:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"5776:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6059,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:34","memberName":"max","nodeType":"MemberAccess","src":"5784:17:34","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6070,"nodeType":"IfStatement","src":"5772:105:34","trueBody":{"id":6069,"nodeType":"Block","src":"5803:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:34","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"5860:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"5824:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"RevertStatement","src":"5817:49:34"}]}},{"expression":{"arguments":[{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"5901:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6071,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:34","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6056,"id":6075,"nodeType":"Return","src":"5886:21:34"}]},"documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"5411:280:34","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:34","nodeType":"FunctionDefinition","parameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"value","nameLocation":"5723:5:34","nodeType":"VariableDeclaration","scope":6077,"src":"5715:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:34"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6077,"src":"5753:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6054,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:34","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:34"},"scope":7553,"src":"5696:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6104,"nodeType":"Block","src":"6271:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"6285:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6087,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:34","memberName":"max","nodeType":"MemberAccess","src":"6293:17:34","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6098,"nodeType":"IfStatement","src":"6281:105:34","trueBody":{"id":6097,"nodeType":"Block","src":"6312:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:34","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"6369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"6333:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6096,"nodeType":"RevertStatement","src":"6326:49:34"}]}},{"expression":{"arguments":[{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"6410:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6099,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:34","typeDescriptions":{}}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6084,"id":6103,"nodeType":"Return","src":"6395:21:34"}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"5920:280:34","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:34","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"value","nameLocation":"6232:5:34","nodeType":"VariableDeclaration","scope":6105,"src":"6224:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:34"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6105,"src":"6262:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6082,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:34","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:34"},"scope":7553,"src":"6205:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6132,"nodeType":"Block","src":"6780:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"6794:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6115,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:34","memberName":"max","nodeType":"MemberAccess","src":"6802:17:34","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6126,"nodeType":"IfStatement","src":"6790:105:34","trueBody":{"id":6125,"nodeType":"Block","src":"6821:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:34","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"6878:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"6842:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6124,"nodeType":"RevertStatement","src":"6835:49:34"}]}},{"expression":{"arguments":[{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"6919:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6127,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:34","typeDescriptions":{}}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6112,"id":6131,"nodeType":"Return","src":"6904:21:34"}]},"documentation":{"id":6106,"nodeType":"StructuredDocumentation","src":"6429:280:34","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:34","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"value","nameLocation":"6741:5:34","nodeType":"VariableDeclaration","scope":6133,"src":"6733:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:34"},"returnParameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6133,"src":"6771:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6110,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:34","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:34"},"scope":7553,"src":"6714:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6160,"nodeType":"Block","src":"7289:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"7303:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6143,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:34","memberName":"max","nodeType":"MemberAccess","src":"7311:17:34","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6154,"nodeType":"IfStatement","src":"7299:105:34","trueBody":{"id":6153,"nodeType":"Block","src":"7330:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:34","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"7387:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7351:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6152,"nodeType":"RevertStatement","src":"7344:49:34"}]}},{"expression":{"arguments":[{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"7428:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6155,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:34","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6140,"id":6159,"nodeType":"Return","src":"7413:21:34"}]},"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"6938:280:34","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:34","nodeType":"FunctionDefinition","parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"value","nameLocation":"7250:5:34","nodeType":"VariableDeclaration","scope":6161,"src":"7242:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:34"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6161,"src":"7280:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6138,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:34","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:34"},"scope":7553,"src":"7223:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6188,"nodeType":"Block","src":"7798:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"7812:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6171,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:34","memberName":"max","nodeType":"MemberAccess","src":"7820:17:34","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6182,"nodeType":"IfStatement","src":"7808:105:34","trueBody":{"id":6181,"nodeType":"Block","src":"7839:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:34","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"7896:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7860:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6180,"nodeType":"RevertStatement","src":"7853:49:34"}]}},{"expression":{"arguments":[{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"7937:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6183,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:34","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6168,"id":6187,"nodeType":"Return","src":"7922:21:34"}]},"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"7447:280:34","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:34","nodeType":"FunctionDefinition","parameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"value","nameLocation":"7759:5:34","nodeType":"VariableDeclaration","scope":6189,"src":"7751:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6163,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:34"},"returnParameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6189,"src":"7789:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6166,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:34","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:34"},"scope":7553,"src":"7732:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6216,"nodeType":"Block","src":"8307:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"8321:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6199,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:34","memberName":"max","nodeType":"MemberAccess","src":"8329:17:34","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6210,"nodeType":"IfStatement","src":"8317:105:34","trueBody":{"id":6209,"nodeType":"Block","src":"8348:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:34","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"8405:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"8369:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6208,"nodeType":"RevertStatement","src":"8362:49:34"}]}},{"expression":{"arguments":[{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"8446:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6211,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:34","typeDescriptions":{}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6196,"id":6215,"nodeType":"Return","src":"8431:21:34"}]},"documentation":{"id":6190,"nodeType":"StructuredDocumentation","src":"7956:280:34","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:34","nodeType":"FunctionDefinition","parameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"value","nameLocation":"8268:5:34","nodeType":"VariableDeclaration","scope":6217,"src":"8260:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:34"},"returnParameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6217,"src":"8298:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6194,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:34","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:34"},"scope":7553,"src":"8241:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6244,"nodeType":"Block","src":"8816:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"8830:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6227,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:34","memberName":"max","nodeType":"MemberAccess","src":"8838:17:34","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"IfStatement","src":"8826:105:34","trueBody":{"id":6237,"nodeType":"Block","src":"8857:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:34","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"8914:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"8878:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6236,"nodeType":"RevertStatement","src":"8871:49:34"}]}},{"expression":{"arguments":[{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"8955:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6239,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:34","typeDescriptions":{}}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6224,"id":6243,"nodeType":"Return","src":"8940:21:34"}]},"documentation":{"id":6218,"nodeType":"StructuredDocumentation","src":"8465:280:34","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:34","nodeType":"FunctionDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"value","nameLocation":"8777:5:34","nodeType":"VariableDeclaration","scope":6245,"src":"8769:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:34"},"returnParameters":{"id":6224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6245,"src":"8807:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6222,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:34","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:34"},"scope":7553,"src":"8750:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6272,"nodeType":"Block","src":"9325:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"9339:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6255,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:34","memberName":"max","nodeType":"MemberAccess","src":"9347:17:34","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6266,"nodeType":"IfStatement","src":"9335:105:34","trueBody":{"id":6265,"nodeType":"Block","src":"9366:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:34","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"9423:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"9387:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6264,"nodeType":"RevertStatement","src":"9380:49:34"}]}},{"expression":{"arguments":[{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"9464:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6267,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:34","typeDescriptions":{}}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6252,"id":6271,"nodeType":"Return","src":"9449:21:34"}]},"documentation":{"id":6246,"nodeType":"StructuredDocumentation","src":"8974:280:34","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:34","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"value","nameLocation":"9286:5:34","nodeType":"VariableDeclaration","scope":6273,"src":"9278:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:34"},"returnParameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6273,"src":"9316:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6250,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:34","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:34"},"scope":7553,"src":"9259:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6300,"nodeType":"Block","src":"9834:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"9848:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6283,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:34","memberName":"max","nodeType":"MemberAccess","src":"9856:17:34","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6294,"nodeType":"IfStatement","src":"9844:105:34","trueBody":{"id":6293,"nodeType":"Block","src":"9875:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:34","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"9932:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"9896:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6292,"nodeType":"RevertStatement","src":"9889:49:34"}]}},{"expression":{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"9973:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6295,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:34","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6280,"id":6299,"nodeType":"Return","src":"9958:21:34"}]},"documentation":{"id":6274,"nodeType":"StructuredDocumentation","src":"9483:280:34","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:34","nodeType":"FunctionDefinition","parameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"value","nameLocation":"9795:5:34","nodeType":"VariableDeclaration","scope":6301,"src":"9787:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6275,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:34"},"returnParameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6301,"src":"9825:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6278,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:34","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:34"},"scope":7553,"src":"9768:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"10343:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"10357:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6311,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:34","memberName":"max","nodeType":"MemberAccess","src":"10365:17:34","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6322,"nodeType":"IfStatement","src":"10353:105:34","trueBody":{"id":6321,"nodeType":"Block","src":"10384:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:34","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"10441:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6316,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"10405:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6320,"nodeType":"RevertStatement","src":"10398:49:34"}]}},{"expression":{"arguments":[{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"10482:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6323,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:34","typeDescriptions":{}}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6308,"id":6327,"nodeType":"Return","src":"10467:21:34"}]},"documentation":{"id":6302,"nodeType":"StructuredDocumentation","src":"9992:280:34","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:34","nodeType":"FunctionDefinition","parameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"value","nameLocation":"10304:5:34","nodeType":"VariableDeclaration","scope":6329,"src":"10296:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:34"},"returnParameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6329,"src":"10334:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6306,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:34","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:34"},"scope":7553,"src":"10277:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"10852:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"10866:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6339,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6338,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:34","memberName":"max","nodeType":"MemberAccess","src":"10874:17:34","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6350,"nodeType":"IfStatement","src":"10862:105:34","trueBody":{"id":6349,"nodeType":"Block","src":"10893:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:34","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"10950:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6344,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"10914:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6348,"nodeType":"RevertStatement","src":"10907:49:34"}]}},{"expression":{"arguments":[{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"10991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6351,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:34","typeDescriptions":{}}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6336,"id":6355,"nodeType":"Return","src":"10976:21:34"}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"10501:280:34","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:34","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"value","nameLocation":"10813:5:34","nodeType":"VariableDeclaration","scope":6357,"src":"10805:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6331,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:34"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6357,"src":"10843:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6334,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:34","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:34"},"scope":7553,"src":"10786:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6384,"nodeType":"Block","src":"11355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"11369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6367,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:34","memberName":"max","nodeType":"MemberAccess","src":"11377:16:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"IfStatement","src":"11365:103:34","trueBody":{"id":6377,"nodeType":"Block","src":"11395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"11451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6372,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"11416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"RevertStatement","src":"11409:48:34"}]}},{"expression":{"arguments":[{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"11491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6379,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:34","typeDescriptions":{}}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6364,"id":6383,"nodeType":"Return","src":"11477:20:34"}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"11010:276:34","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"11317:5:34","nodeType":"VariableDeclaration","scope":6385,"src":"11309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6359,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:34"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6385,"src":"11347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6362,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:34"},"scope":7553,"src":"11291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"11855:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"11869:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6395,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:34","memberName":"max","nodeType":"MemberAccess","src":"11877:16:34","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6406,"nodeType":"IfStatement","src":"11865:103:34","trueBody":{"id":6405,"nodeType":"Block","src":"11895:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:34","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"11951:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6400,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"11916:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6404,"nodeType":"RevertStatement","src":"11909:48:34"}]}},{"expression":{"arguments":[{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"11991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6407,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:34","typeDescriptions":{}}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6392,"id":6411,"nodeType":"Return","src":"11977:20:34"}]},"documentation":{"id":6386,"nodeType":"StructuredDocumentation","src":"11510:276:34","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:34","nodeType":"FunctionDefinition","parameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"value","nameLocation":"11817:5:34","nodeType":"VariableDeclaration","scope":6413,"src":"11809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6387,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:34"},"returnParameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6413,"src":"11847:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6390,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:34","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:34"},"scope":7553,"src":"11791:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6440,"nodeType":"Block","src":"12355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6423,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6422,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:34","memberName":"max","nodeType":"MemberAccess","src":"12377:16:34","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6434,"nodeType":"IfStatement","src":"12365:103:34","trueBody":{"id":6433,"nodeType":"Block","src":"12395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6428,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"12416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6432,"nodeType":"RevertStatement","src":"12409:48:34"}]}},{"expression":{"arguments":[{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6435,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:34","typeDescriptions":{}}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6420,"id":6439,"nodeType":"Return","src":"12477:20:34"}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"12010:276:34","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"value","nameLocation":"12317:5:34","nodeType":"VariableDeclaration","scope":6441,"src":"12309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:34"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6441,"src":"12347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6418,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:34","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:34"},"scope":7553,"src":"12291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6468,"nodeType":"Block","src":"12855:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"12869:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6451,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:34","memberName":"max","nodeType":"MemberAccess","src":"12877:16:34","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6462,"nodeType":"IfStatement","src":"12865:103:34","trueBody":{"id":6461,"nodeType":"Block","src":"12895:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:34","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"12951:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6456,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"12916:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6460,"nodeType":"RevertStatement","src":"12909:48:34"}]}},{"expression":{"arguments":[{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"12991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6463,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:34","typeDescriptions":{}}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6448,"id":6467,"nodeType":"Return","src":"12977:20:34"}]},"documentation":{"id":6442,"nodeType":"StructuredDocumentation","src":"12510:276:34","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:34","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"value","nameLocation":"12817:5:34","nodeType":"VariableDeclaration","scope":6469,"src":"12809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6443,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:34"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6469,"src":"12847:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6446,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:34","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:34"},"scope":7553,"src":"12791:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6496,"nodeType":"Block","src":"13355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"13369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6479,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:34","memberName":"max","nodeType":"MemberAccess","src":"13377:16:34","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6490,"nodeType":"IfStatement","src":"13365:103:34","trueBody":{"id":6489,"nodeType":"Block","src":"13395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"13451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6484,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"13416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6488,"nodeType":"RevertStatement","src":"13409:48:34"}]}},{"expression":{"arguments":[{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"13491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6491,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:34","typeDescriptions":{}}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6476,"id":6495,"nodeType":"Return","src":"13477:20:34"}]},"documentation":{"id":6470,"nodeType":"StructuredDocumentation","src":"13010:276:34","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6497,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6472,"mutability":"mutable","name":"value","nameLocation":"13317:5:34","nodeType":"VariableDeclaration","scope":6497,"src":"13309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6471,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:34"},"returnParameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6497,"src":"13347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6474,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:34","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:34"},"scope":7553,"src":"13291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6524,"nodeType":"Block","src":"13855:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13869:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6507,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6506,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:34","memberName":"max","nodeType":"MemberAccess","src":"13877:16:34","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6518,"nodeType":"IfStatement","src":"13865:103:34","trueBody":{"id":6517,"nodeType":"Block","src":"13895:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:34","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13951:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6512,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"13916:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6516,"nodeType":"RevertStatement","src":"13909:48:34"}]}},{"expression":{"arguments":[{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6519,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:34","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6504,"id":6523,"nodeType":"Return","src":"13977:20:34"}]},"documentation":{"id":6498,"nodeType":"StructuredDocumentation","src":"13510:276:34","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:34","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"value","nameLocation":"13817:5:34","nodeType":"VariableDeclaration","scope":6525,"src":"13809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6499,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:34"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6525,"src":"13847:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6502,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:34","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:34"},"scope":7553,"src":"13791:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6552,"nodeType":"Block","src":"14355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"14369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6535,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:34","memberName":"max","nodeType":"MemberAccess","src":"14377:16:34","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6546,"nodeType":"IfStatement","src":"14365:103:34","trueBody":{"id":6545,"nodeType":"Block","src":"14395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"14451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6540,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"14416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6544,"nodeType":"RevertStatement","src":"14409:48:34"}]}},{"expression":{"arguments":[{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"14491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6547,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:34","typeDescriptions":{}}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6532,"id":6551,"nodeType":"Return","src":"14477:20:34"}]},"documentation":{"id":6526,"nodeType":"StructuredDocumentation","src":"14010:276:34","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"value","nameLocation":"14317:5:34","nodeType":"VariableDeclaration","scope":6553,"src":"14309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:34"},"returnParameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6553,"src":"14347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6530,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:34","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:34"},"scope":7553,"src":"14291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6580,"nodeType":"Block","src":"14855:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"14869:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6563,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:34","memberName":"max","nodeType":"MemberAccess","src":"14877:16:34","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6574,"nodeType":"IfStatement","src":"14865:103:34","trueBody":{"id":6573,"nodeType":"Block","src":"14895:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:34","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"14951:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"14916:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6572,"nodeType":"RevertStatement","src":"14909:48:34"}]}},{"expression":{"arguments":[{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"14991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6575,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:34","typeDescriptions":{}}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6560,"id":6579,"nodeType":"Return","src":"14977:20:34"}]},"documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"14510:276:34","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6581,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:34","nodeType":"FunctionDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"value","nameLocation":"14817:5:34","nodeType":"VariableDeclaration","scope":6581,"src":"14809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:34"},"returnParameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6581,"src":"14847:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6558,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:34","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:34"},"scope":7553,"src":"14791:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6608,"nodeType":"Block","src":"15355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"15369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6591,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6590,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:34","memberName":"max","nodeType":"MemberAccess","src":"15377:16:34","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6602,"nodeType":"IfStatement","src":"15365:103:34","trueBody":{"id":6601,"nodeType":"Block","src":"15395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"15451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"15416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6600,"nodeType":"RevertStatement","src":"15409:48:34"}]}},{"expression":{"arguments":[{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"15491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6603,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:34","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6588,"id":6607,"nodeType":"Return","src":"15477:20:34"}]},"documentation":{"id":6582,"nodeType":"StructuredDocumentation","src":"15010:276:34","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6609,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6584,"mutability":"mutable","name":"value","nameLocation":"15317:5:34","nodeType":"VariableDeclaration","scope":6609,"src":"15309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6583,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:34"},"returnParameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6609,"src":"15347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6586,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:34","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:34"},"scope":7553,"src":"15291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6636,"nodeType":"Block","src":"15855:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"15869:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6619,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6618,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:34","memberName":"max","nodeType":"MemberAccess","src":"15877:16:34","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6630,"nodeType":"IfStatement","src":"15865:103:34","trueBody":{"id":6629,"nodeType":"Block","src":"15895:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:34","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"15951:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6624,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"15916:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6628,"nodeType":"RevertStatement","src":"15909:48:34"}]}},{"expression":{"arguments":[{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"15991:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6631,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:34","typeDescriptions":{}}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6616,"id":6635,"nodeType":"Return","src":"15977:20:34"}]},"documentation":{"id":6610,"nodeType":"StructuredDocumentation","src":"15510:276:34","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6637,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:34","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"value","nameLocation":"15817:5:34","nodeType":"VariableDeclaration","scope":6637,"src":"15809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:34"},"returnParameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"15847:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6614,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:34","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:34"},"scope":7553,"src":"15791:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6664,"nodeType":"Block","src":"16355:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"16369:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6647,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6646,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:34","memberName":"max","nodeType":"MemberAccess","src":"16377:16:34","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6658,"nodeType":"IfStatement","src":"16365:103:34","trueBody":{"id":6657,"nodeType":"Block","src":"16395:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:34","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"16451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"16416:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6656,"nodeType":"RevertStatement","src":"16409:48:34"}]}},{"expression":{"arguments":[{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"16491:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6659,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:34","typeDescriptions":{}}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6644,"id":6663,"nodeType":"Return","src":"16477:20:34"}]},"documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"16010:276:34","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6665,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:34","nodeType":"FunctionDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"value","nameLocation":"16317:5:34","nodeType":"VariableDeclaration","scope":6665,"src":"16309:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:34"},"returnParameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6665,"src":"16347:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6642,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:34","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:34"},"scope":7553,"src":"16291:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6692,"nodeType":"Block","src":"16849:146:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"16863:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6675,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6674,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:34","memberName":"max","nodeType":"MemberAccess","src":"16871:15:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6686,"nodeType":"IfStatement","src":"16859:101:34","trueBody":{"id":6685,"nodeType":"Block","src":"16888:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:34","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"16943:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6680,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"16909:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6684,"nodeType":"RevertStatement","src":"16902:47:34"}]}},{"expression":{"arguments":[{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"16982:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6687,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:34","typeDescriptions":{}}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6672,"id":6691,"nodeType":"Return","src":"16969:19:34"}]},"documentation":{"id":6666,"nodeType":"StructuredDocumentation","src":"16510:272:34","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6693,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:34","nodeType":"FunctionDefinition","parameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"value","nameLocation":"16812:5:34","nodeType":"VariableDeclaration","scope":6693,"src":"16804:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:34"},"returnParameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6693,"src":"16842:5:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6670,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:34"},"scope":7553,"src":"16787:208:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6715,"nodeType":"Block","src":"17231:128:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"17245:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6709,"nodeType":"IfStatement","src":"17241:81:34","trueBody":{"id":6708,"nodeType":"Block","src":"17256:66:34","statements":[{"errorCall":{"arguments":[{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"17305:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6704,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"17277:27:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6707,"nodeType":"RevertStatement","src":"17270:41:34"}]}},{"expression":{"arguments":[{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"17346:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:34","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6700,"id":6714,"nodeType":"Return","src":"17331:21:34"}]},"documentation":{"id":6694,"nodeType":"StructuredDocumentation","src":"17001:160:34","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:34","nodeType":"FunctionDefinition","parameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"value","nameLocation":"17192:5:34","nodeType":"VariableDeclaration","scope":6716,"src":"17185:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6695,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:34"},"returnParameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6716,"src":"17222:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:34"},"scope":7553,"src":"17166:193:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6741,"nodeType":"Block","src":"17756:150:34","statements":[{"expression":{"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"17766:10:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17786:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6725,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:34","typeDescriptions":{}}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6730,"nodeType":"ExpressionStatement","src":"17766:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"17806:10:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17820:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6740,"nodeType":"IfStatement","src":"17802:98:34","trueBody":{"id":6739,"nodeType":"Block","src":"17827:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:34","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17883:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"17848:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6738,"nodeType":"RevertStatement","src":"17841:48:34"}]}}]},"documentation":{"id":6717,"nodeType":"StructuredDocumentation","src":"17365:312:34","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6742,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:34","nodeType":"FunctionDefinition","parameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"value","nameLocation":"17707:5:34","nodeType":"VariableDeclaration","scope":6742,"src":"17700:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6718,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:34"},"returnParameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:34","nodeType":"VariableDeclaration","scope":6742,"src":"17737:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6721,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:34"},"scope":7553,"src":"17682:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6767,"nodeType":"Block","src":"18303:150:34","statements":[{"expression":{"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"18313:10:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"18333:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6751,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:34","typeDescriptions":{}}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6756,"nodeType":"ExpressionStatement","src":"18313:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"18353:10:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"18367:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6766,"nodeType":"IfStatement","src":"18349:98:34","trueBody":{"id":6765,"nodeType":"Block","src":"18374:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:34","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"18430:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"18395:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6764,"nodeType":"RevertStatement","src":"18388:48:34"}]}}]},"documentation":{"id":6743,"nodeType":"StructuredDocumentation","src":"17912:312:34","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:34","nodeType":"FunctionDefinition","parameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"value","nameLocation":"18254:5:34","nodeType":"VariableDeclaration","scope":6768,"src":"18247:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6744,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:34"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:34","nodeType":"VariableDeclaration","scope":6768,"src":"18284:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6747,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:34"},"scope":7553,"src":"18229:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6793,"nodeType":"Block","src":"18850:150:34","statements":[{"expression":{"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"18860:10:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"18880:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6777,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:34","typeDescriptions":{}}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6782,"nodeType":"ExpressionStatement","src":"18860:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"18900:10:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"18914:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"nodeType":"IfStatement","src":"18896:98:34","trueBody":{"id":6791,"nodeType":"Block","src":"18921:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:34","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"18977:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"18942:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6790,"nodeType":"RevertStatement","src":"18935:48:34"}]}}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"18459:312:34","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:34","nodeType":"FunctionDefinition","parameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"value","nameLocation":"18801:5:34","nodeType":"VariableDeclaration","scope":6794,"src":"18794:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6770,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:34"},"returnParameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:34","nodeType":"VariableDeclaration","scope":6794,"src":"18831:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6773,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:34"},"scope":7553,"src":"18776:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6819,"nodeType":"Block","src":"19397:150:34","statements":[{"expression":{"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"19407:10:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"19427:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6803,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:34","typeDescriptions":{}}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6808,"nodeType":"ExpressionStatement","src":"19407:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"19447:10:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"19461:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6818,"nodeType":"IfStatement","src":"19443:98:34","trueBody":{"id":6817,"nodeType":"Block","src":"19468:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:34","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"19524:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"19489:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6816,"nodeType":"RevertStatement","src":"19482:48:34"}]}}]},"documentation":{"id":6795,"nodeType":"StructuredDocumentation","src":"19006:312:34","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6820,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:34","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"value","nameLocation":"19348:5:34","nodeType":"VariableDeclaration","scope":6820,"src":"19341:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6796,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:34"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:34","nodeType":"VariableDeclaration","scope":6820,"src":"19378:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6799,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:34"},"scope":7553,"src":"19323:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6845,"nodeType":"Block","src":"19944:150:34","statements":[{"expression":{"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"19954:10:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19974:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6829,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:34","typeDescriptions":{}}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6834,"nodeType":"ExpressionStatement","src":"19954:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"19994:10:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"20008:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6844,"nodeType":"IfStatement","src":"19990:98:34","trueBody":{"id":6843,"nodeType":"Block","src":"20015:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:34","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"20071:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"20036:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6842,"nodeType":"RevertStatement","src":"20029:48:34"}]}}]},"documentation":{"id":6821,"nodeType":"StructuredDocumentation","src":"19553:312:34","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:34","nodeType":"FunctionDefinition","parameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"value","nameLocation":"19895:5:34","nodeType":"VariableDeclaration","scope":6846,"src":"19888:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6822,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:34"},"returnParameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:34","nodeType":"VariableDeclaration","scope":6846,"src":"19925:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6825,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:34"},"scope":7553,"src":"19870:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6871,"nodeType":"Block","src":"20491:150:34","statements":[{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"20501:10:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"20521:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6855,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:34","typeDescriptions":{}}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6860,"nodeType":"ExpressionStatement","src":"20501:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"20541:10:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"20555:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"20537:98:34","trueBody":{"id":6869,"nodeType":"Block","src":"20562:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:34","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"20618:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"20583:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6868,"nodeType":"RevertStatement","src":"20576:48:34"}]}}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"20100:312:34","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:34","nodeType":"FunctionDefinition","parameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"value","nameLocation":"20442:5:34","nodeType":"VariableDeclaration","scope":6872,"src":"20435:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6848,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:34"},"returnParameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:34","nodeType":"VariableDeclaration","scope":6872,"src":"20472:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6851,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:34"},"scope":7553,"src":"20417:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"21038:150:34","statements":[{"expression":{"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"21048:10:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"21068:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6881,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:34","typeDescriptions":{}}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6886,"nodeType":"ExpressionStatement","src":"21048:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"21088:10:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"21102:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"nodeType":"IfStatement","src":"21084:98:34","trueBody":{"id":6895,"nodeType":"Block","src":"21109:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:34","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"21165:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"21130:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6894,"nodeType":"RevertStatement","src":"21123:48:34"}]}}]},"documentation":{"id":6873,"nodeType":"StructuredDocumentation","src":"20647:312:34","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:34","nodeType":"FunctionDefinition","parameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"value","nameLocation":"20989:5:34","nodeType":"VariableDeclaration","scope":6898,"src":"20982:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6874,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:34"},"returnParameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:34","nodeType":"VariableDeclaration","scope":6898,"src":"21019:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6877,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:34"},"scope":7553,"src":"20964:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6923,"nodeType":"Block","src":"21585:150:34","statements":[{"expression":{"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"21595:10:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"21615:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6907,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:34","typeDescriptions":{}}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6912,"nodeType":"ExpressionStatement","src":"21595:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"21635:10:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"21649:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6922,"nodeType":"IfStatement","src":"21631:98:34","trueBody":{"id":6921,"nodeType":"Block","src":"21656:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:34","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"21712:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"21677:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"RevertStatement","src":"21670:48:34"}]}}]},"documentation":{"id":6899,"nodeType":"StructuredDocumentation","src":"21194:312:34","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:34","nodeType":"FunctionDefinition","parameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"value","nameLocation":"21536:5:34","nodeType":"VariableDeclaration","scope":6924,"src":"21529:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6900,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:34"},"returnParameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:34","nodeType":"VariableDeclaration","scope":6924,"src":"21566:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6903,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:34"},"scope":7553,"src":"21511:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6949,"nodeType":"Block","src":"22132:150:34","statements":[{"expression":{"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"22142:10:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"22162:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6933,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:34","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6938,"nodeType":"ExpressionStatement","src":"22142:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"22182:10:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"22196:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6948,"nodeType":"IfStatement","src":"22178:98:34","trueBody":{"id":6947,"nodeType":"Block","src":"22203:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:34","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"22259:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"22224:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6946,"nodeType":"RevertStatement","src":"22217:48:34"}]}}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"21741:312:34","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6950,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:34","nodeType":"FunctionDefinition","parameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"value","nameLocation":"22083:5:34","nodeType":"VariableDeclaration","scope":6950,"src":"22076:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6926,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:34"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:34","nodeType":"VariableDeclaration","scope":6950,"src":"22113:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6929,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:34"},"scope":7553,"src":"22058:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6975,"nodeType":"Block","src":"22679:150:34","statements":[{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"22689:10:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"22709:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6959,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:34","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6964,"nodeType":"ExpressionStatement","src":"22689:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"22729:10:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"22743:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6974,"nodeType":"IfStatement","src":"22725:98:34","trueBody":{"id":6973,"nodeType":"Block","src":"22750:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:34","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"22806:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6968,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"22771:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6972,"nodeType":"RevertStatement","src":"22764:48:34"}]}}]},"documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"22288:312:34","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:34","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"value","nameLocation":"22630:5:34","nodeType":"VariableDeclaration","scope":6976,"src":"22623:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6952,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:34"},"returnParameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:34","nodeType":"VariableDeclaration","scope":6976,"src":"22660:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6955,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:34"},"scope":7553,"src":"22605:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7001,"nodeType":"Block","src":"23226:150:34","statements":[{"expression":{"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"23236:10:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"23256:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6985,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:34","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6990,"nodeType":"ExpressionStatement","src":"23236:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"23276:10:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"23290:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7000,"nodeType":"IfStatement","src":"23272:98:34","trueBody":{"id":6999,"nodeType":"Block","src":"23297:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:34","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"23353:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6994,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"23318:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6998,"nodeType":"RevertStatement","src":"23311:48:34"}]}}]},"documentation":{"id":6977,"nodeType":"StructuredDocumentation","src":"22835:312:34","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:34","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"value","nameLocation":"23177:5:34","nodeType":"VariableDeclaration","scope":7002,"src":"23170:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6978,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:34"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:34","nodeType":"VariableDeclaration","scope":7002,"src":"23207:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6981,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:34"},"scope":7553,"src":"23152:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7027,"nodeType":"Block","src":"23773:150:34","statements":[{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7010,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"23783:10:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"23803:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7011,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:34","typeDescriptions":{}}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7016,"nodeType":"ExpressionStatement","src":"23783:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"23823:10:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"23837:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7026,"nodeType":"IfStatement","src":"23819:98:34","trueBody":{"id":7025,"nodeType":"Block","src":"23844:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:34","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"23900:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7020,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"23865:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"RevertStatement","src":"23858:48:34"}]}}]},"documentation":{"id":7003,"nodeType":"StructuredDocumentation","src":"23382:312:34","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:34","nodeType":"FunctionDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"value","nameLocation":"23724:5:34","nodeType":"VariableDeclaration","scope":7028,"src":"23717:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7004,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:34"},"returnParameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:34","nodeType":"VariableDeclaration","scope":7028,"src":"23754:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7007,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:34"},"scope":7553,"src":"23699:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"24320:150:34","statements":[{"expression":{"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"24330:10:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"24350:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7037,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:34","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7042,"nodeType":"ExpressionStatement","src":"24330:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"24370:10:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"24384:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7052,"nodeType":"IfStatement","src":"24366:98:34","trueBody":{"id":7051,"nodeType":"Block","src":"24391:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:34","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"24447:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7046,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"24412:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7050,"nodeType":"RevertStatement","src":"24405:48:34"}]}}]},"documentation":{"id":7029,"nodeType":"StructuredDocumentation","src":"23929:312:34","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:34","nodeType":"FunctionDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"value","nameLocation":"24271:5:34","nodeType":"VariableDeclaration","scope":7054,"src":"24264:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:34"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:34","nodeType":"VariableDeclaration","scope":7054,"src":"24301:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7033,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:34"},"scope":7553,"src":"24246:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7079,"nodeType":"Block","src":"24867:150:34","statements":[{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24877:10:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"24897:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7063,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:34","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7068,"nodeType":"ExpressionStatement","src":"24877:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24917:10:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"24931:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7078,"nodeType":"IfStatement","src":"24913:98:34","trueBody":{"id":7077,"nodeType":"Block","src":"24938:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:34","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"24994:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"24959:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7076,"nodeType":"RevertStatement","src":"24952:48:34"}]}}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"24476:312:34","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7080,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:34","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"24818:5:34","nodeType":"VariableDeclaration","scope":7080,"src":"24811:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7056,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:34"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:34","nodeType":"VariableDeclaration","scope":7080,"src":"24848:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7059,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:34"},"scope":7553,"src":"24793:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7105,"nodeType":"Block","src":"25414:150:34","statements":[{"expression":{"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25424:10:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"25444:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7089,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:34","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7094,"nodeType":"ExpressionStatement","src":"25424:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25464:10:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"25478:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7104,"nodeType":"IfStatement","src":"25460:98:34","trueBody":{"id":7103,"nodeType":"Block","src":"25485:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:34","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"25541:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"25506:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"RevertStatement","src":"25499:48:34"}]}}]},"documentation":{"id":7081,"nodeType":"StructuredDocumentation","src":"25023:312:34","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:34","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"value","nameLocation":"25365:5:34","nodeType":"VariableDeclaration","scope":7106,"src":"25358:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7082,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:34"},"returnParameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:34","nodeType":"VariableDeclaration","scope":7106,"src":"25395:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7085,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:34"},"scope":7553,"src":"25340:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7131,"nodeType":"Block","src":"25961:150:34","statements":[{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"25971:10:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"25991:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7115,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:34","typeDescriptions":{}}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7120,"nodeType":"ExpressionStatement","src":"25971:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"26011:10:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"26025:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7130,"nodeType":"IfStatement","src":"26007:98:34","trueBody":{"id":7129,"nodeType":"Block","src":"26032:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:34","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"26088:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7124,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"26053:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7128,"nodeType":"RevertStatement","src":"26046:48:34"}]}}]},"documentation":{"id":7107,"nodeType":"StructuredDocumentation","src":"25570:312:34","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7132,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:34","nodeType":"FunctionDefinition","parameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"value","nameLocation":"25912:5:34","nodeType":"VariableDeclaration","scope":7132,"src":"25905:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7108,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:34"},"returnParameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:34","nodeType":"VariableDeclaration","scope":7132,"src":"25942:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7111,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:34"},"scope":7553,"src":"25887:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7157,"nodeType":"Block","src":"26508:150:34","statements":[{"expression":{"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"26518:10:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"26538:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7141,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:34","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7146,"nodeType":"ExpressionStatement","src":"26518:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"26558:10:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"26572:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7156,"nodeType":"IfStatement","src":"26554:98:34","trueBody":{"id":7155,"nodeType":"Block","src":"26579:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:34","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"26635:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7150,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"26600:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7154,"nodeType":"RevertStatement","src":"26593:48:34"}]}}]},"documentation":{"id":7133,"nodeType":"StructuredDocumentation","src":"26117:312:34","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7158,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:34","nodeType":"FunctionDefinition","parameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"value","nameLocation":"26459:5:34","nodeType":"VariableDeclaration","scope":7158,"src":"26452:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7134,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:34"},"returnParameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:34","nodeType":"VariableDeclaration","scope":7158,"src":"26489:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7137,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:34"},"scope":7553,"src":"26434:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7183,"nodeType":"Block","src":"27055:150:34","statements":[{"expression":{"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"27065:10:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"27085:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7167,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:34","typeDescriptions":{}}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7172,"nodeType":"ExpressionStatement","src":"27065:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"27105:10:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"27119:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"nodeType":"IfStatement","src":"27101:98:34","trueBody":{"id":7181,"nodeType":"Block","src":"27126:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:34","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"27182:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7176,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"27147:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7180,"nodeType":"RevertStatement","src":"27140:48:34"}]}}]},"documentation":{"id":7159,"nodeType":"StructuredDocumentation","src":"26664:312:34","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7184,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:34","nodeType":"FunctionDefinition","parameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"value","nameLocation":"27006:5:34","nodeType":"VariableDeclaration","scope":7184,"src":"26999:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7160,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:34"},"returnParameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:34","nodeType":"VariableDeclaration","scope":7184,"src":"27036:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7163,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:34"},"scope":7553,"src":"26981:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7209,"nodeType":"Block","src":"27602:150:34","statements":[{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"27612:10:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"27632:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7193,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:34","typeDescriptions":{}}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7198,"nodeType":"ExpressionStatement","src":"27612:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"27652:10:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"27666:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"27648:98:34","trueBody":{"id":7207,"nodeType":"Block","src":"27673:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:34","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"27729:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7202,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"27694:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7206,"nodeType":"RevertStatement","src":"27687:48:34"}]}}]},"documentation":{"id":7185,"nodeType":"StructuredDocumentation","src":"27211:312:34","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:34","nodeType":"FunctionDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"value","nameLocation":"27553:5:34","nodeType":"VariableDeclaration","scope":7210,"src":"27546:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7186,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:34"},"returnParameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:34","nodeType":"VariableDeclaration","scope":7210,"src":"27583:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7189,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:34"},"scope":7553,"src":"27528:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7235,"nodeType":"Block","src":"28142:148:34","statements":[{"expression":{"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"28152:10:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"28171:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7219,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:34","typeDescriptions":{}}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7224,"nodeType":"ExpressionStatement","src":"28152:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"28191:10:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"28205:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7234,"nodeType":"IfStatement","src":"28187:97:34","trueBody":{"id":7233,"nodeType":"Block","src":"28212:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:34","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"28267:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7228,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28233:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7232,"nodeType":"RevertStatement","src":"28226:47:34"}]}}]},"documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"27758:307:34","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:34","nodeType":"FunctionDefinition","parameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"value","nameLocation":"28094:5:34","nodeType":"VariableDeclaration","scope":7236,"src":"28087:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:34"},"returnParameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:34","nodeType":"VariableDeclaration","scope":7236,"src":"28124:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7215,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:34"},"scope":7553,"src":"28070:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7261,"nodeType":"Block","src":"28680:148:34","statements":[{"expression":{"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"28690:10:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"28709:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7245,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:34","typeDescriptions":{}}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7250,"nodeType":"ExpressionStatement","src":"28690:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"28729:10:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"28743:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7260,"nodeType":"IfStatement","src":"28725:97:34","trueBody":{"id":7259,"nodeType":"Block","src":"28750:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:34","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"28805:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7254,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28771:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"RevertStatement","src":"28764:47:34"}]}}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"28296:307:34","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:34","nodeType":"FunctionDefinition","parameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"value","nameLocation":"28632:5:34","nodeType":"VariableDeclaration","scope":7262,"src":"28625:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7238,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:34"},"returnParameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:34","nodeType":"VariableDeclaration","scope":7262,"src":"28662:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7241,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:34"},"scope":7553,"src":"28608:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7287,"nodeType":"Block","src":"29218:148:34","statements":[{"expression":{"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"29228:10:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"29247:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7271,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:34","typeDescriptions":{}}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7276,"nodeType":"ExpressionStatement","src":"29228:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"29267:10:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"29281:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7286,"nodeType":"IfStatement","src":"29263:97:34","trueBody":{"id":7285,"nodeType":"Block","src":"29288:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:34","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"29343:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7280,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"29309:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"RevertStatement","src":"29302:47:34"}]}}]},"documentation":{"id":7263,"nodeType":"StructuredDocumentation","src":"28834:307:34","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:34","nodeType":"FunctionDefinition","parameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"value","nameLocation":"29170:5:34","nodeType":"VariableDeclaration","scope":7288,"src":"29163:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7264,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:34"},"returnParameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:34","nodeType":"VariableDeclaration","scope":7288,"src":"29200:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7267,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:34"},"scope":7553,"src":"29146:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7313,"nodeType":"Block","src":"29756:148:34","statements":[{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29766:10:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29785:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7297,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:34","typeDescriptions":{}}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7302,"nodeType":"ExpressionStatement","src":"29766:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29805:10:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29819:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7312,"nodeType":"IfStatement","src":"29801:97:34","trueBody":{"id":7311,"nodeType":"Block","src":"29826:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:34","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29881:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7306,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"29847:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7310,"nodeType":"RevertStatement","src":"29840:47:34"}]}}]},"documentation":{"id":7289,"nodeType":"StructuredDocumentation","src":"29372:307:34","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:34","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"value","nameLocation":"29708:5:34","nodeType":"VariableDeclaration","scope":7314,"src":"29701:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7290,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:34"},"returnParameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:34","nodeType":"VariableDeclaration","scope":7314,"src":"29738:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7293,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:34"},"scope":7553,"src":"29684:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7339,"nodeType":"Block","src":"30294:148:34","statements":[{"expression":{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"30304:10:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"30323:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7323,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:34","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7328,"nodeType":"ExpressionStatement","src":"30304:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"30343:10:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"30357:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7338,"nodeType":"IfStatement","src":"30339:97:34","trueBody":{"id":7337,"nodeType":"Block","src":"30364:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:34","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"30419:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7332,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"30385:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7336,"nodeType":"RevertStatement","src":"30378:47:34"}]}}]},"documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"29910:307:34","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7340,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:34","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"value","nameLocation":"30246:5:34","nodeType":"VariableDeclaration","scope":7340,"src":"30239:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7316,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:34"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:34","nodeType":"VariableDeclaration","scope":7340,"src":"30276:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7319,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:34"},"scope":7553,"src":"30222:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"30832:148:34","statements":[{"expression":{"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"30842:10:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"30861:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7349,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:34","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7354,"nodeType":"ExpressionStatement","src":"30842:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"30881:10:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"30895:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7364,"nodeType":"IfStatement","src":"30877:97:34","trueBody":{"id":7363,"nodeType":"Block","src":"30902:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:34","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"30957:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7358,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"30923:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7362,"nodeType":"RevertStatement","src":"30916:47:34"}]}}]},"documentation":{"id":7341,"nodeType":"StructuredDocumentation","src":"30448:307:34","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:34","nodeType":"FunctionDefinition","parameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"value","nameLocation":"30784:5:34","nodeType":"VariableDeclaration","scope":7366,"src":"30777:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:34"},"returnParameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:34","nodeType":"VariableDeclaration","scope":7366,"src":"30814:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7345,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:34"},"scope":7553,"src":"30760:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7391,"nodeType":"Block","src":"31370:148:34","statements":[{"expression":{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"31380:10:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"31399:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7375,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:34","typeDescriptions":{}}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7380,"nodeType":"ExpressionStatement","src":"31380:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"31419:10:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"31433:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"31415:97:34","trueBody":{"id":7389,"nodeType":"Block","src":"31440:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:34","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"31495:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7384,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"31461:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7388,"nodeType":"RevertStatement","src":"31454:47:34"}]}}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"30986:307:34","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7392,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:34","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"value","nameLocation":"31322:5:34","nodeType":"VariableDeclaration","scope":7392,"src":"31315:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7368,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:34"},"returnParameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:34","nodeType":"VariableDeclaration","scope":7392,"src":"31352:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7371,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:34"},"scope":7553,"src":"31298:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7417,"nodeType":"Block","src":"31908:148:34","statements":[{"expression":{"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"31918:10:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"31937:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7401,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:34","typeDescriptions":{}}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7406,"nodeType":"ExpressionStatement","src":"31918:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"31957:10:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"31971:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"nodeType":"IfStatement","src":"31953:97:34","trueBody":{"id":7415,"nodeType":"Block","src":"31978:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:34","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"32033:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"31999:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7414,"nodeType":"RevertStatement","src":"31992:47:34"}]}}]},"documentation":{"id":7393,"nodeType":"StructuredDocumentation","src":"31524:307:34","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:34","nodeType":"FunctionDefinition","parameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"value","nameLocation":"31860:5:34","nodeType":"VariableDeclaration","scope":7418,"src":"31853:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7394,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:34"},"returnParameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:34","nodeType":"VariableDeclaration","scope":7418,"src":"31890:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7397,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:34"},"scope":7553,"src":"31836:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7443,"nodeType":"Block","src":"32446:148:34","statements":[{"expression":{"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"32456:10:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"32475:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7427,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:34","typeDescriptions":{}}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7432,"nodeType":"ExpressionStatement","src":"32456:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"32495:10:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"32509:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7442,"nodeType":"IfStatement","src":"32491:97:34","trueBody":{"id":7441,"nodeType":"Block","src":"32516:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:34","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"32571:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"32537:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7440,"nodeType":"RevertStatement","src":"32530:47:34"}]}}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"32062:307:34","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:34","nodeType":"FunctionDefinition","parameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"value","nameLocation":"32398:5:34","nodeType":"VariableDeclaration","scope":7444,"src":"32391:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7420,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:34"},"returnParameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:34","nodeType":"VariableDeclaration","scope":7444,"src":"32428:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7423,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:34"},"scope":7553,"src":"32374:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7469,"nodeType":"Block","src":"32984:148:34","statements":[{"expression":{"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"32994:10:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"33013:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7453,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:34","typeDescriptions":{}}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7458,"nodeType":"ExpressionStatement","src":"32994:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"33033:10:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"33047:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"IfStatement","src":"33029:97:34","trueBody":{"id":7467,"nodeType":"Block","src":"33054:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:34","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"33109:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"33075:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7466,"nodeType":"RevertStatement","src":"33068:47:34"}]}}]},"documentation":{"id":7445,"nodeType":"StructuredDocumentation","src":"32600:307:34","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:34","nodeType":"FunctionDefinition","parameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"value","nameLocation":"32936:5:34","nodeType":"VariableDeclaration","scope":7470,"src":"32929:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7446,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:34"},"returnParameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:34","nodeType":"VariableDeclaration","scope":7470,"src":"32966:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7449,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:34"},"scope":7553,"src":"32912:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7495,"nodeType":"Block","src":"33522:148:34","statements":[{"expression":{"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"33532:10:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"33551:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7479,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:34","typeDescriptions":{}}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7484,"nodeType":"ExpressionStatement","src":"33532:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"33571:10:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"33585:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7494,"nodeType":"IfStatement","src":"33567:97:34","trueBody":{"id":7493,"nodeType":"Block","src":"33592:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:34","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"33647:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"33613:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7492,"nodeType":"RevertStatement","src":"33606:47:34"}]}}]},"documentation":{"id":7471,"nodeType":"StructuredDocumentation","src":"33138:307:34","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:34","nodeType":"FunctionDefinition","parameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"value","nameLocation":"33474:5:34","nodeType":"VariableDeclaration","scope":7496,"src":"33467:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:34"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:34","nodeType":"VariableDeclaration","scope":7496,"src":"33504:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7475,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:34"},"scope":7553,"src":"33450:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7521,"nodeType":"Block","src":"34053:146:34","statements":[{"expression":{"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"34063:10:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"34081:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7505,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:34","typeDescriptions":{}}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7510,"nodeType":"ExpressionStatement","src":"34063:24:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"34101:10:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"34115:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7520,"nodeType":"IfStatement","src":"34097:96:34","trueBody":{"id":7519,"nodeType":"Block","src":"34122:71:34","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:34","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"34176:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"34143:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7518,"nodeType":"RevertStatement","src":"34136:46:34"}]}}]},"documentation":{"id":7497,"nodeType":"StructuredDocumentation","src":"33676:302:34","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:34","nodeType":"FunctionDefinition","parameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"value","nameLocation":"34006:5:34","nodeType":"VariableDeclaration","scope":7522,"src":"33999:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7498,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:34"},"returnParameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:34","nodeType":"VariableDeclaration","scope":7522,"src":"34036:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7501,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:34"},"scope":7553,"src":"33983:216:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7551,"nodeType":"Block","src":"34439:250:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"34552:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7534,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7533,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:34","memberName":"max","nodeType":"MemberAccess","src":"34568:16:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:34","typeDescriptions":{}}},"id":7538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7545,"nodeType":"IfStatement","src":"34548:105:34","trueBody":{"id":7544,"nodeType":"Block","src":"34587:66:34","statements":[{"errorCall":{"arguments":[{"id":7541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"34636:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7540,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"34608:27:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7543,"nodeType":"RevertStatement","src":"34601:41:34"}]}},{"expression":{"arguments":[{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"34676:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7546,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:34","typeDescriptions":{}}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7529,"id":7550,"nodeType":"Return","src":"34662:20:34"}]},"documentation":{"id":7523,"nodeType":"StructuredDocumentation","src":"34205:165:34","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7552,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:34","nodeType":"FunctionDefinition","parameters":{"id":7526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7525,"mutability":"mutable","name":"value","nameLocation":"34401:5:34","nodeType":"VariableDeclaration","scope":7552,"src":"34393:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7524,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:34"},"returnParameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7552,"src":"34431:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7527,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:34"},"scope":7553,"src":"34375:314:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7554,"src":"764:33927:34","usedErrors":[5808,5813,5820,5825],"usedEvents":[]}],"src":"192:34500:34"},"id":34},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[7658]},"id":7659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7555,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:35"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7556,"nodeType":"StructuredDocumentation","src":"135:80:35","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7658,"linearizedBaseContracts":[7658],"name":"SignedMath","nameLocation":"224:10:35","nodeType":"ContractDefinition","nodes":[{"body":{"id":7573,"nodeType":"Block","src":"376:37:35","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"393:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"397:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"405:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:35","trueExpression":{"id":7569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"401:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7565,"id":7572,"nodeType":"Return","src":"386:20:35"}]},"documentation":{"id":7557,"nodeType":"StructuredDocumentation","src":"241:66:35","text":" @dev Returns the largest of two signed numbers."},"id":7574,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:35","nodeType":"FunctionDefinition","parameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7559,"mutability":"mutable","name":"a","nameLocation":"332:1:35","nodeType":"VariableDeclaration","scope":7574,"src":"325:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7558,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"b","nameLocation":"342:1:35","nodeType":"VariableDeclaration","scope":7574,"src":"335:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7560,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:35"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7574,"src":"368:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7563,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:35"},"scope":7658,"src":"312:101:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7591,"nodeType":"Block","src":"555:37:35","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"572:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"576:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"584:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:35","trueExpression":{"id":7587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"580:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7583,"id":7590,"nodeType":"Return","src":"565:20:35"}]},"documentation":{"id":7575,"nodeType":"StructuredDocumentation","src":"419:67:35","text":" @dev Returns the smallest of two signed numbers."},"id":7592,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:35","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"a","nameLocation":"511:1:35","nodeType":"VariableDeclaration","scope":7592,"src":"504:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7576,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7579,"mutability":"mutable","name":"b","nameLocation":"521:1:35","nodeType":"VariableDeclaration","scope":7592,"src":"514:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7578,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:35"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7592,"src":"547:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7581,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:35"},"scope":7658,"src":"491:101:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7635,"nodeType":"Block","src":"797:162:35","statements":[{"assignments":[7603],"declarations":[{"constant":false,"id":7603,"mutability":"mutable","name":"x","nameLocation":"866:1:35","nodeType":"VariableDeclaration","scope":7635,"src":"859:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7602,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7616,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"871:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"875:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"882:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"886:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:35"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"911:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7622,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"931:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7620,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:35","typeDescriptions":{}}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:35","typeDescriptions":{}}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"945:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"949:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7601,"id":7634,"nodeType":"Return","src":"904:48:35"}]},"documentation":{"id":7593,"nodeType":"StructuredDocumentation","src":"598:126:35","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7636,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:35","nodeType":"FunctionDefinition","parameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"a","nameLocation":"753:1:35","nodeType":"VariableDeclaration","scope":7636,"src":"746:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7594,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7597,"mutability":"mutable","name":"b","nameLocation":"763:1:35","nodeType":"VariableDeclaration","scope":7636,"src":"756:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7596,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:35"},"returnParameters":{"id":7601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7636,"src":"789:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7599,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:35"},"scope":7658,"src":"729:230:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7656,"nodeType":"Block","src":"1103:158:35","statements":[{"id":7655,"nodeType":"UncheckedBlock","src":"1113:142:35","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7646,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"1228:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:35","subExpression":{"id":7650,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"1242:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:35","trueExpression":{"id":7649,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"1237:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:35","typeDescriptions":{}}},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7643,"id":7654,"nodeType":"Return","src":"1213:31:35"}]}]},"documentation":{"id":7637,"nodeType":"StructuredDocumentation","src":"965:78:35","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7657,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:35","nodeType":"FunctionDefinition","parameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"n","nameLocation":"1068:1:35","nodeType":"VariableDeclaration","scope":7657,"src":"1061:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7638,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:35"},"returnParameters":{"id":7643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7657,"src":"1094:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:35"},"scope":7658,"src":"1048:213:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7659,"src":"216:1047:35","usedErrors":[],"usedEvents":[]}],"src":"109:1155:35"},"id":35},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[9230],"Math":[5798]},"id":9231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7660,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:36"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9231,"sourceUnit":5799,"src":"227:38:36","symbolAliases":[{"foreign":{"id":7661,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"235:4:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":7663,"nodeType":"StructuredDocumentation","src":"267:400:36","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":9230,"linearizedBaseContracts":[9230],"name":"Checkpoints","nameLocation":"676:11:36","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7664,"nodeType":"StructuredDocumentation","src":"694:82:36","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":7666,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:36","nodeType":"ErrorDefinition","parameters":{"id":7665,"nodeType":"ParameterList","parameters":[],"src":"815:2:36"},"src":"781:37:36"},{"canonicalName":"Checkpoints.Trace224","id":7671,"members":[{"constant":false,"id":7670,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:36","nodeType":"VariableDeclaration","scope":7671,"src":"850:28:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7668,"nodeType":"UserDefinedTypeName","pathNode":{"id":7667,"name":"Checkpoint224","nameLocations":["850:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"850:13:36"},"referencedDeclaration":7676,"src":"850:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7669,"nodeType":"ArrayTypeName","src":"850:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:36","nodeType":"StructDefinition","scope":9230,"src":"824:61:36","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":7676,"members":[{"constant":false,"id":7673,"mutability":"mutable","name":"_key","nameLocation":"929:4:36","nodeType":"VariableDeclaration","scope":7676,"src":"922:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7672,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7675,"mutability":"mutable","name":"_value","nameLocation":"951:6:36","nodeType":"VariableDeclaration","scope":7676,"src":"943:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7674,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:36","nodeType":"StructDefinition","scope":9230,"src":"891:73:36","visibility":"public"},{"body":{"id":7698,"nodeType":"Block","src":"1377:62:36","statements":[{"expression":{"arguments":[{"expression":{"id":7692,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"1402:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1407:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"1402:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7694,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"1421:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"1426:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7691,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8068,8589,9110],"referencedDeclaration":8068,"src":"1394:7:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:38:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7690,"id":7697,"nodeType":"Return","src":"1387:45:36"}]},"documentation":{"id":7677,"nodeType":"StructuredDocumentation","src":"970:302:36","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":7699,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:36","nodeType":"FunctionDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"self","nameLocation":"1308:4:36","nodeType":"VariableDeclaration","scope":7699,"src":"1291:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7679,"nodeType":"UserDefinedTypeName","pathNode":{"id":7678,"name":"Trace224","nameLocations":["1291:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"1291:8:36"},"referencedDeclaration":7671,"src":"1291:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7682,"mutability":"mutable","name":"key","nameLocation":"1321:3:36","nodeType":"VariableDeclaration","scope":7699,"src":"1314:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7681,"name":"uint32","nodeType":"ElementaryTypeName","src":"1314:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7684,"mutability":"mutable","name":"value","nameLocation":"1334:5:36","nodeType":"VariableDeclaration","scope":7699,"src":"1326:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7683,"name":"uint224","nodeType":"ElementaryTypeName","src":"1326:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:50:36"},"returnParameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7699,"src":"1359:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7686,"name":"uint224","nodeType":"ElementaryTypeName","src":"1359:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7699,"src":"1368:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7688,"name":"uint224","nodeType":"ElementaryTypeName","src":"1368:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1358:18:36"},"scope":9230,"src":"1277:162:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7738,"nodeType":"Block","src":"1692:207:36","statements":[{"assignments":[7711],"declarations":[{"constant":false,"id":7711,"mutability":"mutable","name":"len","nameLocation":"1710:3:36","nodeType":"VariableDeclaration","scope":7738,"src":"1702:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7715,"initialValue":{"expression":{"expression":{"id":7712,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"1716:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"1716:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:6:36","memberName":"length","nodeType":"MemberAccess","src":"1716:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:38:36"},{"assignments":[7717],"declarations":[{"constant":false,"id":7717,"mutability":"mutable","name":"pos","nameLocation":"1758:3:36","nodeType":"VariableDeclaration","scope":7738,"src":"1750:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7725,"initialValue":{"arguments":[{"expression":{"id":7719,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"1783:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1788:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"1783:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7721,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"1802:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7723,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1810:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7718,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8172,8693,9214],"referencedDeclaration":8172,"src":"1764:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7726,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"1831:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7727,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1838:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1831:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7731,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"1862:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1867:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"1862:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7733,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"1881:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7730,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"1848:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"1848:44:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1831:61:36","trueExpression":{"hexValue":"30","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7709,"id":7737,"nodeType":"Return","src":"1824:68:36"}]},"documentation":{"id":7700,"nodeType":"StructuredDocumentation","src":"1445:154:36","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7739,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1613:11:36","nodeType":"FunctionDefinition","parameters":{"id":7706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"self","nameLocation":"1642:4:36","nodeType":"VariableDeclaration","scope":7739,"src":"1625:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7702,"nodeType":"UserDefinedTypeName","pathNode":{"id":7701,"name":"Trace224","nameLocations":["1625:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"1625:8:36"},"referencedDeclaration":7671,"src":"1625:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7705,"mutability":"mutable","name":"key","nameLocation":"1655:3:36","nodeType":"VariableDeclaration","scope":7739,"src":"1648:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7704,"name":"uint32","nodeType":"ElementaryTypeName","src":"1648:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:35:36"},"returnParameters":{"id":7709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7739,"src":"1683:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7707,"name":"uint224","nodeType":"ElementaryTypeName","src":"1683:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1682:9:36"},"scope":9230,"src":"1604:295:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7780,"nodeType":"Block","src":"2154:209:36","statements":[{"assignments":[7751],"declarations":[{"constant":false,"id":7751,"mutability":"mutable","name":"len","nameLocation":"2172:3:36","nodeType":"VariableDeclaration","scope":7780,"src":"2164:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7755,"initialValue":{"expression":{"expression":{"id":7752,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"2178:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2183:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"2178:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2196:6:36","memberName":"length","nodeType":"MemberAccess","src":"2178:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:38:36"},{"assignments":[7757],"declarations":[{"constant":false,"id":7757,"mutability":"mutable","name":"pos","nameLocation":"2220:3:36","nodeType":"VariableDeclaration","scope":7780,"src":"2212:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7765,"initialValue":{"arguments":[{"expression":{"id":7759,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"2245:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2250:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"2245:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7761,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2264:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7763,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"2272:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7758,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":8120,"src":"2226:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7766,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"2293:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2293:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7771,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"2322:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2327:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"2322:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"2341:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2347:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2341:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7770,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"2308:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"2308:48:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2293:63:36","trueExpression":{"hexValue":"30","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7749,"id":7779,"nodeType":"Return","src":"2286:70:36"}]},"documentation":{"id":7740,"nodeType":"StructuredDocumentation","src":"1905:156:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7781,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2075:11:36","nodeType":"FunctionDefinition","parameters":{"id":7746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"self","nameLocation":"2104:4:36","nodeType":"VariableDeclaration","scope":7781,"src":"2087:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7742,"nodeType":"UserDefinedTypeName","pathNode":{"id":7741,"name":"Trace224","nameLocations":["2087:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"2087:8:36"},"referencedDeclaration":7671,"src":"2087:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7745,"mutability":"mutable","name":"key","nameLocation":"2117:3:36","nodeType":"VariableDeclaration","scope":7781,"src":"2110:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7744,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2086:35:36"},"returnParameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7781,"src":"2145:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7747,"name":"uint224","nodeType":"ElementaryTypeName","src":"2145:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2144:9:36"},"scope":9230,"src":"2066:297:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7865,"nodeType":"Block","src":"2762:512:36","statements":[{"assignments":[7793],"declarations":[{"constant":false,"id":7793,"mutability":"mutable","name":"len","nameLocation":"2780:3:36","nodeType":"VariableDeclaration","scope":7865,"src":"2772:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7792,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7797,"initialValue":{"expression":{"expression":{"id":7794,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"2786:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2791:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"2786:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:36","memberName":"length","nodeType":"MemberAccess","src":"2786:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2772:38:36"},{"assignments":[7799],"declarations":[{"constant":false,"id":7799,"mutability":"mutable","name":"low","nameLocation":"2829:3:36","nodeType":"VariableDeclaration","scope":7865,"src":"2821:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7801,"initialValue":{"hexValue":"30","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2821:15:36"},{"assignments":[7803],"declarations":[{"constant":false,"id":7803,"mutability":"mutable","name":"high","nameLocation":"2854:4:36","nodeType":"VariableDeclaration","scope":7865,"src":"2846:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7805,"initialValue":{"id":7804,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"2861:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2846:18:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7806,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"2879:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:36","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2879:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7840,"nodeType":"IfStatement","src":"2875:234:36","trueBody":{"id":7839,"nodeType":"Block","src":"2888:221:36","statements":[{"assignments":[7810],"declarations":[{"constant":false,"id":7810,"mutability":"mutable","name":"mid","nameLocation":"2910:3:36","nodeType":"VariableDeclaration","scope":7839,"src":"2902:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2902:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7811,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"2916:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7814,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"2932:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7812,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"2922:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:4:36","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5287,"src":"2922:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2902:34:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"2954:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"2974:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2979:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"2974:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7822,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"2993:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7819,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"2960:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2998:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"2960:42:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2954:48:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7837,"nodeType":"Block","src":"3053:46:36","statements":[{"expression":{"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7831,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"3071:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7832,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"3077:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3071:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7836,"nodeType":"ExpressionStatement","src":"3071:13:36"}]},"id":7838,"nodeType":"IfStatement","src":"2950:149:36","trueBody":{"id":7830,"nodeType":"Block","src":"3004:43:36","statements":[{"expression":{"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7826,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3022:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7827,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"3029:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7829,"nodeType":"ExpressionStatement","src":"3022:10:36"}]}}]}},{"assignments":[7842],"declarations":[{"constant":false,"id":7842,"mutability":"mutable","name":"pos","nameLocation":"3127:3:36","nodeType":"VariableDeclaration","scope":7865,"src":"3119:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7850,"initialValue":{"arguments":[{"expression":{"id":7844,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"3152:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"3152:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7846,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"3171:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7847,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"3176:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7848,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3181:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7843,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":8120,"src":"3133:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:53:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:67:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7851,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3204:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3204:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7856,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"3233:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3238:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"3233:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7858,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3252:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7855,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"3219:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"3219:48:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3204:63:36","trueExpression":{"hexValue":"30","id":7854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7791,"id":7864,"nodeType":"Return","src":"3197:70:36"}]},"documentation":{"id":7782,"nodeType":"StructuredDocumentation","src":"2369:294:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7866,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2677:17:36","nodeType":"FunctionDefinition","parameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7785,"mutability":"mutable","name":"self","nameLocation":"2712:4:36","nodeType":"VariableDeclaration","scope":7866,"src":"2695:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7784,"nodeType":"UserDefinedTypeName","pathNode":{"id":7783,"name":"Trace224","nameLocations":["2695:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"2695:8:36"},"referencedDeclaration":7671,"src":"2695:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7787,"mutability":"mutable","name":"key","nameLocation":"2725:3:36","nodeType":"VariableDeclaration","scope":7866,"src":"2718:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7786,"name":"uint32","nodeType":"ElementaryTypeName","src":"2718:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2694:35:36"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7866,"src":"2753:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7789,"name":"uint224","nodeType":"ElementaryTypeName","src":"2753:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2752:9:36"},"scope":9230,"src":"2668:606:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"3465:135:36","statements":[{"assignments":[7876],"declarations":[{"constant":false,"id":7876,"mutability":"mutable","name":"pos","nameLocation":"3483:3:36","nodeType":"VariableDeclaration","scope":7895,"src":"3475:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7880,"initialValue":{"expression":{"expression":{"id":7877,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"3489:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"3489:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3507:6:36","memberName":"length","nodeType":"MemberAccess","src":"3489:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3475:38:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"3530:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3530:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7886,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"3559:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"3559:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7888,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"3578:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3578:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7885,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"3545:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"3545:48:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3530:63:36","trueExpression":{"hexValue":"30","id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3541:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7874,"id":7894,"nodeType":"Return","src":"3523:70:36"}]},"documentation":{"id":7867,"nodeType":"StructuredDocumentation","src":"3280:109:36","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7896,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3403:6:36","nodeType":"FunctionDefinition","parameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7870,"mutability":"mutable","name":"self","nameLocation":"3427:4:36","nodeType":"VariableDeclaration","scope":7896,"src":"3410:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7869,"nodeType":"UserDefinedTypeName","pathNode":{"id":7868,"name":"Trace224","nameLocations":["3410:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"3410:8:36"},"referencedDeclaration":7671,"src":"3410:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3409:23:36"},"returnParameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7896,"src":"3456:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7872,"name":"uint224","nodeType":"ElementaryTypeName","src":"3456:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3455:9:36"},"scope":9230,"src":"3394:206:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7944,"nodeType":"Block","src":"3893:274:36","statements":[{"assignments":[7910],"declarations":[{"constant":false,"id":7910,"mutability":"mutable","name":"pos","nameLocation":"3911:3:36","nodeType":"VariableDeclaration","scope":7944,"src":"3903:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7909,"name":"uint256","nodeType":"ElementaryTypeName","src":"3903:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7914,"initialValue":{"expression":{"expression":{"id":7911,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"3917:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3922:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"3917:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:36","memberName":"length","nodeType":"MemberAccess","src":"3917:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3903:38:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7915,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"3955:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7942,"nodeType":"Block","src":"4016:145:36","statements":[{"assignments":[7926],"declarations":[{"constant":false,"id":7926,"mutability":"mutable","name":"ckpt","nameLocation":"4051:4:36","nodeType":"VariableDeclaration","scope":7942,"src":"4030:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7925,"nodeType":"UserDefinedTypeName","pathNode":{"id":7924,"name":"Checkpoint224","nameLocations":["4030:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"4030:13:36"},"referencedDeclaration":7676,"src":"4030:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7934,"initialValue":{"arguments":[{"expression":{"id":7928,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"4072:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"4072:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7930,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4091:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4091:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7927,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"4058:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4030:69:36"},{"expression":{"components":[{"hexValue":"74727565","id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7936,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"4127:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4132:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"4127:9:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7938,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"4138:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"4138:11:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4120:30:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":7908,"id":7941,"nodeType":"Return","src":"4113:37:36"}]},"id":7943,"nodeType":"IfStatement","src":"3951:210:36","trueBody":{"id":7923,"nodeType":"Block","src":"3965:45:36","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:13:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7908,"id":7922,"nodeType":"Return","src":"3979:20:36"}]}}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"3606:168:36","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7945,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3788:16:36","nodeType":"FunctionDefinition","parameters":{"id":7901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"self","nameLocation":"3822:4:36","nodeType":"VariableDeclaration","scope":7945,"src":"3805:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7899,"nodeType":"UserDefinedTypeName","pathNode":{"id":7898,"name":"Trace224","nameLocations":["3805:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"3805:8:36"},"referencedDeclaration":7671,"src":"3805:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3804:23:36"},"returnParameters":{"id":7908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7903,"mutability":"mutable","name":"exists","nameLocation":"3856:6:36","nodeType":"VariableDeclaration","scope":7945,"src":"3851:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7902,"name":"bool","nodeType":"ElementaryTypeName","src":"3851:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7905,"mutability":"mutable","name":"_key","nameLocation":"3871:4:36","nodeType":"VariableDeclaration","scope":7945,"src":"3864:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7904,"name":"uint32","nodeType":"ElementaryTypeName","src":"3864:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7907,"mutability":"mutable","name":"_value","nameLocation":"3885:6:36","nodeType":"VariableDeclaration","scope":7945,"src":"3877:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7906,"name":"uint224","nodeType":"ElementaryTypeName","src":"3877:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3850:42:36"},"scope":9230,"src":"3779:388:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7958,"nodeType":"Block","src":"4306:48:36","statements":[{"expression":{"expression":{"expression":{"id":7954,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"4323:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"4323:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:36","memberName":"length","nodeType":"MemberAccess","src":"4323:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7953,"id":7957,"nodeType":"Return","src":"4316:31:36"}]},"documentation":{"id":7946,"nodeType":"StructuredDocumentation","src":"4173:57:36","text":" @dev Returns the number of checkpoint."},"id":7959,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4244:6:36","nodeType":"FunctionDefinition","parameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7949,"mutability":"mutable","name":"self","nameLocation":"4268:4:36","nodeType":"VariableDeclaration","scope":7959,"src":"4251:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7948,"nodeType":"UserDefinedTypeName","pathNode":{"id":7947,"name":"Trace224","nameLocations":["4251:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"4251:8:36"},"referencedDeclaration":7671,"src":"4251:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4250:23:36"},"returnParameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7959,"src":"4297:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4296:9:36"},"scope":9230,"src":"4235:119:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7976,"nodeType":"Block","src":"4518:46:36","statements":[{"expression":{"baseExpression":{"expression":{"id":7971,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"4535:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4540:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7670,"src":"4535:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7974,"indexExpression":{"id":7973,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"4553:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4535:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":7970,"id":7975,"nodeType":"Return","src":"4528:29:36"}]},"documentation":{"id":7960,"nodeType":"StructuredDocumentation","src":"4360:61:36","text":" @dev Returns checkpoint at given position."},"id":7977,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4435:2:36","nodeType":"FunctionDefinition","parameters":{"id":7966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7963,"mutability":"mutable","name":"self","nameLocation":"4455:4:36","nodeType":"VariableDeclaration","scope":7977,"src":"4438:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7962,"nodeType":"UserDefinedTypeName","pathNode":{"id":7961,"name":"Trace224","nameLocations":["4438:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":7671,"src":"4438:8:36"},"referencedDeclaration":7671,"src":"4438:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7671_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7965,"mutability":"mutable","name":"pos","nameLocation":"4468:3:36","nodeType":"VariableDeclaration","scope":7977,"src":"4461:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7964,"name":"uint32","nodeType":"ElementaryTypeName","src":"4461:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4437:35:36"},"returnParameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7977,"src":"4496:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7968,"nodeType":"UserDefinedTypeName","pathNode":{"id":7967,"name":"Checkpoint224","nameLocations":["4496:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"4496:13:36"},"referencedDeclaration":7676,"src":"4496:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4495:22:36"},"scope":9230,"src":"4426:138:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8067,"nodeType":"Block","src":"4849:761:36","statements":[{"assignments":[7994],"declarations":[{"constant":false,"id":7994,"mutability":"mutable","name":"pos","nameLocation":"4867:3:36","nodeType":"VariableDeclaration","scope":8067,"src":"4859:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7997,"initialValue":{"expression":{"id":7995,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"4873:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:36","memberName":"length","nodeType":"MemberAccess","src":"4873:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4859:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"4899:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4899:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8065,"nodeType":"Block","src":"5496:108:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":8056,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5541:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5554:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8055,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"5520:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5535:4:36","5546:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5520:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8052,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"5510:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:4:36","memberName":"push","nodeType":"MemberAccess","src":"5510:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7676_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8060,"nodeType":"ExpressionStatement","src":"5510:52:36"},{"expression":{"components":[{"hexValue":"30","id":8061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5584:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5587:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":7992,"id":8064,"nodeType":"Return","src":"5576:17:36"}]},"id":8066,"nodeType":"IfStatement","src":"4895:709:36","trueBody":{"id":8051,"nodeType":"Block","src":"4908:582:36","statements":[{"assignments":[8003],"declarations":[{"constant":false,"id":8003,"mutability":"mutable","name":"last","nameLocation":"4995:4:36","nodeType":"VariableDeclaration","scope":8051,"src":"4974:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8002,"nodeType":"UserDefinedTypeName","pathNode":{"id":8001,"name":"Checkpoint224","nameLocations":["4974:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"4974:13:36"},"referencedDeclaration":7676,"src":"4974:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8010,"initialValue":{"arguments":[{"id":8005,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"5016:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8006,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"5022:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5022:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8004,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"5002:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4974:56:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8011,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"5104:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":8012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"5104:9:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8013,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5116:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5104:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8019,"nodeType":"IfStatement","src":"5100:91:36","trueBody":{"id":8018,"nodeType":"Block","src":"5121:70:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8015,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"5146:28:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"RevertStatement","src":"5139:37:36"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8020,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"5254:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":8021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5259:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"5254:9:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8022,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5267:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5254:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8044,"nodeType":"Block","src":"5354:85:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":8039,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5403:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5416:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8038,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"5382:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5397:4:36","5408:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5382:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8035,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"5372:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:4:36","memberName":"push","nodeType":"MemberAccess","src":"5372:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7676_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8043,"nodeType":"ExpressionStatement","src":"5372:52:36"}]},"id":8045,"nodeType":"IfStatement","src":"5250:189:36","trueBody":{"id":8034,"nodeType":"Block","src":"5272:76:36","statements":[{"expression":{"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":8025,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"5304:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8026,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"5310:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5316:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5310:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8024,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"5290:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"5290:35:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5328:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5290:43:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8033,"nodeType":"ExpressionStatement","src":"5290:43:36"}]}},{"expression":{"components":[{"expression":{"id":8046,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"5460:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":8047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7675,"src":"5460:11:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":8048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5473:5:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:20:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7992,"id":8050,"nodeType":"Return","src":"5452:27:36"}]}}]},"documentation":{"id":7978,"nodeType":"StructuredDocumentation","src":"4570:165:36","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8068,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4749:7:36","nodeType":"FunctionDefinition","parameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7982,"mutability":"mutable","name":"self","nameLocation":"4781:4:36","nodeType":"VariableDeclaration","scope":8068,"src":"4757:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7980,"nodeType":"UserDefinedTypeName","pathNode":{"id":7979,"name":"Checkpoint224","nameLocations":["4757:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"4757:13:36"},"referencedDeclaration":7676,"src":"4757:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7981,"nodeType":"ArrayTypeName","src":"4757:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7984,"mutability":"mutable","name":"key","nameLocation":"4794:3:36","nodeType":"VariableDeclaration","scope":8068,"src":"4787:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7983,"name":"uint32","nodeType":"ElementaryTypeName","src":"4787:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7986,"mutability":"mutable","name":"value","nameLocation":"4807:5:36","nodeType":"VariableDeclaration","scope":8068,"src":"4799:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7985,"name":"uint224","nodeType":"ElementaryTypeName","src":"4799:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4756:57:36"},"returnParameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"4831:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7988,"name":"uint224","nodeType":"ElementaryTypeName","src":"4831:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"4840:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7990,"name":"uint224","nodeType":"ElementaryTypeName","src":"4840:7:36","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4830:18:36"},"scope":9230,"src":"4740:870:36","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8119,"nodeType":"Block","src":"6129:267:36","statements":[{"body":{"id":8115,"nodeType":"Block","src":"6158:211:36","statements":[{"assignments":[8088],"declarations":[{"constant":false,"id":8088,"mutability":"mutable","name":"mid","nameLocation":"6180:3:36","nodeType":"VariableDeclaration","scope":8115,"src":"6172:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8087,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8094,"initialValue":{"arguments":[{"id":8091,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"6199:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8092,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"6204:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8089,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"6186:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"6186:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8096,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"6241:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8097,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"6247:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8095,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"6227:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"6227:29:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8100,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"6259:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6227:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8113,"nodeType":"Block","src":"6313:46:36","statements":[{"expression":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8107,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"6331:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8108,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"6337:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6343:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6331:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8112,"nodeType":"ExpressionStatement","src":"6331:13:36"}]},"id":8114,"nodeType":"IfStatement","src":"6223:136:36","trueBody":{"id":8106,"nodeType":"Block","src":"6264:43:36","statements":[{"expression":{"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8102,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"6282:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8103,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"6289:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8105,"nodeType":"ExpressionStatement","src":"6282:10:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8084,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"6146:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8085,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"6152:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6146:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8116,"nodeType":"WhileStatement","src":"6139:230:36"},{"expression":{"id":8117,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"6385:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8083,"id":8118,"nodeType":"Return","src":"6378:11:36"}]},"documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"5616:342:36","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8120,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"5972:18:36","nodeType":"FunctionDefinition","parameters":{"id":8080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8073,"mutability":"mutable","name":"self","nameLocation":"6024:4:36","nodeType":"VariableDeclaration","scope":8120,"src":"6000:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8071,"nodeType":"UserDefinedTypeName","pathNode":{"id":8070,"name":"Checkpoint224","nameLocations":["6000:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"6000:13:36"},"referencedDeclaration":7676,"src":"6000:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8072,"nodeType":"ArrayTypeName","src":"6000:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8075,"mutability":"mutable","name":"key","nameLocation":"6045:3:36","nodeType":"VariableDeclaration","scope":8120,"src":"6038:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8074,"name":"uint32","nodeType":"ElementaryTypeName","src":"6038:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8077,"mutability":"mutable","name":"low","nameLocation":"6066:3:36","nodeType":"VariableDeclaration","scope":8120,"src":"6058:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8076,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"high","nameLocation":"6087:4:36","nodeType":"VariableDeclaration","scope":8120,"src":"6079:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8078,"name":"uint256","nodeType":"ElementaryTypeName","src":"6079:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:107:36"},"returnParameters":{"id":8083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8120,"src":"6120:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8081,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:9:36"},"scope":9230,"src":"5963:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8171,"nodeType":"Block","src":"6916:267:36","statements":[{"body":{"id":8167,"nodeType":"Block","src":"6945:211:36","statements":[{"assignments":[8140],"declarations":[{"constant":false,"id":8140,"mutability":"mutable","name":"mid","nameLocation":"6967:3:36","nodeType":"VariableDeclaration","scope":8167,"src":"6959:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8146,"initialValue":{"arguments":[{"id":8143,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"6986:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"6991:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8141,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"6973:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6978:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"6973:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6973:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8148,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"7028:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8149,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"7034:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8147,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8187,"src":"7014:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7676_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"7014:29:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8152,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"7046:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7014:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8165,"nodeType":"Block","src":"7103:43:36","statements":[{"expression":{"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8161,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"7121:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8162,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"7128:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7121:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8164,"nodeType":"ExpressionStatement","src":"7121:10:36"}]},"id":8166,"nodeType":"IfStatement","src":"7010:136:36","trueBody":{"id":8160,"nodeType":"Block","src":"7051:46:36","statements":[{"expression":{"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8154,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"7069:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8155,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"7075:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7075:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8159,"nodeType":"ExpressionStatement","src":"7069:13:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8136,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"6933:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8137,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"6939:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8168,"nodeType":"WhileStatement","src":"6926:230:36"},{"expression":{"id":8169,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"7172:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8135,"id":8170,"nodeType":"Return","src":"7165:11:36"}]},"documentation":{"id":8121,"nodeType":"StructuredDocumentation","src":"6402:343:36","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8172,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6759:18:36","nodeType":"FunctionDefinition","parameters":{"id":8132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"self","nameLocation":"6811:4:36","nodeType":"VariableDeclaration","scope":8172,"src":"6787:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8123,"nodeType":"UserDefinedTypeName","pathNode":{"id":8122,"name":"Checkpoint224","nameLocations":["6787:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"6787:13:36"},"referencedDeclaration":7676,"src":"6787:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8124,"nodeType":"ArrayTypeName","src":"6787:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8127,"mutability":"mutable","name":"key","nameLocation":"6832:3:36","nodeType":"VariableDeclaration","scope":8172,"src":"6825:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8126,"name":"uint32","nodeType":"ElementaryTypeName","src":"6825:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8129,"mutability":"mutable","name":"low","nameLocation":"6853:3:36","nodeType":"VariableDeclaration","scope":8172,"src":"6845:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8131,"mutability":"mutable","name":"high","nameLocation":"6874:4:36","nodeType":"VariableDeclaration","scope":8172,"src":"6866:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6777:107:36"},"returnParameters":{"id":8135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8172,"src":"6907:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8133,"name":"uint256","nodeType":"ElementaryTypeName","src":"6907:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6906:9:36"},"scope":9230,"src":"6750:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8186,"nodeType":"Block","src":"7466:125:36","statements":[{"AST":{"nodeType":"YulBlock","src":"7485:100:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7506:1:36","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7509:9:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7499:6:36"},"nodeType":"YulFunctionCall","src":"7499:20:36"},"nodeType":"YulExpressionStatement","src":"7499:20:36"},{"nodeType":"YulAssignment","src":"7532:43:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7561:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7564:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7551:9:36"},"nodeType":"YulFunctionCall","src":"7551:18:36"},{"name":"pos","nodeType":"YulIdentifier","src":"7571:3:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:36"},"nodeType":"YulFunctionCall","src":"7547:28:36"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7532:11:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8179,"isOffset":false,"isSlot":false,"src":"7571:3:36","valueSize":1},{"declaration":8183,"isOffset":false,"isSlot":true,"src":"7532:11:36","suffix":"slot","valueSize":1},{"declaration":8177,"isOffset":false,"isSlot":true,"src":"7509:9:36","suffix":"slot","valueSize":1}],"id":8185,"nodeType":"InlineAssembly","src":"7476:109:36"}]},"documentation":{"id":8173,"nodeType":"StructuredDocumentation","src":"7189:132:36","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8187,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7335:13:36","nodeType":"FunctionDefinition","parameters":{"id":8180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"self","nameLocation":"7382:4:36","nodeType":"VariableDeclaration","scope":8187,"src":"7358:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8175,"nodeType":"UserDefinedTypeName","pathNode":{"id":8174,"name":"Checkpoint224","nameLocations":["7358:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"7358:13:36"},"referencedDeclaration":7676,"src":"7358:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8176,"nodeType":"ArrayTypeName","src":"7358:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7676_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8179,"mutability":"mutable","name":"pos","nameLocation":"7404:3:36","nodeType":"VariableDeclaration","scope":8187,"src":"7396:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8178,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:65:36"},"returnParameters":{"id":8184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"result","nameLocation":"7458:6:36","nodeType":"VariableDeclaration","scope":8187,"src":"7436:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8182,"nodeType":"UserDefinedTypeName","pathNode":{"id":8181,"name":"Checkpoint224","nameLocations":["7436:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":7676,"src":"7436:13:36"},"referencedDeclaration":7676,"src":"7436:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7676_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7435:30:36"},"scope":9230,"src":"7326:265:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":8192,"members":[{"constant":false,"id":8191,"mutability":"mutable","name":"_checkpoints","nameLocation":"7639:12:36","nodeType":"VariableDeclaration","scope":8192,"src":"7623:28:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8189,"nodeType":"UserDefinedTypeName","pathNode":{"id":8188,"name":"Checkpoint208","nameLocations":["7623:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"7623:13:36"},"referencedDeclaration":8197,"src":"7623:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8190,"nodeType":"ArrayTypeName","src":"7623:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7604:8:36","nodeType":"StructDefinition","scope":9230,"src":"7597:61:36","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":8197,"members":[{"constant":false,"id":8194,"mutability":"mutable","name":"_key","nameLocation":"7702:4:36","nodeType":"VariableDeclaration","scope":8197,"src":"7695:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8193,"name":"uint48","nodeType":"ElementaryTypeName","src":"7695:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8196,"mutability":"mutable","name":"_value","nameLocation":"7724:6:36","nodeType":"VariableDeclaration","scope":8197,"src":"7716:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8195,"name":"uint208","nodeType":"ElementaryTypeName","src":"7716:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7671:13:36","nodeType":"StructDefinition","scope":9230,"src":"7664:73:36","visibility":"public"},{"body":{"id":8219,"nodeType":"Block","src":"8150:62:36","statements":[{"expression":{"arguments":[{"expression":{"id":8213,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"8175:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8180:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"8175:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8215,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"8194:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"8199:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8212,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8068,8589,9110],"referencedDeclaration":8589,"src":"8167:7:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:38:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8211,"id":8218,"nodeType":"Return","src":"8160:45:36"}]},"documentation":{"id":8198,"nodeType":"StructuredDocumentation","src":"7743:302:36","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":8220,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8059:4:36","nodeType":"FunctionDefinition","parameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8201,"mutability":"mutable","name":"self","nameLocation":"8081:4:36","nodeType":"VariableDeclaration","scope":8220,"src":"8064:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8200,"nodeType":"UserDefinedTypeName","pathNode":{"id":8199,"name":"Trace208","nameLocations":["8064:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"8064:8:36"},"referencedDeclaration":8192,"src":"8064:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8203,"mutability":"mutable","name":"key","nameLocation":"8094:3:36","nodeType":"VariableDeclaration","scope":8220,"src":"8087:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8202,"name":"uint48","nodeType":"ElementaryTypeName","src":"8087:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8205,"mutability":"mutable","name":"value","nameLocation":"8107:5:36","nodeType":"VariableDeclaration","scope":8220,"src":"8099:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8204,"name":"uint208","nodeType":"ElementaryTypeName","src":"8099:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8063:50:36"},"returnParameters":{"id":8211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8220,"src":"8132:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8207,"name":"uint208","nodeType":"ElementaryTypeName","src":"8132:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8220,"src":"8141:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8209,"name":"uint208","nodeType":"ElementaryTypeName","src":"8141:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8131:18:36"},"scope":9230,"src":"8050:162:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8259,"nodeType":"Block","src":"8465:207:36","statements":[{"assignments":[8232],"declarations":[{"constant":false,"id":8232,"mutability":"mutable","name":"len","nameLocation":"8483:3:36","nodeType":"VariableDeclaration","scope":8259,"src":"8475:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8231,"name":"uint256","nodeType":"ElementaryTypeName","src":"8475:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8236,"initialValue":{"expression":{"expression":{"id":8233,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"8489:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8494:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"8489:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:36","memberName":"length","nodeType":"MemberAccess","src":"8489:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8475:38:36"},{"assignments":[8238],"declarations":[{"constant":false,"id":8238,"mutability":"mutable","name":"pos","nameLocation":"8531:3:36","nodeType":"VariableDeclaration","scope":8259,"src":"8523:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8523:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8246,"initialValue":{"arguments":[{"expression":{"id":8240,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"8556:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"8556:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8242,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"8575:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8244,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8232,"src":"8583:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8239,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8172,8693,9214],"referencedDeclaration":8693,"src":"8537:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8523:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8247,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"8604:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8248,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8232,"src":"8611:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8604:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8252,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"8635:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"8635:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8254,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"8654:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8251,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"8621:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"8621:44:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8604:61:36","trueExpression":{"hexValue":"30","id":8250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8230,"id":8258,"nodeType":"Return","src":"8597:68:36"}]},"documentation":{"id":8221,"nodeType":"StructuredDocumentation","src":"8218:154:36","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8260,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8386:11:36","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8224,"mutability":"mutable","name":"self","nameLocation":"8415:4:36","nodeType":"VariableDeclaration","scope":8260,"src":"8398:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8223,"nodeType":"UserDefinedTypeName","pathNode":{"id":8222,"name":"Trace208","nameLocations":["8398:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"8398:8:36"},"referencedDeclaration":8192,"src":"8398:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8226,"mutability":"mutable","name":"key","nameLocation":"8428:3:36","nodeType":"VariableDeclaration","scope":8260,"src":"8421:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8225,"name":"uint48","nodeType":"ElementaryTypeName","src":"8421:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8397:35:36"},"returnParameters":{"id":8230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8260,"src":"8456:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8228,"name":"uint208","nodeType":"ElementaryTypeName","src":"8456:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8455:9:36"},"scope":9230,"src":"8377:295:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8301,"nodeType":"Block","src":"8927:209:36","statements":[{"assignments":[8272],"declarations":[{"constant":false,"id":8272,"mutability":"mutable","name":"len","nameLocation":"8945:3:36","nodeType":"VariableDeclaration","scope":8301,"src":"8937:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8271,"name":"uint256","nodeType":"ElementaryTypeName","src":"8937:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8276,"initialValue":{"expression":{"expression":{"id":8273,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"8951:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8956:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"8951:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:36","memberName":"length","nodeType":"MemberAccess","src":"8951:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8937:38:36"},{"assignments":[8278],"declarations":[{"constant":false,"id":8278,"mutability":"mutable","name":"pos","nameLocation":"8993:3:36","nodeType":"VariableDeclaration","scope":8301,"src":"8985:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8286,"initialValue":{"arguments":[{"expression":{"id":8280,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"9018:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"9018:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8282,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"9037:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8284,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"9045:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8279,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":8641,"src":"8999:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8985:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8287,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"9066:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9073:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8292,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"9095:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"9095:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8294,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"9114:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9114:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8291,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"9081:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"9081:48:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9066:63:36","trueExpression":{"hexValue":"30","id":8290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8270,"id":8300,"nodeType":"Return","src":"9059:70:36"}]},"documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"8678:156:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8302,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8848:11:36","nodeType":"FunctionDefinition","parameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8264,"mutability":"mutable","name":"self","nameLocation":"8877:4:36","nodeType":"VariableDeclaration","scope":8302,"src":"8860:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8263,"nodeType":"UserDefinedTypeName","pathNode":{"id":8262,"name":"Trace208","nameLocations":["8860:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"8860:8:36"},"referencedDeclaration":8192,"src":"8860:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8266,"mutability":"mutable","name":"key","nameLocation":"8890:3:36","nodeType":"VariableDeclaration","scope":8302,"src":"8883:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8265,"name":"uint48","nodeType":"ElementaryTypeName","src":"8883:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8859:35:36"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8302,"src":"8918:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8268,"name":"uint208","nodeType":"ElementaryTypeName","src":"8918:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8917:9:36"},"scope":9230,"src":"8839:297:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8386,"nodeType":"Block","src":"9535:512:36","statements":[{"assignments":[8314],"declarations":[{"constant":false,"id":8314,"mutability":"mutable","name":"len","nameLocation":"9553:3:36","nodeType":"VariableDeclaration","scope":8386,"src":"9545:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8313,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8318,"initialValue":{"expression":{"expression":{"id":8315,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"9559:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9564:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"9559:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:6:36","memberName":"length","nodeType":"MemberAccess","src":"9559:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9545:38:36"},{"assignments":[8320],"declarations":[{"constant":false,"id":8320,"mutability":"mutable","name":"low","nameLocation":"9602:3:36","nodeType":"VariableDeclaration","scope":8386,"src":"9594:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8319,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8322,"initialValue":{"hexValue":"30","id":8321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9594:15:36"},{"assignments":[8324],"declarations":[{"constant":false,"id":8324,"mutability":"mutable","name":"high","nameLocation":"9627:4:36","nodeType":"VariableDeclaration","scope":8386,"src":"9619:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8326,"initialValue":{"id":8325,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"9634:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9619:18:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"9652:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9658:1:36","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9652:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8361,"nodeType":"IfStatement","src":"9648:234:36","trueBody":{"id":8360,"nodeType":"Block","src":"9661:221:36","statements":[{"assignments":[8331],"declarations":[{"constant":false,"id":8331,"mutability":"mutable","name":"mid","nameLocation":"9683:3:36","nodeType":"VariableDeclaration","scope":8360,"src":"9675:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8330,"name":"uint256","nodeType":"ElementaryTypeName","src":"9675:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8338,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8332,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"9689:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8335,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"9705:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8333,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"9695:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:36","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5287,"src":"9695:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9675:34:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8339,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"9727:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8341,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"9747:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9752:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"9747:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8343,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"9766:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8340,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"9733:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9771:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"9733:42:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9727:48:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8358,"nodeType":"Block","src":"9826:46:36","statements":[{"expression":{"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8352,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"9844:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8353,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"9850:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9850:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9844:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8357,"nodeType":"ExpressionStatement","src":"9844:13:36"}]},"id":8359,"nodeType":"IfStatement","src":"9723:149:36","trueBody":{"id":8351,"nodeType":"Block","src":"9777:43:36","statements":[{"expression":{"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8347,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"9795:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8348,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"9802:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9795:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8350,"nodeType":"ExpressionStatement","src":"9795:10:36"}]}}]}},{"assignments":[8363],"declarations":[{"constant":false,"id":8363,"mutability":"mutable","name":"pos","nameLocation":"9900:3:36","nodeType":"VariableDeclaration","scope":8386,"src":"9892:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8371,"initialValue":{"arguments":[{"expression":{"id":8365,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"9925:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"9925:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8367,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"9944:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8368,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"9949:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8369,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"9954:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8364,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":8641,"src":"9906:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:53:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9892:67:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8372,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"9977:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9984:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8377,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"10006:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10011:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"10006:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8379,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"10025:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10031:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10025:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8376,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"9992:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10034:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"9992:48:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9977:63:36","trueExpression":{"hexValue":"30","id":8375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9988:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8312,"id":8385,"nodeType":"Return","src":"9970:70:36"}]},"documentation":{"id":8303,"nodeType":"StructuredDocumentation","src":"9142:294:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8387,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9450:17:36","nodeType":"FunctionDefinition","parameters":{"id":8309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8306,"mutability":"mutable","name":"self","nameLocation":"9485:4:36","nodeType":"VariableDeclaration","scope":8387,"src":"9468:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8305,"nodeType":"UserDefinedTypeName","pathNode":{"id":8304,"name":"Trace208","nameLocations":["9468:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"9468:8:36"},"referencedDeclaration":8192,"src":"9468:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8308,"mutability":"mutable","name":"key","nameLocation":"9498:3:36","nodeType":"VariableDeclaration","scope":8387,"src":"9491:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8307,"name":"uint48","nodeType":"ElementaryTypeName","src":"9491:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9467:35:36"},"returnParameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8387,"src":"9526:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8310,"name":"uint208","nodeType":"ElementaryTypeName","src":"9526:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9525:9:36"},"scope":9230,"src":"9441:606:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8416,"nodeType":"Block","src":"10238:135:36","statements":[{"assignments":[8397],"declarations":[{"constant":false,"id":8397,"mutability":"mutable","name":"pos","nameLocation":"10256:3:36","nodeType":"VariableDeclaration","scope":8416,"src":"10248:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8396,"name":"uint256","nodeType":"ElementaryTypeName","src":"10248:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8401,"initialValue":{"expression":{"expression":{"id":8398,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"10262:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10267:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"10262:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:36","memberName":"length","nodeType":"MemberAccess","src":"10262:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10248:38:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8402,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"10303:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10303:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8407,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"10332:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"10332:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8409,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"10351:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10351:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8406,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"10318:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10360:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"10318:48:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10303:63:36","trueExpression":{"hexValue":"30","id":8405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8395,"id":8415,"nodeType":"Return","src":"10296:70:36"}]},"documentation":{"id":8388,"nodeType":"StructuredDocumentation","src":"10053:109:36","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8417,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10176:6:36","nodeType":"FunctionDefinition","parameters":{"id":8392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8391,"mutability":"mutable","name":"self","nameLocation":"10200:4:36","nodeType":"VariableDeclaration","scope":8417,"src":"10183:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8390,"nodeType":"UserDefinedTypeName","pathNode":{"id":8389,"name":"Trace208","nameLocations":["10183:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"10183:8:36"},"referencedDeclaration":8192,"src":"10183:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10182:23:36"},"returnParameters":{"id":8395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8417,"src":"10229:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8393,"name":"uint208","nodeType":"ElementaryTypeName","src":"10229:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10228:9:36"},"scope":9230,"src":"10167:206:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8465,"nodeType":"Block","src":"10666:274:36","statements":[{"assignments":[8431],"declarations":[{"constant":false,"id":8431,"mutability":"mutable","name":"pos","nameLocation":"10684:3:36","nodeType":"VariableDeclaration","scope":8465,"src":"10676:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8430,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8435,"initialValue":{"expression":{"expression":{"id":8432,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"10690:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"10690:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:36","memberName":"length","nodeType":"MemberAccess","src":"10690:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10676:38:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8436,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"10728:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8463,"nodeType":"Block","src":"10789:145:36","statements":[{"assignments":[8447],"declarations":[{"constant":false,"id":8447,"mutability":"mutable","name":"ckpt","nameLocation":"10824:4:36","nodeType":"VariableDeclaration","scope":8463,"src":"10803:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8446,"nodeType":"UserDefinedTypeName","pathNode":{"id":8445,"name":"Checkpoint208","nameLocations":["10803:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"10803:13:36"},"referencedDeclaration":8197,"src":"10803:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8455,"initialValue":{"arguments":[{"expression":{"id":8449,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"10845:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10850:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"10845:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"10864:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10864:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8448,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"10831:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10803:69:36"},{"expression":{"components":[{"hexValue":"74727565","id":8456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10894:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8457,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"10900:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10905:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"10900:9:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":8459,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"10911:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"10911:11:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10893:30:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":8429,"id":8462,"nodeType":"Return","src":"10886:37:36"}]},"id":8464,"nodeType":"IfStatement","src":"10724:210:36","trueBody":{"id":8444,"nodeType":"Block","src":"10738:45:36","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10760:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10767:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10759:13:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8429,"id":8443,"nodeType":"Return","src":"10752:20:36"}]}}]},"documentation":{"id":8418,"nodeType":"StructuredDocumentation","src":"10379:168:36","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8466,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10561:16:36","nodeType":"FunctionDefinition","parameters":{"id":8422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8421,"mutability":"mutable","name":"self","nameLocation":"10595:4:36","nodeType":"VariableDeclaration","scope":8466,"src":"10578:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8420,"nodeType":"UserDefinedTypeName","pathNode":{"id":8419,"name":"Trace208","nameLocations":["10578:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"10578:8:36"},"referencedDeclaration":8192,"src":"10578:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10577:23:36"},"returnParameters":{"id":8429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8424,"mutability":"mutable","name":"exists","nameLocation":"10629:6:36","nodeType":"VariableDeclaration","scope":8466,"src":"10624:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8423,"name":"bool","nodeType":"ElementaryTypeName","src":"10624:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8426,"mutability":"mutable","name":"_key","nameLocation":"10644:4:36","nodeType":"VariableDeclaration","scope":8466,"src":"10637:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8425,"name":"uint48","nodeType":"ElementaryTypeName","src":"10637:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8428,"mutability":"mutable","name":"_value","nameLocation":"10658:6:36","nodeType":"VariableDeclaration","scope":8466,"src":"10650:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8427,"name":"uint208","nodeType":"ElementaryTypeName","src":"10650:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10623:42:36"},"scope":9230,"src":"10552:388:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8479,"nodeType":"Block","src":"11079:48:36","statements":[{"expression":{"expression":{"expression":{"id":8475,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"11096:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11101:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"11096:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11114:6:36","memberName":"length","nodeType":"MemberAccess","src":"11096:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8474,"id":8478,"nodeType":"Return","src":"11089:31:36"}]},"documentation":{"id":8467,"nodeType":"StructuredDocumentation","src":"10946:57:36","text":" @dev Returns the number of checkpoint."},"id":8480,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11017:6:36","nodeType":"FunctionDefinition","parameters":{"id":8471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8470,"mutability":"mutable","name":"self","nameLocation":"11041:4:36","nodeType":"VariableDeclaration","scope":8480,"src":"11024:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8469,"nodeType":"UserDefinedTypeName","pathNode":{"id":8468,"name":"Trace208","nameLocations":["11024:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"11024:8:36"},"referencedDeclaration":8192,"src":"11024:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11023:23:36"},"returnParameters":{"id":8474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8480,"src":"11070:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:36"},"scope":9230,"src":"11008:119:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8497,"nodeType":"Block","src":"11291:46:36","statements":[{"expression":{"baseExpression":{"expression":{"id":8492,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"11308:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11313:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8191,"src":"11308:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8495,"indexExpression":{"id":8494,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"11326:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11308:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":8491,"id":8496,"nodeType":"Return","src":"11301:29:36"}]},"documentation":{"id":8481,"nodeType":"StructuredDocumentation","src":"11133:61:36","text":" @dev Returns checkpoint at given position."},"id":8498,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11208:2:36","nodeType":"FunctionDefinition","parameters":{"id":8487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"self","nameLocation":"11228:4:36","nodeType":"VariableDeclaration","scope":8498,"src":"11211:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8483,"nodeType":"UserDefinedTypeName","pathNode":{"id":8482,"name":"Trace208","nameLocations":["11211:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8192,"src":"11211:8:36"},"referencedDeclaration":8192,"src":"11211:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8192_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8486,"mutability":"mutable","name":"pos","nameLocation":"11241:3:36","nodeType":"VariableDeclaration","scope":8498,"src":"11234:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8485,"name":"uint32","nodeType":"ElementaryTypeName","src":"11234:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11210:35:36"},"returnParameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8498,"src":"11269:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8489,"nodeType":"UserDefinedTypeName","pathNode":{"id":8488,"name":"Checkpoint208","nameLocations":["11269:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"11269:13:36"},"referencedDeclaration":8197,"src":"11269:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11268:22:36"},"scope":9230,"src":"11199:138:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8588,"nodeType":"Block","src":"11622:761:36","statements":[{"assignments":[8515],"declarations":[{"constant":false,"id":8515,"mutability":"mutable","name":"pos","nameLocation":"11640:3:36","nodeType":"VariableDeclaration","scope":8588,"src":"11632:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8514,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8518,"initialValue":{"expression":{"id":8516,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"11646:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:36","memberName":"length","nodeType":"MemberAccess","src":"11646:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11632:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8519,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"11672:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11672:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8586,"nodeType":"Block","src":"12269:108:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":8577,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"12314:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"12327:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8576,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12293:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12308:4:36","12319:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12293:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8573,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"12283:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:4:36","memberName":"push","nodeType":"MemberAccess","src":"12283:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8197_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8581,"nodeType":"ExpressionStatement","src":"12283:52:36"},{"expression":{"components":[{"hexValue":"30","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"12360:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12356:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":8513,"id":8585,"nodeType":"Return","src":"12349:17:36"}]},"id":8587,"nodeType":"IfStatement","src":"11668:709:36","trueBody":{"id":8572,"nodeType":"Block","src":"11681:582:36","statements":[{"assignments":[8524],"declarations":[{"constant":false,"id":8524,"mutability":"mutable","name":"last","nameLocation":"11768:4:36","nodeType":"VariableDeclaration","scope":8572,"src":"11747:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8523,"nodeType":"UserDefinedTypeName","pathNode":{"id":8522,"name":"Checkpoint208","nameLocations":["11747:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"11747:13:36"},"referencedDeclaration":8197,"src":"11747:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8531,"initialValue":{"arguments":[{"id":8526,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"11789:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8527,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"11795:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11801:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11795:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8525,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"11775:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11747:56:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8532,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"11877:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11882:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"11877:9:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8534,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"11889:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11877:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8540,"nodeType":"IfStatement","src":"11873:91:36","trueBody":{"id":8539,"nodeType":"Block","src":"11894:70:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8536,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"11919:28:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11919:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8538,"nodeType":"RevertStatement","src":"11912:37:36"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8541,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"12027:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12032:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"12027:9:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8543,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"12040:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12027:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8565,"nodeType":"Block","src":"12127:85:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":8560,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"12176:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"12189:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8559,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12155:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12170:4:36","12181:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12155:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8556,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"12145:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12150:4:36","memberName":"push","nodeType":"MemberAccess","src":"12145:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8197_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8564,"nodeType":"ExpressionStatement","src":"12145:52:36"}]},"id":8566,"nodeType":"IfStatement","src":"12023:189:36","trueBody":{"id":8555,"nodeType":"Block","src":"12045:76:36","statements":[{"expression":{"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":8546,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"12077:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8547,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"12083:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12089:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12083:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8545,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"12063:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12092:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"12063:35:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"12101:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12063:43:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8554,"nodeType":"ExpressionStatement","src":"12063:43:36"}]}},{"expression":{"components":[{"expression":{"id":8567,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"12233:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12238:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8196,"src":"12233:11:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"12246:5:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12232:20:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8513,"id":8571,"nodeType":"Return","src":"12225:27:36"}]}}]},"documentation":{"id":8499,"nodeType":"StructuredDocumentation","src":"11343:165:36","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8589,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11522:7:36","nodeType":"FunctionDefinition","parameters":{"id":8508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8503,"mutability":"mutable","name":"self","nameLocation":"11554:4:36","nodeType":"VariableDeclaration","scope":8589,"src":"11530:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8501,"nodeType":"UserDefinedTypeName","pathNode":{"id":8500,"name":"Checkpoint208","nameLocations":["11530:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"11530:13:36"},"referencedDeclaration":8197,"src":"11530:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8502,"nodeType":"ArrayTypeName","src":"11530:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8505,"mutability":"mutable","name":"key","nameLocation":"11567:3:36","nodeType":"VariableDeclaration","scope":8589,"src":"11560:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8504,"name":"uint48","nodeType":"ElementaryTypeName","src":"11560:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8507,"mutability":"mutable","name":"value","nameLocation":"11580:5:36","nodeType":"VariableDeclaration","scope":8589,"src":"11572:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8506,"name":"uint208","nodeType":"ElementaryTypeName","src":"11572:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11529:57:36"},"returnParameters":{"id":8513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8589,"src":"11604:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8509,"name":"uint208","nodeType":"ElementaryTypeName","src":"11604:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8589,"src":"11613:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8511,"name":"uint208","nodeType":"ElementaryTypeName","src":"11613:7:36","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11603:18:36"},"scope":9230,"src":"11513:870:36","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8640,"nodeType":"Block","src":"12902:267:36","statements":[{"body":{"id":8636,"nodeType":"Block","src":"12931:211:36","statements":[{"assignments":[8609],"declarations":[{"constant":false,"id":8609,"mutability":"mutable","name":"mid","nameLocation":"12953:3:36","nodeType":"VariableDeclaration","scope":8636,"src":"12945:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8608,"name":"uint256","nodeType":"ElementaryTypeName","src":"12945:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8615,"initialValue":{"arguments":[{"id":8612,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"12972:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8613,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"12977:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8610,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"12959:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12964:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"12959:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12959:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12945:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8617,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"13014:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8618,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"13020:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8616,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"13000:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13025:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"13000:29:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8621,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"13032:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13000:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8634,"nodeType":"Block","src":"13086:46:36","statements":[{"expression":{"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8628,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"13104:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8629,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"13110:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13110:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8633,"nodeType":"ExpressionStatement","src":"13104:13:36"}]},"id":8635,"nodeType":"IfStatement","src":"12996:136:36","trueBody":{"id":8627,"nodeType":"Block","src":"13037:43:36","statements":[{"expression":{"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8623,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"13055:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8624,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"13062:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13055:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8626,"nodeType":"ExpressionStatement","src":"13055:10:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8605,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"12919:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8606,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"12925:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12919:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8637,"nodeType":"WhileStatement","src":"12912:230:36"},{"expression":{"id":8638,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"13158:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8604,"id":8639,"nodeType":"Return","src":"13151:11:36"}]},"documentation":{"id":8590,"nodeType":"StructuredDocumentation","src":"12389:342:36","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8641,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12745:18:36","nodeType":"FunctionDefinition","parameters":{"id":8601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"self","nameLocation":"12797:4:36","nodeType":"VariableDeclaration","scope":8641,"src":"12773:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8592,"nodeType":"UserDefinedTypeName","pathNode":{"id":8591,"name":"Checkpoint208","nameLocations":["12773:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"12773:13:36"},"referencedDeclaration":8197,"src":"12773:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8593,"nodeType":"ArrayTypeName","src":"12773:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8596,"mutability":"mutable","name":"key","nameLocation":"12818:3:36","nodeType":"VariableDeclaration","scope":8641,"src":"12811:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8595,"name":"uint48","nodeType":"ElementaryTypeName","src":"12811:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8598,"mutability":"mutable","name":"low","nameLocation":"12839:3:36","nodeType":"VariableDeclaration","scope":8641,"src":"12831:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8597,"name":"uint256","nodeType":"ElementaryTypeName","src":"12831:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8600,"mutability":"mutable","name":"high","nameLocation":"12860:4:36","nodeType":"VariableDeclaration","scope":8641,"src":"12852:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12763:107:36"},"returnParameters":{"id":8604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8641,"src":"12893:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8602,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12892:9:36"},"scope":9230,"src":"12736:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8692,"nodeType":"Block","src":"13689:267:36","statements":[{"body":{"id":8688,"nodeType":"Block","src":"13718:211:36","statements":[{"assignments":[8661],"declarations":[{"constant":false,"id":8661,"mutability":"mutable","name":"mid","nameLocation":"13740:3:36","nodeType":"VariableDeclaration","scope":8688,"src":"13732:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8660,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8667,"initialValue":{"arguments":[{"id":8664,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"13759:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8665,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"13764:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8662,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"13746:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13751:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"13746:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13732:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8669,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"13801:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8670,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"13807:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8668,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":8708,"src":"13787:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8197_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13812:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8194,"src":"13787:29:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8673,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"13819:3:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13787:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8686,"nodeType":"Block","src":"13876:43:36","statements":[{"expression":{"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8682,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"13894:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8683,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"13901:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8685,"nodeType":"ExpressionStatement","src":"13894:10:36"}]},"id":8687,"nodeType":"IfStatement","src":"13783:136:36","trueBody":{"id":8681,"nodeType":"Block","src":"13824:46:36","statements":[{"expression":{"id":8679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8675,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"13842:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8676,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"13848:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13854:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13848:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13842:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8680,"nodeType":"ExpressionStatement","src":"13842:13:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8657,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"13706:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8658,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"13712:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13706:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8689,"nodeType":"WhileStatement","src":"13699:230:36"},{"expression":{"id":8690,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"13945:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8656,"id":8691,"nodeType":"Return","src":"13938:11:36"}]},"documentation":{"id":8642,"nodeType":"StructuredDocumentation","src":"13175:343:36","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8693,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13532:18:36","nodeType":"FunctionDefinition","parameters":{"id":8653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8646,"mutability":"mutable","name":"self","nameLocation":"13584:4:36","nodeType":"VariableDeclaration","scope":8693,"src":"13560:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8644,"nodeType":"UserDefinedTypeName","pathNode":{"id":8643,"name":"Checkpoint208","nameLocations":["13560:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"13560:13:36"},"referencedDeclaration":8197,"src":"13560:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8645,"nodeType":"ArrayTypeName","src":"13560:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8648,"mutability":"mutable","name":"key","nameLocation":"13605:3:36","nodeType":"VariableDeclaration","scope":8693,"src":"13598:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8647,"name":"uint48","nodeType":"ElementaryTypeName","src":"13598:6:36","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8650,"mutability":"mutable","name":"low","nameLocation":"13626:3:36","nodeType":"VariableDeclaration","scope":8693,"src":"13618:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8649,"name":"uint256","nodeType":"ElementaryTypeName","src":"13618:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8652,"mutability":"mutable","name":"high","nameLocation":"13647:4:36","nodeType":"VariableDeclaration","scope":8693,"src":"13639:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8651,"name":"uint256","nodeType":"ElementaryTypeName","src":"13639:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13550:107:36"},"returnParameters":{"id":8656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8693,"src":"13680:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13680:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13679:9:36"},"scope":9230,"src":"13523:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8707,"nodeType":"Block","src":"14239:125:36","statements":[{"AST":{"nodeType":"YulBlock","src":"14258:100:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14279:1:36","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14282:9:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14272:6:36"},"nodeType":"YulFunctionCall","src":"14272:20:36"},"nodeType":"YulExpressionStatement","src":"14272:20:36"},{"nodeType":"YulAssignment","src":"14305:43:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14334:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14337:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14324:9:36"},"nodeType":"YulFunctionCall","src":"14324:18:36"},{"name":"pos","nodeType":"YulIdentifier","src":"14344:3:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14320:3:36"},"nodeType":"YulFunctionCall","src":"14320:28:36"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14305:11:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8700,"isOffset":false,"isSlot":false,"src":"14344:3:36","valueSize":1},{"declaration":8704,"isOffset":false,"isSlot":true,"src":"14305:11:36","suffix":"slot","valueSize":1},{"declaration":8698,"isOffset":false,"isSlot":true,"src":"14282:9:36","suffix":"slot","valueSize":1}],"id":8706,"nodeType":"InlineAssembly","src":"14249:109:36"}]},"documentation":{"id":8694,"nodeType":"StructuredDocumentation","src":"13962:132:36","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8708,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14108:13:36","nodeType":"FunctionDefinition","parameters":{"id":8701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8698,"mutability":"mutable","name":"self","nameLocation":"14155:4:36","nodeType":"VariableDeclaration","scope":8708,"src":"14131:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8696,"nodeType":"UserDefinedTypeName","pathNode":{"id":8695,"name":"Checkpoint208","nameLocations":["14131:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"14131:13:36"},"referencedDeclaration":8197,"src":"14131:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8697,"nodeType":"ArrayTypeName","src":"14131:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8197_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8700,"mutability":"mutable","name":"pos","nameLocation":"14177:3:36","nodeType":"VariableDeclaration","scope":8708,"src":"14169:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8699,"name":"uint256","nodeType":"ElementaryTypeName","src":"14169:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14121:65:36"},"returnParameters":{"id":8705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8704,"mutability":"mutable","name":"result","nameLocation":"14231:6:36","nodeType":"VariableDeclaration","scope":8708,"src":"14209:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8703,"nodeType":"UserDefinedTypeName","pathNode":{"id":8702,"name":"Checkpoint208","nameLocations":["14209:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8197,"src":"14209:13:36"},"referencedDeclaration":8197,"src":"14209:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8197_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14208:30:36"},"scope":9230,"src":"14099:265:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":8713,"members":[{"constant":false,"id":8712,"mutability":"mutable","name":"_checkpoints","nameLocation":"14412:12:36","nodeType":"VariableDeclaration","scope":8713,"src":"14396:28:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8710,"nodeType":"UserDefinedTypeName","pathNode":{"id":8709,"name":"Checkpoint160","nameLocations":["14396:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"14396:13:36"},"referencedDeclaration":8718,"src":"14396:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8711,"nodeType":"ArrayTypeName","src":"14396:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14377:8:36","nodeType":"StructDefinition","scope":9230,"src":"14370:61:36","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":8718,"members":[{"constant":false,"id":8715,"mutability":"mutable","name":"_key","nameLocation":"14475:4:36","nodeType":"VariableDeclaration","scope":8718,"src":"14468:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8714,"name":"uint96","nodeType":"ElementaryTypeName","src":"14468:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8717,"mutability":"mutable","name":"_value","nameLocation":"14497:6:36","nodeType":"VariableDeclaration","scope":8718,"src":"14489:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8716,"name":"uint160","nodeType":"ElementaryTypeName","src":"14489:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14444:13:36","nodeType":"StructDefinition","scope":9230,"src":"14437:73:36","visibility":"public"},{"body":{"id":8740,"nodeType":"Block","src":"14923:62:36","statements":[{"expression":{"arguments":[{"expression":{"id":8734,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8722,"src":"14948:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"14948:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8736,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"14967:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"14972:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8733,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8068,8589,9110],"referencedDeclaration":9110,"src":"14940:7:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14940:38:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8732,"id":8739,"nodeType":"Return","src":"14933:45:36"}]},"documentation":{"id":8719,"nodeType":"StructuredDocumentation","src":"14516:302:36","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":8741,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14832:4:36","nodeType":"FunctionDefinition","parameters":{"id":8727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8722,"mutability":"mutable","name":"self","nameLocation":"14854:4:36","nodeType":"VariableDeclaration","scope":8741,"src":"14837:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8721,"nodeType":"UserDefinedTypeName","pathNode":{"id":8720,"name":"Trace160","nameLocations":["14837:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"14837:8:36"},"referencedDeclaration":8713,"src":"14837:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8724,"mutability":"mutable","name":"key","nameLocation":"14867:3:36","nodeType":"VariableDeclaration","scope":8741,"src":"14860:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8723,"name":"uint96","nodeType":"ElementaryTypeName","src":"14860:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8726,"mutability":"mutable","name":"value","nameLocation":"14880:5:36","nodeType":"VariableDeclaration","scope":8741,"src":"14872:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8725,"name":"uint160","nodeType":"ElementaryTypeName","src":"14872:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14836:50:36"},"returnParameters":{"id":8732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8741,"src":"14905:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8728,"name":"uint160","nodeType":"ElementaryTypeName","src":"14905:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8741,"src":"14914:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8730,"name":"uint160","nodeType":"ElementaryTypeName","src":"14914:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14904:18:36"},"scope":9230,"src":"14823:162:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8780,"nodeType":"Block","src":"15238:207:36","statements":[{"assignments":[8753],"declarations":[{"constant":false,"id":8753,"mutability":"mutable","name":"len","nameLocation":"15256:3:36","nodeType":"VariableDeclaration","scope":8780,"src":"15248:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8752,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8757,"initialValue":{"expression":{"expression":{"id":8754,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8745,"src":"15262:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15262:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15280:6:36","memberName":"length","nodeType":"MemberAccess","src":"15262:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:38:36"},{"assignments":[8759],"declarations":[{"constant":false,"id":8759,"mutability":"mutable","name":"pos","nameLocation":"15304:3:36","nodeType":"VariableDeclaration","scope":8780,"src":"15296:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8758,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8767,"initialValue":{"arguments":[{"expression":{"id":8761,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8745,"src":"15329:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15334:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15329:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8763,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"15348:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15353:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8765,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"15356:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8760,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8172,8693,9214],"referencedDeclaration":9214,"src":"15310:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15296:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8768,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"15377:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8769,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"15384:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8773,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8745,"src":"15408:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15413:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15408:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8775,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"15427:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8772,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"15394:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15432:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"15394:44:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15377:61:36","trueExpression":{"hexValue":"30","id":8771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15390:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8751,"id":8779,"nodeType":"Return","src":"15370:68:36"}]},"documentation":{"id":8742,"nodeType":"StructuredDocumentation","src":"14991:154:36","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8781,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15159:11:36","nodeType":"FunctionDefinition","parameters":{"id":8748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8745,"mutability":"mutable","name":"self","nameLocation":"15188:4:36","nodeType":"VariableDeclaration","scope":8781,"src":"15171:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8744,"nodeType":"UserDefinedTypeName","pathNode":{"id":8743,"name":"Trace160","nameLocations":["15171:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"15171:8:36"},"referencedDeclaration":8713,"src":"15171:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8747,"mutability":"mutable","name":"key","nameLocation":"15201:3:36","nodeType":"VariableDeclaration","scope":8781,"src":"15194:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8746,"name":"uint96","nodeType":"ElementaryTypeName","src":"15194:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15170:35:36"},"returnParameters":{"id":8751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8781,"src":"15229:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8749,"name":"uint160","nodeType":"ElementaryTypeName","src":"15229:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15228:9:36"},"scope":9230,"src":"15150:295:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8822,"nodeType":"Block","src":"15700:209:36","statements":[{"assignments":[8793],"declarations":[{"constant":false,"id":8793,"mutability":"mutable","name":"len","nameLocation":"15718:3:36","nodeType":"VariableDeclaration","scope":8822,"src":"15710:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8792,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8797,"initialValue":{"expression":{"expression":{"id":8794,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"15724:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15724:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15742:6:36","memberName":"length","nodeType":"MemberAccess","src":"15724:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15710:38:36"},{"assignments":[8799],"declarations":[{"constant":false,"id":8799,"mutability":"mutable","name":"pos","nameLocation":"15766:3:36","nodeType":"VariableDeclaration","scope":8822,"src":"15758:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8798,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8807,"initialValue":{"arguments":[{"expression":{"id":8801,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"15791:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15796:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15791:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8803,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"15810:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15815:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8805,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"15818:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8800,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":9162,"src":"15772:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15772:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15758:64:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8808,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8799,"src":"15839:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15846:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15839:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8813,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"15868:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"15868:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8815,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8799,"src":"15887:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15893:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15887:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8812,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"15854:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15854:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15896:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"15854:48:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15839:63:36","trueExpression":{"hexValue":"30","id":8811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8791,"id":8821,"nodeType":"Return","src":"15832:70:36"}]},"documentation":{"id":8782,"nodeType":"StructuredDocumentation","src":"15451:156:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8823,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15621:11:36","nodeType":"FunctionDefinition","parameters":{"id":8788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8785,"mutability":"mutable","name":"self","nameLocation":"15650:4:36","nodeType":"VariableDeclaration","scope":8823,"src":"15633:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8784,"nodeType":"UserDefinedTypeName","pathNode":{"id":8783,"name":"Trace160","nameLocations":["15633:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"15633:8:36"},"referencedDeclaration":8713,"src":"15633:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8787,"mutability":"mutable","name":"key","nameLocation":"15663:3:36","nodeType":"VariableDeclaration","scope":8823,"src":"15656:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8786,"name":"uint96","nodeType":"ElementaryTypeName","src":"15656:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15632:35:36"},"returnParameters":{"id":8791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8823,"src":"15691:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8789,"name":"uint160","nodeType":"ElementaryTypeName","src":"15691:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15690:9:36"},"scope":9230,"src":"15612:297:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8907,"nodeType":"Block","src":"16308:512:36","statements":[{"assignments":[8835],"declarations":[{"constant":false,"id":8835,"mutability":"mutable","name":"len","nameLocation":"16326:3:36","nodeType":"VariableDeclaration","scope":8907,"src":"16318:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8834,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8839,"initialValue":{"expression":{"expression":{"id":8836,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16332:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"16332:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16350:6:36","memberName":"length","nodeType":"MemberAccess","src":"16332:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:38:36"},{"assignments":[8841],"declarations":[{"constant":false,"id":8841,"mutability":"mutable","name":"low","nameLocation":"16375:3:36","nodeType":"VariableDeclaration","scope":8907,"src":"16367:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8840,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8843,"initialValue":{"hexValue":"30","id":8842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16381:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16367:15:36"},{"assignments":[8845],"declarations":[{"constant":false,"id":8845,"mutability":"mutable","name":"high","nameLocation":"16400:4:36","nodeType":"VariableDeclaration","scope":8907,"src":"16392:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8844,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8847,"initialValue":{"id":8846,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"16407:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16392:18:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8848,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"16425:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16431:1:36","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16425:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8882,"nodeType":"IfStatement","src":"16421:234:36","trueBody":{"id":8881,"nodeType":"Block","src":"16434:221:36","statements":[{"assignments":[8852],"declarations":[{"constant":false,"id":8852,"mutability":"mutable","name":"mid","nameLocation":"16456:3:36","nodeType":"VariableDeclaration","scope":8881,"src":"16448:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16448:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8859,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8853,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"16462:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8856,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"16478:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8854,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"16468:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16473:4:36","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5287,"src":"16468:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16468:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16448:34:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8860,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"16500:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8862,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16520:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"16520:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8864,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"16539:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8861,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"16506:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16506:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16544:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"16506:42:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16500:48:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8879,"nodeType":"Block","src":"16599:46:36","statements":[{"expression":{"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8873,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8841,"src":"16617:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8874,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"16623:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16623:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8878,"nodeType":"ExpressionStatement","src":"16617:13:36"}]},"id":8880,"nodeType":"IfStatement","src":"16496:149:36","trueBody":{"id":8872,"nodeType":"Block","src":"16550:43:36","statements":[{"expression":{"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8868,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8845,"src":"16568:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8869,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"16575:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16568:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8871,"nodeType":"ExpressionStatement","src":"16568:10:36"}]}}]}},{"assignments":[8884],"declarations":[{"constant":false,"id":8884,"mutability":"mutable","name":"pos","nameLocation":"16673:3:36","nodeType":"VariableDeclaration","scope":8907,"src":"16665:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8883,"name":"uint256","nodeType":"ElementaryTypeName","src":"16665:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8892,"initialValue":{"arguments":[{"expression":{"id":8886,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16698:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"16698:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8888,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"16717:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8889,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8841,"src":"16722:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8890,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8845,"src":"16727:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8885,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8120,8641,9162],"referencedDeclaration":9162,"src":"16679:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16679:53:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16665:67:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8893,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"16750:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16757:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16750:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8898,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16779:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"16779:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8900,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"16798:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16804:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16798:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8897,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"16765:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"16765:48:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16750:63:36","trueExpression":{"hexValue":"30","id":8896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8833,"id":8906,"nodeType":"Return","src":"16743:70:36"}]},"documentation":{"id":8824,"nodeType":"StructuredDocumentation","src":"15915:294:36","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8908,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16223:17:36","nodeType":"FunctionDefinition","parameters":{"id":8830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8827,"mutability":"mutable","name":"self","nameLocation":"16258:4:36","nodeType":"VariableDeclaration","scope":8908,"src":"16241:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8826,"nodeType":"UserDefinedTypeName","pathNode":{"id":8825,"name":"Trace160","nameLocations":["16241:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"16241:8:36"},"referencedDeclaration":8713,"src":"16241:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8829,"mutability":"mutable","name":"key","nameLocation":"16271:3:36","nodeType":"VariableDeclaration","scope":8908,"src":"16264:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8828,"name":"uint96","nodeType":"ElementaryTypeName","src":"16264:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16240:35:36"},"returnParameters":{"id":8833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8908,"src":"16299:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8831,"name":"uint160","nodeType":"ElementaryTypeName","src":"16299:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16298:9:36"},"scope":9230,"src":"16214:606:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8937,"nodeType":"Block","src":"17011:135:36","statements":[{"assignments":[8918],"declarations":[{"constant":false,"id":8918,"mutability":"mutable","name":"pos","nameLocation":"17029:3:36","nodeType":"VariableDeclaration","scope":8937,"src":"17021:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"17021:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8922,"initialValue":{"expression":{"expression":{"id":8919,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"17035:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17040:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"17035:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17053:6:36","memberName":"length","nodeType":"MemberAccess","src":"17035:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17021:38:36"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8923,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"17076:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17083:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17076:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8928,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"17105:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17110:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"17105:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8930,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"17124:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17130:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17124:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8927,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"17091:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17091:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"17091:48:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17076:63:36","trueExpression":{"hexValue":"30","id":8926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8916,"id":8936,"nodeType":"Return","src":"17069:70:36"}]},"documentation":{"id":8909,"nodeType":"StructuredDocumentation","src":"16826:109:36","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8938,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16949:6:36","nodeType":"FunctionDefinition","parameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8912,"mutability":"mutable","name":"self","nameLocation":"16973:4:36","nodeType":"VariableDeclaration","scope":8938,"src":"16956:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8911,"nodeType":"UserDefinedTypeName","pathNode":{"id":8910,"name":"Trace160","nameLocations":["16956:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"16956:8:36"},"referencedDeclaration":8713,"src":"16956:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16955:23:36"},"returnParameters":{"id":8916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8938,"src":"17002:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8914,"name":"uint160","nodeType":"ElementaryTypeName","src":"17002:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17001:9:36"},"scope":9230,"src":"16940:206:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8986,"nodeType":"Block","src":"17439:274:36","statements":[{"assignments":[8952],"declarations":[{"constant":false,"id":8952,"mutability":"mutable","name":"pos","nameLocation":"17457:3:36","nodeType":"VariableDeclaration","scope":8986,"src":"17449:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8951,"name":"uint256","nodeType":"ElementaryTypeName","src":"17449:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8956,"initialValue":{"expression":{"expression":{"id":8953,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"17463:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17468:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"17463:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17481:6:36","memberName":"length","nodeType":"MemberAccess","src":"17463:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17449:38:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8957,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"17501:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17508:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17501:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8984,"nodeType":"Block","src":"17562:145:36","statements":[{"assignments":[8968],"declarations":[{"constant":false,"id":8968,"mutability":"mutable","name":"ckpt","nameLocation":"17597:4:36","nodeType":"VariableDeclaration","scope":8984,"src":"17576:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8967,"nodeType":"UserDefinedTypeName","pathNode":{"id":8966,"name":"Checkpoint160","nameLocations":["17576:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"17576:13:36"},"referencedDeclaration":8718,"src":"17576:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8976,"initialValue":{"arguments":[{"expression":{"id":8970,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"17618:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17623:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"17618:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8972,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"17637:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17637:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8969,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"17604:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17576:69:36"},{"expression":{"components":[{"hexValue":"74727565","id":8977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17667:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8978,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"17673:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17678:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"17673:9:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":8980,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"17684:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17689:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"17684:11:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17666:30:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":8950,"id":8983,"nodeType":"Return","src":"17659:37:36"}]},"id":8985,"nodeType":"IfStatement","src":"17497:210:36","trueBody":{"id":8965,"nodeType":"Block","src":"17511:45:36","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17533:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17543:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17532:13:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8950,"id":8964,"nodeType":"Return","src":"17525:20:36"}]}}]},"documentation":{"id":8939,"nodeType":"StructuredDocumentation","src":"17152:168:36","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8987,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17334:16:36","nodeType":"FunctionDefinition","parameters":{"id":8943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8942,"mutability":"mutable","name":"self","nameLocation":"17368:4:36","nodeType":"VariableDeclaration","scope":8987,"src":"17351:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8941,"nodeType":"UserDefinedTypeName","pathNode":{"id":8940,"name":"Trace160","nameLocations":["17351:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"17351:8:36"},"referencedDeclaration":8713,"src":"17351:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17350:23:36"},"returnParameters":{"id":8950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8945,"mutability":"mutable","name":"exists","nameLocation":"17402:6:36","nodeType":"VariableDeclaration","scope":8987,"src":"17397:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8944,"name":"bool","nodeType":"ElementaryTypeName","src":"17397:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8947,"mutability":"mutable","name":"_key","nameLocation":"17417:4:36","nodeType":"VariableDeclaration","scope":8987,"src":"17410:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8946,"name":"uint96","nodeType":"ElementaryTypeName","src":"17410:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8949,"mutability":"mutable","name":"_value","nameLocation":"17431:6:36","nodeType":"VariableDeclaration","scope":8987,"src":"17423:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8948,"name":"uint160","nodeType":"ElementaryTypeName","src":"17423:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17396:42:36"},"scope":9230,"src":"17325:388:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9000,"nodeType":"Block","src":"17852:48:36","statements":[{"expression":{"expression":{"expression":{"id":8996,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"17869:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17874:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"17869:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:6:36","memberName":"length","nodeType":"MemberAccess","src":"17869:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8995,"id":8999,"nodeType":"Return","src":"17862:31:36"}]},"documentation":{"id":8988,"nodeType":"StructuredDocumentation","src":"17719:57:36","text":" @dev Returns the number of checkpoint."},"id":9001,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17790:6:36","nodeType":"FunctionDefinition","parameters":{"id":8992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8991,"mutability":"mutable","name":"self","nameLocation":"17814:4:36","nodeType":"VariableDeclaration","scope":9001,"src":"17797:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8990,"nodeType":"UserDefinedTypeName","pathNode":{"id":8989,"name":"Trace160","nameLocations":["17797:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"17797:8:36"},"referencedDeclaration":8713,"src":"17797:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17796:23:36"},"returnParameters":{"id":8995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9001,"src":"17843:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8993,"name":"uint256","nodeType":"ElementaryTypeName","src":"17843:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17842:9:36"},"scope":9230,"src":"17781:119:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9018,"nodeType":"Block","src":"18064:46:36","statements":[{"expression":{"baseExpression":{"expression":{"id":9013,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"18081:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18086:12:36","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"18081:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9016,"indexExpression":{"id":9015,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"18099:3:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":9012,"id":9017,"nodeType":"Return","src":"18074:29:36"}]},"documentation":{"id":9002,"nodeType":"StructuredDocumentation","src":"17906:61:36","text":" @dev Returns checkpoint at given position."},"id":9019,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17981:2:36","nodeType":"FunctionDefinition","parameters":{"id":9008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9005,"mutability":"mutable","name":"self","nameLocation":"18001:4:36","nodeType":"VariableDeclaration","scope":9019,"src":"17984:21:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9004,"nodeType":"UserDefinedTypeName","pathNode":{"id":9003,"name":"Trace160","nameLocations":["17984:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"17984:8:36"},"referencedDeclaration":8713,"src":"17984:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8713_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9007,"mutability":"mutable","name":"pos","nameLocation":"18014:3:36","nodeType":"VariableDeclaration","scope":9019,"src":"18007:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9006,"name":"uint32","nodeType":"ElementaryTypeName","src":"18007:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"17983:35:36"},"returnParameters":{"id":9012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9019,"src":"18042:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9010,"nodeType":"UserDefinedTypeName","pathNode":{"id":9009,"name":"Checkpoint160","nameLocations":["18042:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"18042:13:36"},"referencedDeclaration":8718,"src":"18042:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18041:22:36"},"scope":9230,"src":"17972:138:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9109,"nodeType":"Block","src":"18395:761:36","statements":[{"assignments":[9036],"declarations":[{"constant":false,"id":9036,"mutability":"mutable","name":"pos","nameLocation":"18413:3:36","nodeType":"VariableDeclaration","scope":9109,"src":"18405:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"18405:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9039,"initialValue":{"expression":{"id":9037,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"18419:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18424:6:36","memberName":"length","nodeType":"MemberAccess","src":"18419:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18405:25:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9040,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"18445:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18451:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18445:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9107,"nodeType":"Block","src":"19042:108:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":9098,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"19087:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"19100:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9097,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"19066:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19081:4:36","19092:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19066:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9094,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"19056:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19061:4:36","memberName":"push","nodeType":"MemberAccess","src":"19056:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8718_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19056:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9102,"nodeType":"ExpressionStatement","src":"19056:52:36"},{"expression":{"components":[{"hexValue":"30","id":9103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19130:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"19133:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19129:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":9034,"id":9106,"nodeType":"Return","src":"19122:17:36"}]},"id":9108,"nodeType":"IfStatement","src":"18441:709:36","trueBody":{"id":9093,"nodeType":"Block","src":"18454:582:36","statements":[{"assignments":[9045],"declarations":[{"constant":false,"id":9045,"mutability":"mutable","name":"last","nameLocation":"18541:4:36","nodeType":"VariableDeclaration","scope":9093,"src":"18520:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9044,"nodeType":"UserDefinedTypeName","pathNode":{"id":9043,"name":"Checkpoint160","nameLocations":["18520:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"18520:13:36"},"referencedDeclaration":8718,"src":"18520:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9052,"initialValue":{"arguments":[{"id":9047,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"18562:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9048,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"18568:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18574:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18568:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9046,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"18548:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18548:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18520:56:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9053,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9045,"src":"18650:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":9054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18655:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"18650:9:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9055,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"18662:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18650:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9061,"nodeType":"IfStatement","src":"18646:91:36","trueBody":{"id":9060,"nodeType":"Block","src":"18667:70:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9057,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"18692:28:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18692:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9059,"nodeType":"RevertStatement","src":"18685:37:36"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9062,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9045,"src":"18800:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":9063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18805:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"18800:9:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9064,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"18813:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18800:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9086,"nodeType":"Block","src":"18900:85:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":9081,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"18949:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"18962:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9080,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"18928:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["18943:4:36","18954:6:36"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"18928:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9077,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"18918:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18923:4:36","memberName":"push","nodeType":"MemberAccess","src":"18918:9:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8718_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18918:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9085,"nodeType":"ExpressionStatement","src":"18918:52:36"}]},"id":9087,"nodeType":"IfStatement","src":"18796:189:36","trueBody":{"id":9076,"nodeType":"Block","src":"18818:76:36","statements":[{"expression":{"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":9067,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"18850:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9068,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"18856:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18856:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9066,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"18836:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18836:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18865:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"18836:35:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"18874:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18836:43:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9075,"nodeType":"ExpressionStatement","src":"18836:43:36"}]}},{"expression":{"components":[{"expression":{"id":9088,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9045,"src":"19006:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":9089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19011:6:36","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"19006:11:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":9090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"19019:5:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19005:20:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9034,"id":9092,"nodeType":"Return","src":"18998:27:36"}]}}]},"documentation":{"id":9020,"nodeType":"StructuredDocumentation","src":"18116:165:36","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":9110,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18295:7:36","nodeType":"FunctionDefinition","parameters":{"id":9029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9024,"mutability":"mutable","name":"self","nameLocation":"18327:4:36","nodeType":"VariableDeclaration","scope":9110,"src":"18303:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9022,"nodeType":"UserDefinedTypeName","pathNode":{"id":9021,"name":"Checkpoint160","nameLocations":["18303:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"18303:13:36"},"referencedDeclaration":8718,"src":"18303:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9023,"nodeType":"ArrayTypeName","src":"18303:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9026,"mutability":"mutable","name":"key","nameLocation":"18340:3:36","nodeType":"VariableDeclaration","scope":9110,"src":"18333:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9025,"name":"uint96","nodeType":"ElementaryTypeName","src":"18333:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9028,"mutability":"mutable","name":"value","nameLocation":"18353:5:36","nodeType":"VariableDeclaration","scope":9110,"src":"18345:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9027,"name":"uint160","nodeType":"ElementaryTypeName","src":"18345:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18302:57:36"},"returnParameters":{"id":9034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9110,"src":"18377:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9030,"name":"uint160","nodeType":"ElementaryTypeName","src":"18377:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9110,"src":"18386:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9032,"name":"uint160","nodeType":"ElementaryTypeName","src":"18386:7:36","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18376:18:36"},"scope":9230,"src":"18286:870:36","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9161,"nodeType":"Block","src":"19675:267:36","statements":[{"body":{"id":9157,"nodeType":"Block","src":"19704:211:36","statements":[{"assignments":[9130],"declarations":[{"constant":false,"id":9130,"mutability":"mutable","name":"mid","nameLocation":"19726:3:36","nodeType":"VariableDeclaration","scope":9157,"src":"19718:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9129,"name":"uint256","nodeType":"ElementaryTypeName","src":"19718:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9136,"initialValue":{"arguments":[{"id":9133,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"19745:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9134,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19750:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9131,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"19732:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19737:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"19732:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19732:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19718:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9138,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"19787:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9139,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"19793:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9137,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"19773:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19773:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19798:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"19773:29:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9142,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"19805:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19773:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9155,"nodeType":"Block","src":"19859:46:36","statements":[{"expression":{"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"19877:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9150,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"19883:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19883:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19877:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9154,"nodeType":"ExpressionStatement","src":"19877:13:36"}]},"id":9156,"nodeType":"IfStatement","src":"19769:136:36","trueBody":{"id":9148,"nodeType":"Block","src":"19810:43:36","statements":[{"expression":{"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19828:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9145,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"19835:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19828:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9147,"nodeType":"ExpressionStatement","src":"19828:10:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9126,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"19692:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9127,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19698:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19692:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9158,"nodeType":"WhileStatement","src":"19685:230:36"},{"expression":{"id":9159,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19931:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9125,"id":9160,"nodeType":"Return","src":"19924:11:36"}]},"documentation":{"id":9111,"nodeType":"StructuredDocumentation","src":"19162:342:36","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9162,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19518:18:36","nodeType":"FunctionDefinition","parameters":{"id":9122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9115,"mutability":"mutable","name":"self","nameLocation":"19570:4:36","nodeType":"VariableDeclaration","scope":9162,"src":"19546:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"Checkpoint160","nameLocations":["19546:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"19546:13:36"},"referencedDeclaration":8718,"src":"19546:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9114,"nodeType":"ArrayTypeName","src":"19546:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9117,"mutability":"mutable","name":"key","nameLocation":"19591:3:36","nodeType":"VariableDeclaration","scope":9162,"src":"19584:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9116,"name":"uint96","nodeType":"ElementaryTypeName","src":"19584:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9119,"mutability":"mutable","name":"low","nameLocation":"19612:3:36","nodeType":"VariableDeclaration","scope":9162,"src":"19604:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9118,"name":"uint256","nodeType":"ElementaryTypeName","src":"19604:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9121,"mutability":"mutable","name":"high","nameLocation":"19633:4:36","nodeType":"VariableDeclaration","scope":9162,"src":"19625:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9120,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19536:107:36"},"returnParameters":{"id":9125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9162,"src":"19666:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9123,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:36"},"scope":9230,"src":"19509:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9213,"nodeType":"Block","src":"20462:267:36","statements":[{"body":{"id":9209,"nodeType":"Block","src":"20491:211:36","statements":[{"assignments":[9182],"declarations":[{"constant":false,"id":9182,"mutability":"mutable","name":"mid","nameLocation":"20513:3:36","nodeType":"VariableDeclaration","scope":9209,"src":"20505:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9181,"name":"uint256","nodeType":"ElementaryTypeName","src":"20505:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9188,"initialValue":{"arguments":[{"id":9185,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9171,"src":"20532:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"20537:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9183,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"20519:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20524:7:36","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"20519:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20505:37:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9190,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"20574:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9191,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"20580:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9189,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8187,8708,9229],"referencedDeclaration":9229,"src":"20560:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8718_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20560:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20585:4:36","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"20560:29:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9194,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9169,"src":"20592:3:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20560:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9207,"nodeType":"Block","src":"20649:43:36","statements":[{"expression":{"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9203,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"20667:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9204,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"20674:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20667:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9206,"nodeType":"ExpressionStatement","src":"20667:10:36"}]},"id":9208,"nodeType":"IfStatement","src":"20556:136:36","trueBody":{"id":9202,"nodeType":"Block","src":"20597:46:36","statements":[{"expression":{"id":9200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9196,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9171,"src":"20615:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9197,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"20621:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20627:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20621:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9201,"nodeType":"ExpressionStatement","src":"20615:13:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9178,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9171,"src":"20479:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9179,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"20485:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20479:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9210,"nodeType":"WhileStatement","src":"20472:230:36"},{"expression":{"id":9211,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"20718:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9177,"id":9212,"nodeType":"Return","src":"20711:11:36"}]},"documentation":{"id":9163,"nodeType":"StructuredDocumentation","src":"19948:343:36","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9214,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20305:18:36","nodeType":"FunctionDefinition","parameters":{"id":9174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9167,"mutability":"mutable","name":"self","nameLocation":"20357:4:36","nodeType":"VariableDeclaration","scope":9214,"src":"20333:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9165,"nodeType":"UserDefinedTypeName","pathNode":{"id":9164,"name":"Checkpoint160","nameLocations":["20333:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"20333:13:36"},"referencedDeclaration":8718,"src":"20333:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9166,"nodeType":"ArrayTypeName","src":"20333:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9169,"mutability":"mutable","name":"key","nameLocation":"20378:3:36","nodeType":"VariableDeclaration","scope":9214,"src":"20371:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9168,"name":"uint96","nodeType":"ElementaryTypeName","src":"20371:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9171,"mutability":"mutable","name":"low","nameLocation":"20399:3:36","nodeType":"VariableDeclaration","scope":9214,"src":"20391:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9170,"name":"uint256","nodeType":"ElementaryTypeName","src":"20391:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9173,"mutability":"mutable","name":"high","nameLocation":"20420:4:36","nodeType":"VariableDeclaration","scope":9214,"src":"20412:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9172,"name":"uint256","nodeType":"ElementaryTypeName","src":"20412:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20323:107:36"},"returnParameters":{"id":9177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9214,"src":"20453:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9175,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20452:9:36"},"scope":9230,"src":"20296:433:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9228,"nodeType":"Block","src":"21012:125:36","statements":[{"AST":{"nodeType":"YulBlock","src":"21031:100:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21052:1:36","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"21055:9:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21045:6:36"},"nodeType":"YulFunctionCall","src":"21045:20:36"},"nodeType":"YulExpressionStatement","src":"21045:20:36"},{"nodeType":"YulAssignment","src":"21078:43:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21107:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21110:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21097:9:36"},"nodeType":"YulFunctionCall","src":"21097:18:36"},{"name":"pos","nodeType":"YulIdentifier","src":"21117:3:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21093:3:36"},"nodeType":"YulFunctionCall","src":"21093:28:36"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"21078:11:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9221,"isOffset":false,"isSlot":false,"src":"21117:3:36","valueSize":1},{"declaration":9225,"isOffset":false,"isSlot":true,"src":"21078:11:36","suffix":"slot","valueSize":1},{"declaration":9219,"isOffset":false,"isSlot":true,"src":"21055:9:36","suffix":"slot","valueSize":1}],"id":9227,"nodeType":"InlineAssembly","src":"21022:109:36"}]},"documentation":{"id":9215,"nodeType":"StructuredDocumentation","src":"20735:132:36","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9229,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20881:13:36","nodeType":"FunctionDefinition","parameters":{"id":9222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9219,"mutability":"mutable","name":"self","nameLocation":"20928:4:36","nodeType":"VariableDeclaration","scope":9229,"src":"20904:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9217,"nodeType":"UserDefinedTypeName","pathNode":{"id":9216,"name":"Checkpoint160","nameLocations":["20904:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"20904:13:36"},"referencedDeclaration":8718,"src":"20904:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9218,"nodeType":"ArrayTypeName","src":"20904:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8718_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9221,"mutability":"mutable","name":"pos","nameLocation":"20950:3:36","nodeType":"VariableDeclaration","scope":9229,"src":"20942:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9220,"name":"uint256","nodeType":"ElementaryTypeName","src":"20942:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:65:36"},"returnParameters":{"id":9226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9225,"mutability":"mutable","name":"result","nameLocation":"21004:6:36","nodeType":"VariableDeclaration","scope":9229,"src":"20982:28:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9224,"nodeType":"UserDefinedTypeName","pathNode":{"id":9223,"name":"Checkpoint160","nameLocations":["20982:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":8718,"src":"20982:13:36"},"referencedDeclaration":8718,"src":"20982:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8718_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20981:30:36"},"scope":9230,"src":"20872:265:36","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":9231,"src":"668:20471:36","usedErrors":[7666],"usedEvents":[]}],"src":"201:20939:36"},"id":36},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[5798],"SafeCast":[7553],"Time":[9505]},"id":9506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:37"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":9234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9506,"sourceUnit":5799,"src":"130:38:37","symbolAliases":[{"foreign":{"id":9233,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"138:4:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":9236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9506,"sourceUnit":7554,"src":"169:46:37","symbolAliases":[{"foreign":{"id":9235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"177:8:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":9237,"nodeType":"StructuredDocumentation","src":"217:422:37","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":9505,"linearizedBaseContracts":[9505],"name":"Time","nameLocation":"648:4:37","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9239,"libraryName":{"id":9238,"name":"Time","nameLocations":["665:4:37"],"nodeType":"IdentifierPath","referencedDeclaration":9505,"src":"665:4:37"},"nodeType":"UsingForDirective","src":"659:17:37"},{"body":{"id":9251,"nodeType":"Block","src":"802:58:37","statements":[{"expression":{"arguments":[{"expression":{"id":9247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:37","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:37","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9245,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"819:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:37","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"819:17:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9244,"id":9250,"nodeType":"Return","src":"812:41:37"}]},"documentation":{"id":9240,"nodeType":"StructuredDocumentation","src":"682:63:37","text":" @dev Get the block timestamp as a Timepoint."},"id":9252,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:37","nodeType":"FunctionDefinition","parameters":{"id":9241,"nodeType":"ParameterList","parameters":[],"src":"768:2:37"},"returnParameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9252,"src":"794:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9242,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:37"},"scope":9505,"src":"750:110:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9264,"nodeType":"Block","src":"985:55:37","statements":[{"expression":{"arguments":[{"expression":{"id":9260,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:37","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:37","memberName":"number","nodeType":"MemberAccess","src":"1020:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"1002:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7553_$","typeString":"type(library SafeCast)"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:37","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"1002:17:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9257,"id":9263,"nodeType":"Return","src":"995:38:37"}]},"documentation":{"id":9253,"nodeType":"StructuredDocumentation","src":"866:60:37","text":" @dev Get the block number as a Timepoint."},"id":9265,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:37","nodeType":"FunctionDefinition","parameters":{"id":9254,"nodeType":"ParameterList","parameters":[],"src":"951:2:37"},"returnParameters":{"id":9257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9265,"src":"977:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9255,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:37"},"scope":9505,"src":"931:109:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":9267,"name":"Delay","nameLocation":"2377:5:37","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:37","underlyingType":{"id":9266,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":9281,"nodeType":"Block","src":"2572:44:37","statements":[{"expression":{"arguments":[{"id":9278,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"2600:8:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9276,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"2589:5:37","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9267_$","typeString":"type(Time.Delay)"}},"id":9277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:37","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:37","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"functionReturnParameters":9275,"id":9280,"nodeType":"Return","src":"2582:27:37"}]},"documentation":{"id":9268,"nodeType":"StructuredDocumentation","src":"2400:103:37","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":9282,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:37","nodeType":"FunctionDefinition","parameters":{"id":9271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9270,"mutability":"mutable","name":"duration","nameLocation":"2532:8:37","nodeType":"VariableDeclaration","scope":9282,"src":"2525:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9269,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:37"},"returnParameters":{"id":9275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9282,"src":"2565:5:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9273,"nodeType":"UserDefinedTypeName","pathNode":{"id":9272,"name":"Delay","nameLocations":["2565:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"2565:5:37"},"referencedDeclaration":9267,"src":"2565:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:37"},"scope":9505,"src":"2508:108:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9320,"nodeType":"Block","src":"2964:180:37","statements":[{"assignments":[9298,9300,9302],"declarations":[{"constant":false,"id":9298,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:37","nodeType":"VariableDeclaration","scope":9320,"src":"2975:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9297,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9300,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:37","nodeType":"VariableDeclaration","scope":9320,"src":"2995:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9299,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9302,"mutability":"mutable","name":"effect","nameLocation":"3021:6:37","nodeType":"VariableDeclaration","scope":9320,"src":"3014:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9301,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":9306,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9303,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"3031:4:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:37","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":9466,"src":"3031:11:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9267_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:37"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9307,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"3061:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9308,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9288,"src":"3071:9:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":9314,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"3105:11:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9315,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"3118:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9316,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"3130:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:37","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:37","trueExpression":{"components":[{"id":9310,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"3084:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":9311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:37","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9296,"id":9319,"nodeType":"Return","src":"3054:83:37"}]},"documentation":{"id":9283,"nodeType":"StructuredDocumentation","src":"2622:241:37","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":9321,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:37","nodeType":"FunctionDefinition","parameters":{"id":9289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9286,"mutability":"mutable","name":"self","nameLocation":"2894:4:37","nodeType":"VariableDeclaration","scope":9321,"src":"2888:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9285,"nodeType":"UserDefinedTypeName","pathNode":{"id":9284,"name":"Delay","nameLocations":["2888:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"2888:5:37"},"referencedDeclaration":9267,"src":"2888:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9288,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:37","nodeType":"VariableDeclaration","scope":9321,"src":"2900:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9287,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:37"},"returnParameters":{"id":9296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9321,"src":"2940:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9290,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9321,"src":"2948:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9292,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9321,"src":"2956:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9294,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:37"},"scope":9505,"src":"2868:276:37","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9340,"nodeType":"Block","src":"3438:53:37","statements":[{"expression":{"arguments":[{"id":9335,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"3466:4:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9336,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"3472:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9334,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"3455:10:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9267_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9333,"id":9339,"nodeType":"Return","src":"3448:36:37"}]},"documentation":{"id":9322,"nodeType":"StructuredDocumentation","src":"3150:207:37","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":9341,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:37","nodeType":"FunctionDefinition","parameters":{"id":9326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9325,"mutability":"mutable","name":"self","nameLocation":"3385:4:37","nodeType":"VariableDeclaration","scope":9341,"src":"3379:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9324,"nodeType":"UserDefinedTypeName","pathNode":{"id":9323,"name":"Delay","nameLocations":["3379:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"3379:5:37"},"referencedDeclaration":9267,"src":"3379:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:37"},"returnParameters":{"id":9333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9341,"src":"3414:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9327,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9341,"src":"3422:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9329,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9341,"src":"3430:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9331,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:37"},"scope":9505,"src":"3362:129:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9358,"nodeType":"Block","src":"3604:74:37","statements":[{"assignments":[9351,null,null],"declarations":[{"constant":false,"id":9351,"mutability":"mutable","name":"delay","nameLocation":"3622:5:37","nodeType":"VariableDeclaration","scope":9358,"src":"3615:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9350,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":9355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9352,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"3635:4:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:37","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":9341,"src":"3635:12:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9267_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":9354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:37"},{"expression":{"id":9356,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"3666:5:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9349,"id":9357,"nodeType":"Return","src":"3659:12:37"}]},"documentation":{"id":9342,"nodeType":"StructuredDocumentation","src":"3497:46:37","text":" @dev Get the current value."},"id":9359,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:37","nodeType":"FunctionDefinition","parameters":{"id":9346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9345,"mutability":"mutable","name":"self","nameLocation":"3567:4:37","nodeType":"VariableDeclaration","scope":9359,"src":"3561:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9344,"nodeType":"UserDefinedTypeName","pathNode":{"id":9343,"name":"Delay","nameLocations":["3561:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"3561:5:37"},"referencedDeclaration":9267,"src":"3561:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:37"},"returnParameters":{"id":9349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9359,"src":"3596:6:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9347,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:37"},"scope":9505,"src":"3548:130:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9414,"nodeType":"Block","src":"4128:234:37","statements":[{"assignments":[9376],"declarations":[{"constant":false,"id":9376,"mutability":"mutable","name":"value","nameLocation":"4145:5:37","nodeType":"VariableDeclaration","scope":9414,"src":"4138:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9375,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9380,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9377,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"4153:4:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:37","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9359,"src":"4153:8:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9267_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":9379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:37"},{"assignments":[9382],"declarations":[{"constant":false,"id":9382,"mutability":"mutable","name":"setback","nameLocation":"4180:7:37","nodeType":"VariableDeclaration","scope":9414,"src":"4173:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9381,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9398,"initialValue":{"arguments":[{"arguments":[{"id":9387,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"4206:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"4218:5:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9389,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"4226:8:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:37","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"4237:5:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9392,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"4245:8:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9385,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4197:4:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5798_$","typeString":"type(library Math)"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:37","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4931,"src":"4197:8:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9383,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:37","typeDescriptions":{}}},"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:37"},{"expression":{"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9399,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"4269:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9400,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"4278:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9402,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9382,"src":"4292:7:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9405,"nodeType":"ExpressionStatement","src":"4269:30:37"},{"expression":{"components":[{"arguments":[{"id":9407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"4322:5:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9408,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"4329:8:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9409,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"4339:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9406,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"4317:4:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},{"id":9411,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"4348:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:37","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$9267_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":9374,"id":9413,"nodeType":"Return","src":"4309:46:37"}]},"documentation":{"id":9360,"nodeType":"StructuredDocumentation","src":"3684:283:37","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":9415,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:37","nodeType":"FunctionDefinition","parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"mutability":"mutable","name":"self","nameLocation":"4007:4:37","nodeType":"VariableDeclaration","scope":9415,"src":"4001:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9362,"nodeType":"UserDefinedTypeName","pathNode":{"id":9361,"name":"Delay","nameLocations":["4001:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"4001:5:37"},"referencedDeclaration":9267,"src":"4001:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9365,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:37","nodeType":"VariableDeclaration","scope":9415,"src":"4021:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9364,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9367,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:37","nodeType":"VariableDeclaration","scope":9415,"src":"4046:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9366,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:37"},"returnParameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9371,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:37","nodeType":"VariableDeclaration","scope":9415,"src":"4093:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9370,"nodeType":"UserDefinedTypeName","pathNode":{"id":9369,"name":"Delay","nameLocations":["4093:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"4093:5:37"},"referencedDeclaration":9267,"src":"4093:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9373,"mutability":"mutable","name":"effect","nameLocation":"4120:6:37","nodeType":"VariableDeclaration","scope":9415,"src":"4113:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9372,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:37"},"scope":9505,"src":"3972:390:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9465,"nodeType":"Block","src":"4595:212:37","statements":[{"assignments":[9429],"declarations":[{"constant":false,"id":9429,"mutability":"mutable","name":"raw","nameLocation":"4613:3:37","nodeType":"VariableDeclaration","scope":9465,"src":"4605:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9428,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":9434,"initialValue":{"arguments":[{"id":9432,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9419,"src":"4632:4:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}],"expression":{"id":9430,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"4619:5:37","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9267_$","typeString":"type(Time.Delay)"}},"id":9431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:37","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:37","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$9267_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:37"},{"expression":{"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9435,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"4648:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9438,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"4668:3:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9436,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:37","typeDescriptions":{}}},"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9441,"nodeType":"ExpressionStatement","src":"4648:24:37"},{"expression":{"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9442,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"4682:11:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9445,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"4703:3:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":9446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:37","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9443,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:37","typeDescriptions":{}}},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9450,"nodeType":"ExpressionStatement","src":"4682:31:37"},{"expression":{"id":9458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9451,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"4723:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9454,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"4739:3:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:37","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9452,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:37","typeDescriptions":{}}},"id":9457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9459,"nodeType":"ExpressionStatement","src":"4723:26:37"},{"expression":{"components":[{"id":9460,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"4768:11:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9461,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"4781:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9462,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"4793:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:37","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9427,"id":9464,"nodeType":"Return","src":"4760:40:37"}]},"documentation":{"id":9416,"nodeType":"StructuredDocumentation","src":"4368:117:37","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":9466,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:37","nodeType":"FunctionDefinition","parameters":{"id":9420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9419,"mutability":"mutable","name":"self","nameLocation":"4512:4:37","nodeType":"VariableDeclaration","scope":9466,"src":"4506:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9418,"nodeType":"UserDefinedTypeName","pathNode":{"id":9417,"name":"Delay","nameLocations":["4506:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"4506:5:37"},"referencedDeclaration":9267,"src":"4506:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:37"},"returnParameters":{"id":9427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9422,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:37","nodeType":"VariableDeclaration","scope":9466,"src":"4541:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9421,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9424,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:37","nodeType":"VariableDeclaration","scope":9466,"src":"4561:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9423,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9426,"mutability":"mutable","name":"effect","nameLocation":"4587:6:37","nodeType":"VariableDeclaration","scope":9466,"src":"4580:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9425,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:37"},"scope":9505,"src":"4490:317:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9503,"nodeType":"Block","src":"4980:112:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9483,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"5017:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9481,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:37","typeDescriptions":{}}},"id":9484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:37","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9490,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"5043:11:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9488,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:37","typeDescriptions":{}}},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":9492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:37","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9498,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"5073:10:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9496,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:37","typeDescriptions":{}}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:37","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":9479,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"4997:5:37","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9267_$","typeString":"type(Time.Delay)"}},"id":9480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:37","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:37","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9267_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"functionReturnParameters":9478,"id":9502,"nodeType":"Return","src":"4990:95:37"}]},"documentation":{"id":9467,"nodeType":"StructuredDocumentation","src":"4813:64:37","text":" @dev pack the components into a Delay object."},"id":9504,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:37","nodeType":"FunctionDefinition","parameters":{"id":9474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9469,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:37","nodeType":"VariableDeclaration","scope":9504,"src":"4896:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9468,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9471,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:37","nodeType":"VariableDeclaration","scope":9504,"src":"4916:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9470,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:37","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9473,"mutability":"mutable","name":"effect","nameLocation":"4942:6:37","nodeType":"VariableDeclaration","scope":9504,"src":"4935:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9472,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:37","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:37"},"returnParameters":{"id":9478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9504,"src":"4973:5:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"},"typeName":{"id":9476,"nodeType":"UserDefinedTypeName","pathNode":{"id":9475,"name":"Delay","nameLocations":["4973:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":9267,"src":"4973:5:37"},"referencedDeclaration":9267,"src":"4973:5:37","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9267","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:37"},"scope":9505,"src":"4882:210:37","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9506,"src":"640:4454:37","usedErrors":[],"usedEvents":[]}],"src":"104:4991:37"},"id":37},"contracts/PolymathAxons.sol":{"ast":{"absolutePath":"contracts/PolymathAxons.sol","exportedSymbols":{"Checkpoints":[9230],"Context":[3292],"ECDSA":[4407],"EIP712":[4634],"ERC20":[1512],"ERC20Pausable":[1624],"ERC20Permit":[1778],"ERC20Votes":[1910],"IERC20":[1590],"IERC20Errors":[902],"IERC20Metadata":[1936],"IERC20Permit":[1972],"Nonces":[3360],"Ownable":[147],"Pausable":[3477],"PolymathAxons":[9621],"Votes":[777]},"id":9622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9507,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:38"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9622,"sourceUnit":1513,"src":"57:55:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":9509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9622,"sourceUnit":1625,"src":"113:74:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9622,"sourceUnit":148,"src":"188:52:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":9511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9622,"sourceUnit":1779,"src":"241:72:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":9512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9622,"sourceUnit":1911,"src":"314:71:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9513,"name":"ERC20","nameLocations":["413:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"413:5:38"},"id":9514,"nodeType":"InheritanceSpecifier","src":"413:5:38"},{"baseName":{"id":9515,"name":"ERC20Pausable","nameLocations":["420:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":1624,"src":"420:13:38"},"id":9516,"nodeType":"InheritanceSpecifier","src":"420:13:38"},{"baseName":{"id":9517,"name":"Ownable","nameLocations":["435:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"435:7:38"},"id":9518,"nodeType":"InheritanceSpecifier","src":"435:7:38"},{"baseName":{"id":9519,"name":"ERC20Permit","nameLocations":["444:11:38"],"nodeType":"IdentifierPath","referencedDeclaration":1778,"src":"444:11:38"},"id":9520,"nodeType":"InheritanceSpecifier","src":"444:11:38"},{"baseName":{"id":9521,"name":"ERC20Votes","nameLocations":["457:10:38"],"nodeType":"IdentifierPath","referencedDeclaration":1910,"src":"457:10:38"},"id":9522,"nodeType":"InheritanceSpecifier","src":"457:10:38"}],"canonicalName":"PolymathAxons","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9621,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[9621,1910,777,841,230,856,1778,3360,4634,830,1972,147,1624,3477,1512,902,1936,1590,3292],"name":"PolymathAxons","nameLocation":"396:13:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":9548,"nodeType":"Block","src":"620:59:38","statements":[{"expression":{"arguments":[{"expression":{"id":9538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"636:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"640:6:38","memberName":"sender","nodeType":"MemberAccess","src":"636:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":9540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"648:4:38","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"655:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9542,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"661:8:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"655:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"648:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9537,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"630:5:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"630:42:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9547,"nodeType":"ExpressionStatement","src":"630:42:38"}]},"id":9549,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"506f6c796d61746841786f6e73","id":9527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"522:15:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d455598d910d3b81c36e155b62fe82ab0b147ab3d73a812eec707bf846d2a79","typeString":"literal_string \"PolymathAxons\""},"value":"PolymathAxons"},{"hexValue":"504c59584e53","id":9528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"539:8:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_faa82bf6af32a88a8b93acf66778782f6291de329b44269ebe3ba989c37bb3b1","typeString":"literal_string \"PLYXNS\""},"value":"PLYXNS"}],"id":9529,"kind":"baseConstructorSpecifier","modifierName":{"id":9526,"name":"ERC20","nameLocations":["516:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"516:5:38"},"nodeType":"ModifierInvocation","src":"516:32:38"},{"arguments":[{"id":9531,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9524,"src":"565:12:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9532,"kind":"baseConstructorSpecifier","modifierName":{"id":9530,"name":"Ownable","nameLocations":["557:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"557:7:38"},"nodeType":"ModifierInvocation","src":"557:21:38"},{"arguments":[{"hexValue":"506f6c796d61746841786f6e73","id":9534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"599:15:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d455598d910d3b81c36e155b62fe82ab0b147ab3d73a812eec707bf846d2a79","typeString":"literal_string \"PolymathAxons\""},"value":"PolymathAxons"}],"id":9535,"kind":"baseConstructorSpecifier","modifierName":{"id":9533,"name":"ERC20Permit","nameLocations":["587:11:38"],"nodeType":"IdentifierPath","referencedDeclaration":1778,"src":"587:11:38"},"nodeType":"ModifierInvocation","src":"587:28:38"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"initialOwner","nameLocation":"494:12:38","nodeType":"VariableDeclaration","scope":9549,"src":"486:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9523,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"485:22:38"},"returnParameters":{"id":9536,"nodeType":"ParameterList","parameters":[],"src":"620:0:38"},"scope":9621,"src":"474:205:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9557,"nodeType":"Block","src":"719:25:38","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9554,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"729:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"729:8:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9556,"nodeType":"ExpressionStatement","src":"729:8:38"}]},"functionSelector":"8456cb59","id":9558,"implemented":true,"kind":"function","modifiers":[{"id":9552,"kind":"modifierInvocation","modifierName":{"id":9551,"name":"onlyOwner","nameLocations":["709:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"709:9:38"},"nodeType":"ModifierInvocation","src":"709:9:38"}],"name":"pause","nameLocation":"694:5:38","nodeType":"FunctionDefinition","parameters":{"id":9550,"nodeType":"ParameterList","parameters":[],"src":"699:2:38"},"returnParameters":{"id":9553,"nodeType":"ParameterList","parameters":[],"src":"719:0:38"},"scope":9621,"src":"685:59:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9566,"nodeType":"Block","src":"786:27:38","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9563,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"796:8:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9565,"nodeType":"ExpressionStatement","src":"796:10:38"}]},"functionSelector":"3f4ba83a","id":9567,"implemented":true,"kind":"function","modifiers":[{"id":9561,"kind":"modifierInvocation","modifierName":{"id":9560,"name":"onlyOwner","nameLocations":["776:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"776:9:38"},"nodeType":"ModifierInvocation","src":"776:9:38"}],"name":"unpause","nameLocation":"759:7:38","nodeType":"FunctionDefinition","parameters":{"id":9559,"nodeType":"ParameterList","parameters":[],"src":"766:2:38"},"returnParameters":{"id":9562,"nodeType":"ParameterList","parameters":[],"src":"786:0:38"},"scope":9621,"src":"750:63:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9581,"nodeType":"Block","src":"878:34:38","statements":[{"expression":{"arguments":[{"id":9577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9569,"src":"894:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9578,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"898:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9576,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"888:5:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:17:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9580,"nodeType":"ExpressionStatement","src":"888:17:38"}]},"functionSelector":"40c10f19","id":9582,"implemented":true,"kind":"function","modifiers":[{"id":9574,"kind":"modifierInvocation","modifierName":{"id":9573,"name":"onlyOwner","nameLocations":["868:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"868:9:38"},"nodeType":"ModifierInvocation","src":"868:9:38"}],"name":"mint","nameLocation":"828:4:38","nodeType":"FunctionDefinition","parameters":{"id":9572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9569,"mutability":"mutable","name":"to","nameLocation":"841:2:38","nodeType":"VariableDeclaration","scope":9582,"src":"833:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9568,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9571,"mutability":"mutable","name":"amount","nameLocation":"853:6:38","nodeType":"VariableDeclaration","scope":9582,"src":"845:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9570,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:28:38"},"returnParameters":{"id":9575,"nodeType":"ParameterList","parameters":[],"src":"878:0:38"},"scope":9621,"src":"819:93:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1319,1623,1865],"body":{"id":9603,"nodeType":"Block","src":"1116:47:38","statements":[{"expression":{"arguments":[{"id":9598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"1140:4:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"1146:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"1150:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9595,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1126:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PolymathAxons_$9621_$","typeString":"type(contract super PolymathAxons)"}},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1132:7:38","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"1126:13:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:30:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9602,"nodeType":"ExpressionStatement","src":"1126:30:38"}]},"id":9604,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"995:7:38","nodeType":"FunctionDefinition","overrides":{"id":9593,"nodeType":"OverrideSpecifier","overrides":[{"id":9590,"name":"ERC20","nameLocations":["1078:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"1078:5:38"},{"id":9591,"name":"ERC20Pausable","nameLocations":["1085:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":1624,"src":"1085:13:38"},{"id":9592,"name":"ERC20Votes","nameLocations":["1100:10:38"],"nodeType":"IdentifierPath","referencedDeclaration":1910,"src":"1100:10:38"}],"src":"1069:42:38"},"parameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9584,"mutability":"mutable","name":"from","nameLocation":"1011:4:38","nodeType":"VariableDeclaration","scope":9604,"src":"1003:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9583,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9586,"mutability":"mutable","name":"to","nameLocation":"1025:2:38","nodeType":"VariableDeclaration","scope":9604,"src":"1017:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9585,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9588,"mutability":"mutable","name":"value","nameLocation":"1037:5:38","nodeType":"VariableDeclaration","scope":9604,"src":"1029:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1002:41:38"},"returnParameters":{"id":9594,"nodeType":"ParameterList","parameters":[],"src":"1116:0:38"},"scope":9621,"src":"986:177:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1767,3319],"body":{"id":9619,"nodeType":"Block","src":"1296:43:38","statements":[{"expression":{"arguments":[{"id":9616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"1326:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9614,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1313:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PolymathAxons_$9621_$","typeString":"type(contract super PolymathAxons)"}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1319:6:38","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"1313:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9613,"id":9618,"nodeType":"Return","src":"1306:26:38"}]},"functionSelector":"7ecebe00","id":9620,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1178:6:38","nodeType":"FunctionDefinition","overrides":{"id":9610,"nodeType":"OverrideSpecifier","overrides":[{"id":9608,"name":"ERC20Permit","nameLocations":["1245:11:38"],"nodeType":"IdentifierPath","referencedDeclaration":1778,"src":"1245:11:38"},{"id":9609,"name":"Nonces","nameLocations":["1258:6:38"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1258:6:38"}],"src":"1236:29:38"},"parameters":{"id":9607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9606,"mutability":"mutable","name":"owner","nameLocation":"1193:5:38","nodeType":"VariableDeclaration","scope":9620,"src":"1185:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9605,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1184:15:38"},"returnParameters":{"id":9613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9620,"src":"1283:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:9:38"},"scope":9621,"src":"1169:170:38","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9622,"src":"387:954:38","usedErrors":[13,18,155,281,288,872,877,882,891,896,901,1655,1662,1798,3302,3382,3385,3491,3493,4070,4075,4080,5808,7666],"usedEvents":[24,164,173,810,1524,1533,3374,3379]}],"src":"32:1309:38"},"id":38},"contracts/PolymathSigils.sol":{"ast":{"absolutePath":"contracts/PolymathSigils.sol","exportedSymbols":{"Context":[3292],"ERC165":[4732],"ERC721":[2981],"ERC721URIStorage":[3242],"IERC165":[4744],"IERC4906":[805],"IERC721":[3098],"IERC721Errors":[950],"IERC721Metadata":[3270],"IERC721Receiver":[3116],"Ownable":[147],"PolymathSigils":[9706],"Strings":[4059]},"id":9707,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9623,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:39"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9707,"sourceUnit":2982,"src":"57:57:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":9625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9707,"sourceUnit":3243,"src":"115:78:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9707,"sourceUnit":148,"src":"194:52:39","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9628,"name":"ERC721","nameLocations":["334:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"334:6:39"},"id":9629,"nodeType":"InheritanceSpecifier","src":"334:6:39"},{"baseName":{"id":9630,"name":"ERC721URIStorage","nameLocations":["342:16:39"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"342:16:39"},"id":9631,"nodeType":"InheritanceSpecifier","src":"342:16:39"},{"baseName":{"id":9632,"name":"Ownable","nameLocations":["360:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"360:7:39"},"id":9633,"nodeType":"InheritanceSpecifier","src":"360:7:39"}],"canonicalName":"PolymathSigils","contractDependencies":[],"contractKind":"contract","documentation":{"id":9627,"nodeType":"StructuredDocumentation","src":"248:59:39","text":"@custom:security-contact jeffrey@jeffreyallanbrown.com"},"fullyImplemented":true,"id":9706,"linearizedBaseContracts":[9706,147,3242,2981,950,3270,805,3098,4732,4744,3292],"name":"PolymathSigils","nameLocation":"316:14:39","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9635,"mutability":"mutable","name":"_nextTokenId","nameLocation":"390:12:39","nodeType":"VariableDeclaration","scope":9706,"src":"374:28:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9634,"name":"uint256","nodeType":"ElementaryTypeName","src":"374:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":9647,"nodeType":"Block","src":"521:2:39","statements":[]},"id":9648,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"506f6c796d617468536967696c73","id":9640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"458:16:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_58c5295f433acd804036257ff53b439cdea973e68efb19f4547ab8c1333b3776","typeString":"literal_string \"PolymathSigils\""},"value":"PolymathSigils"},{"hexValue":"504c5953474c53","id":9641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"476:9:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e278eb759fe7139a41f8bba415f522090c96dce3fe7f4326269b2d6bb084fb7","typeString":"literal_string \"PLYSGLS\""},"value":"PLYSGLS"}],"id":9642,"kind":"baseConstructorSpecifier","modifierName":{"id":9639,"name":"ERC721","nameLocations":["451:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"451:6:39"},"nodeType":"ModifierInvocation","src":"451:35:39"},{"arguments":[{"id":9644,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"503:12:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9645,"kind":"baseConstructorSpecifier","modifierName":{"id":9643,"name":"Ownable","nameLocations":["495:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"495:7:39"},"nodeType":"ModifierInvocation","src":"495:21:39"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9637,"mutability":"mutable","name":"initialOwner","nameLocation":"429:12:39","nodeType":"VariableDeclaration","scope":9648,"src":"421:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9636,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"420:22:39"},"returnParameters":{"id":9646,"nodeType":"ParameterList","parameters":[],"src":"521:0:39"},"scope":9706,"src":"409:114:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9672,"nodeType":"Block","src":"595:117:39","statements":[{"assignments":[9658],"declarations":[{"constant":false,"id":9658,"mutability":"mutable","name":"tokenId","nameLocation":"613:7:39","nodeType":"VariableDeclaration","scope":9672,"src":"605:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9657,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9661,"initialValue":{"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"623:14:39","subExpression":{"id":9659,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9635,"src":"623:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"605:32:39"},{"expression":{"arguments":[{"id":9663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9650,"src":"657:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"661:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9662,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2603,2629],"referencedDeclaration":2603,"src":"647:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"647:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9666,"nodeType":"ExpressionStatement","src":"647:22:39"},{"expression":{"arguments":[{"id":9668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"692:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9669,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"701:3:39","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9667,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"679:12:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":9670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"679:26:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9671,"nodeType":"ExpressionStatement","src":"679:26:39"}]},"functionSelector":"d204c45e","id":9673,"implemented":true,"kind":"function","modifiers":[{"id":9655,"kind":"modifierInvocation","modifierName":{"id":9654,"name":"onlyOwner","nameLocations":["585:9:39"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"585:9:39"},"nodeType":"ModifierInvocation","src":"585:9:39"}],"name":"safeMint","nameLocation":"538:8:39","nodeType":"FunctionDefinition","parameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9650,"mutability":"mutable","name":"to","nameLocation":"555:2:39","nodeType":"VariableDeclaration","scope":9673,"src":"547:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9649,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9652,"mutability":"mutable","name":"uri","nameLocation":"573:3:39","nodeType":"VariableDeclaration","scope":9673,"src":"559:17:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9651,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"546:31:39"},"returnParameters":{"id":9656,"nodeType":"ParameterList","parameters":[],"src":"595:0:39"},"scope":9706,"src":"529:183:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2168,3222],"body":{"id":9688,"nodeType":"Block","src":"928:47:39","statements":[{"expression":{"arguments":[{"id":9685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"960:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9683,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"945:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PolymathSigils_$9706_$","typeString":"type(contract super PolymathSigils)"}},"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"951:8:39","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"945:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"945:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9682,"id":9687,"nodeType":"Return","src":"938:30:39"}]},"functionSelector":"c87b56dd","id":9689,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"795:8:39","nodeType":"FunctionDefinition","overrides":{"id":9679,"nodeType":"OverrideSpecifier","overrides":[{"id":9677,"name":"ERC721","nameLocations":["866:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"866:6:39"},{"id":9678,"name":"ERC721URIStorage","nameLocations":["874:16:39"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"874:16:39"}],"src":"857:34:39"},"parameters":{"id":9676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9675,"mutability":"mutable","name":"tokenId","nameLocation":"812:7:39","nodeType":"VariableDeclaration","scope":9689,"src":"804:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9674,"name":"uint256","nodeType":"ElementaryTypeName","src":"804:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"803:17:39"},"returnParameters":{"id":9682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9689,"src":"909:13:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9680,"name":"string","nodeType":"ElementaryTypeName","src":"909:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"908:15:39"},"scope":9706,"src":"786:189:39","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2073,3165],"body":{"id":9704,"nodeType":"Block","src":"1126:60:39","statements":[{"expression":{"arguments":[{"id":9701,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9691,"src":"1167:11:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9699,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1143:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PolymathSigils_$9706_$","typeString":"type(contract super PolymathSigils)"}},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1149:17:39","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"1143:23:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:36:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9698,"id":9703,"nodeType":"Return","src":"1136:43:39"}]},"functionSelector":"01ffc9a7","id":9705,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"990:17:39","nodeType":"FunctionDefinition","overrides":{"id":9695,"nodeType":"OverrideSpecifier","overrides":[{"id":9693,"name":"ERC721","nameLocations":["1073:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"1073:6:39"},{"id":9694,"name":"ERC721URIStorage","nameLocations":["1081:16:39"],"nodeType":"IdentifierPath","referencedDeclaration":3242,"src":"1081:16:39"}],"src":"1064:34:39"},"parameters":{"id":9692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9691,"mutability":"mutable","name":"interfaceId","nameLocation":"1015:11:39","nodeType":"VariableDeclaration","scope":9705,"src":"1008:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9690,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1008:6:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1007:20:39"},"returnParameters":{"id":9698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9705,"src":"1116:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9696,"name":"bool","nodeType":"ElementaryTypeName","src":"1116:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1115:6:39"},"scope":9706,"src":"981:205:39","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9707,"src":"307:881:39","usedErrors":[13,18,908,913,922,927,932,939,944,949],"usedEvents":[24,797,804,2997,3006,3015]}],"src":"32:1156:39"},"id":39}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084a8063be3c891f86cc67193cc1a8ebf2c6723148fa57817c618d88797f3986364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xA8 MOD EXTCODESIZE 0xE3 0xC8 SWAP2 0xF8 PUSH13 0xC67193CC1A8EBF2C6723148FA5 PUSH25 0x17C618D88797F3986364736F6C634300081400330000000000 ","sourceMap":"764:33927:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084a8063be3c891f86cc67193cc1a8ebf2c6723148fa57817c618d88797f3986364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xA8 MOD EXTCODESIZE 0xE3 0xC8 SWAP2 0xF8 PUSH13 0xC67193CC1A8EBF2C6723148FA5 PUSH25 0x17C618D88797F3986364736F6C634300081400330000000000 ","sourceMap":"764:33927:34:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:35:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015e6b4f9cd612ece241843b552608e84b9f4cfee31e4cf7a9840d1000a1b11fd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE6 0xB4 0xF9 0xCD PUSH2 0x2ECE 0x24 XOR NUMBER 0xB5 MSTORE PUSH1 0x8E DUP5 0xB9 DELEGATECALL 0xCF 0xEE BALANCE 0xE4 0xCF PUSH27 0x9840D1000A1B11FD64736F6C634300081400330000000000000000 ","sourceMap":"668:20471:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015e6b4f9cd612ece241843b552608e84b9f4cfee31e4cf7a9840d1000a1b11fd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE6 0xB4 0xF9 0xCD PUSH2 0x2ECE 0x24 XOR NUMBER 0xB5 MSTORE PUSH1 0x8E DUP5 0xB9 DELEGATECALL 0xCF 0xEE BALANCE 0xE4 0xCF PUSH27 0x9840D1000A1B11FD64736F6C634300081400330000000000000000 ","sourceMap":"668:20471:36:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019d5290032272a5560ec1309ac764e05ac522d033e3ac34e509d6ef68dcefecd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD5 0x29 STOP ORIGIN 0x27 0x2A SSTORE PUSH1 0xEC SGT MULMOD 0xAC PUSH23 0x4E05AC522D033E3AC34E509D6EF68DCEFECD64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"640:4454:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019d5290032272a5560ec1309ac764e05ac522d033e3ac34e509d6ef68dcefecd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD5 0x29 STOP ORIGIN 0x27 0x2A SSTORE PUSH1 0xEC SGT MULMOD 0xAC PUSH23 0x4E05AC522D033E3AC34E509D6EF68DCEFECD64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"640:4454:37:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"contracts/PolymathAxons.sol":{"PolymathAxons":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1049":{"entryPoint":null,"id":1049,"parameterSlots":2,"returnSlots":0},"@_1673":{"entryPoint":null,"id":1673,"parameterSlots":1,"returnSlots":0},"@_3394":{"entryPoint":null,"id":3394,"parameterSlots":0,"returnSlots":0},"@_4504":{"entryPoint":null,"id":4504,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9549":{"entryPoint":null,"id":9549,"parameterSlots":1,"returnSlots":0},"@_add_754":{"entryPoint":2587,"id":754,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_4551":{"entryPoint":1006,"id":4551,"parameterSlots":0,"returnSlots":1},"@_insert_8589":{"entryPoint":3868,"id":8589,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1811":{"entryPoint":1655,"id":1811,"parameterSlots":0,"returnSlots":1},"@_mint_1352":{"entryPoint":1108,"id":1352,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":2933,"id":668,"parameterSlots":3,"returnSlots":0},"@_push_740":{"entryPoint":2724,"id":740,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_3431":{"entryPoint":1953,"id":3431,"parameterSlots":0,"returnSlots":0},"@_subtract_768":{"entryPoint":2804,"id":768,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":720,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":1691,"id":590,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_8708":{"entryPoint":3847,"id":8708,"parameterSlots":2,"returnSlots":1},"@_update_1319":{"entryPoint":2027,"id":1319,"parameterSlots":3,"returnSlots":0},"@_update_1623":{"entryPoint":1605,"id":1623,"parameterSlots":3,"returnSlots":0},"@_update_1865":{"entryPoint":1392,"id":1865,"parameterSlots":3,"returnSlots":0},"@_update_9604":{"entryPoint":1368,"id":9604,"parameterSlots":3,"returnSlots":0},"@blockNumber_9265":{"entryPoint":3823,"id":9265,"parameterSlots":0,"returnSlots":1},"@clock_299":{"entryPoint":3647,"id":299,"parameterSlots":0,"returnSlots":1},"@decimals_1076":{"entryPoint":1099,"id":1076,"parameterSlots":0,"returnSlots":1},"@delegates_426":{"entryPoint":2828,"id":426,"parameterSlots":1,"returnSlots":1},"@getStringSlot_3781":{"entryPoint":1358,"id":3781,"parameterSlots":1,"returnSlots":1},"@latest_8417":{"entryPoint":3670,"id":8417,"parameterSlots":1,"returnSlots":1},"@paused_3419":{"entryPoint":3624,"id":3419,"parameterSlots":0,"returnSlots":1},"@push_8220":{"entryPoint":3786,"id":8220,"parameterSlots":3,"returnSlots":2},"@toShortStringWithFallback_3635":{"entryPoint":918,"id":3635,"parameterSlots":2,"returnSlots":1},"@toShortString_3537":{"entryPoint":1249,"id":3537,"parameterSlots":1,"returnSlots":1},"@toUint208_5993":{"entryPoint":2611,"id":5993,"parameterSlots":1,"returnSlots":1},"@toUint48_6553":{"entryPoint":4790,"id":6553,"parameterSlots":1,"returnSlots":1},"@totalSupply_1085":{"entryPoint":1645,"id":1085,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":4989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6516,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":7351,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack":{"entryPoint":7607,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6533,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7088,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6550,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":7368,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":7624,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6984,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":6833,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5197,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6822,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5039,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6643,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":7216,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7029,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":6010,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":6350,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":6101,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6431,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":7413,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7498,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5518,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4920,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6506,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":7301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_48_by_1":{"entryPoint":7557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4888,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":7178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6337,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5479,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":6872,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":7311,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_48_by_1_to_t_uint8":{"entryPoint":7567,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5353,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5673,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6660,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":5218,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5144,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5643,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":5343,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5611,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5950,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5097,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5050,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5393,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":6849,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4883,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6704,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5234,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":5997,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5598,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5451,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5247,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5403,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4940,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5446,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16603:40","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:40","statements":[{"nodeType":"YulAssignment","src":"57:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:40"},"nodeType":"YulFunctionCall","src":"67:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:40","type":""}],"src":"7:75:40"},{"body":{"nodeType":"YulBlock","src":"177:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:40"},"nodeType":"YulFunctionCall","src":"187:12:40"},"nodeType":"YulExpressionStatement","src":"187:12:40"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:40"},{"body":{"nodeType":"YulBlock","src":"300:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:40"},"nodeType":"YulFunctionCall","src":"310:12:40"},"nodeType":"YulExpressionStatement","src":"310:12:40"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:40"},{"body":{"nodeType":"YulBlock","src":"379:81:40","statements":[{"nodeType":"YulAssignment","src":"389:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:40"},"nodeType":"YulFunctionCall","src":"400:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:40","type":""}],"src":"334:126:40"},{"body":{"nodeType":"YulBlock","src":"511:51:40","statements":[{"nodeType":"YulAssignment","src":"521:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:40"},"nodeType":"YulFunctionCall","src":"532:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:40","type":""}],"src":"466:96:40"},{"body":{"nodeType":"YulBlock","src":"611:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:40"},"nodeType":"YulFunctionCall","src":"670:12:40"},"nodeType":"YulExpressionStatement","src":"670:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:40"},"nodeType":"YulFunctionCall","src":"641:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:40"},"nodeType":"YulFunctionCall","src":"631:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:40"},"nodeType":"YulFunctionCall","src":"624:43:40"},"nodeType":"YulIf","src":"621:63:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:40","type":""}],"src":"568:122:40"},{"body":{"nodeType":"YulBlock","src":"759:80:40","statements":[{"nodeType":"YulAssignment","src":"769:22:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:40"},"nodeType":"YulFunctionCall","src":"778:13:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:40"},"nodeType":"YulFunctionCall","src":"800:33:40"},"nodeType":"YulExpressionStatement","src":"800:33:40"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:40","type":""}],"src":"696:143:40"},{"body":{"nodeType":"YulBlock","src":"922:274:40","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:40"},"nodeType":"YulFunctionCall","src":"970:79:40"},"nodeType":"YulExpressionStatement","src":"970:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:40"},"nodeType":"YulFunctionCall","src":"939:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:40"},"nodeType":"YulFunctionCall","src":"935:32:40"},"nodeType":"YulIf","src":"932:119:40"},{"nodeType":"YulBlock","src":"1061:128:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:40"},"nodeType":"YulFunctionCall","src":"1147:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:40"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:40"},"nodeType":"YulFunctionCall","src":"1115:64:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:40"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:40","type":""}],"src":"845:351:40"},{"body":{"nodeType":"YulBlock","src":"1261:40:40","statements":[{"nodeType":"YulAssignment","src":"1272:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1288:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1282:5:40"},"nodeType":"YulFunctionCall","src":"1282:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1272:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1254:6:40","type":""}],"src":"1202:99:40"},{"body":{"nodeType":"YulBlock","src":"1335:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:40"},"nodeType":"YulFunctionCall","src":"1345:88:40"},"nodeType":"YulExpressionStatement","src":"1345:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1452:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:40"},"nodeType":"YulFunctionCall","src":"1442:15:40"},"nodeType":"YulExpressionStatement","src":"1442:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:40"},"nodeType":"YulFunctionCall","src":"1466:15:40"},"nodeType":"YulExpressionStatement","src":"1466:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1307:180:40"},{"body":{"nodeType":"YulBlock","src":"1521:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:40"},"nodeType":"YulFunctionCall","src":"1531:88:40"},"nodeType":"YulExpressionStatement","src":"1531:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:40"},"nodeType":"YulFunctionCall","src":"1628:15:40"},"nodeType":"YulExpressionStatement","src":"1628:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:40"},"nodeType":"YulFunctionCall","src":"1652:15:40"},"nodeType":"YulExpressionStatement","src":"1652:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1493:180:40"},{"body":{"nodeType":"YulBlock","src":"1730:269:40","statements":[{"nodeType":"YulAssignment","src":"1740:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1754:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1750:3:40"},"nodeType":"YulFunctionCall","src":"1750:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1740:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"1771:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1801:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"1807:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1797:3:40"},"nodeType":"YulFunctionCall","src":"1797:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1775:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1848:51:40","statements":[{"nodeType":"YulAssignment","src":"1862:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1876:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1884:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1872:3:40"},"nodeType":"YulFunctionCall","src":"1872:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1862:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1828:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:40"},"nodeType":"YulFunctionCall","src":"1821:26:40"},"nodeType":"YulIf","src":"1818:81:40"},{"body":{"nodeType":"YulBlock","src":"1951:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1965:16:40"},"nodeType":"YulFunctionCall","src":"1965:18:40"},"nodeType":"YulExpressionStatement","src":"1965:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1915:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1938:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:40"},"nodeType":"YulFunctionCall","src":"1935:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:40"},"nodeType":"YulFunctionCall","src":"1912:38:40"},"nodeType":"YulIf","src":"1909:84:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1714:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:40","type":""}],"src":"1679:320:40"},{"body":{"nodeType":"YulBlock","src":"2059:87:40","statements":[{"nodeType":"YulAssignment","src":"2069:11:40","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2077:3:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2069:4:40"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:40","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2100:3:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2090:6:40"},"nodeType":"YulFunctionCall","src":"2090:14:40"},"nodeType":"YulExpressionStatement","src":"2090:14:40"},{"nodeType":"YulAssignment","src":"2113:26:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:40","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2121:9:40"},"nodeType":"YulFunctionCall","src":"2121:18:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2113:4:40"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2046:3:40","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2054:4:40","type":""}],"src":"2005:141:40"},{"body":{"nodeType":"YulBlock","src":"2196:49:40","statements":[{"nodeType":"YulAssignment","src":"2206:33:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:40"},"nodeType":"YulFunctionCall","src":"2220:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:40","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2216:3:40"},"nodeType":"YulFunctionCall","src":"2216:23:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:40"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:40","type":""}],"src":"2152:93:40"},{"body":{"nodeType":"YulBlock","src":"2304:54:40","statements":[{"nodeType":"YulAssignment","src":"2314:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2339:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"2345:5:40"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2335:3:40"},"nodeType":"YulFunctionCall","src":"2335:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2314:8:40"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2279:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"2285:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2295:8:40","type":""}],"src":"2251:107:40"},{"body":{"nodeType":"YulBlock","src":"2440:317:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2450:35:40","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2471:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:40","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2467:3:40"},"nodeType":"YulFunctionCall","src":"2467:18:40"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2454:9:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:109:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2525:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"2536:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2506:18:40"},"nodeType":"YulFunctionCall","src":"2506:97:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2498:4:40","type":""}]},{"nodeType":"YulAssignment","src":"2612:51:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2643:9:40"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2654:8:40"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2624:18:40"},"nodeType":"YulFunctionCall","src":"2624:39:40"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2612:8:40"}]},{"nodeType":"YulAssignment","src":"2672:30:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:40"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2696:4:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2692:3:40"},"nodeType":"YulFunctionCall","src":"2692:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2681:3:40"},"nodeType":"YulFunctionCall","src":"2681:21:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:40"}]},{"nodeType":"YulAssignment","src":"2711:40:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2724:5:40"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2735:8:40"},{"name":"mask","nodeType":"YulIdentifier","src":"2745:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2731:3:40"},"nodeType":"YulFunctionCall","src":"2731:19:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2721:2:40"},"nodeType":"YulFunctionCall","src":"2721:30:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2711:6:40"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2401:5:40","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2408:10:40","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2420:8:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2433:6:40","type":""}],"src":"2364:393:40"},{"body":{"nodeType":"YulBlock","src":"2808:32:40","statements":[{"nodeType":"YulAssignment","src":"2818:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2818:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2790:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2800:7:40","type":""}],"src":"2763:77:40"},{"body":{"nodeType":"YulBlock","src":"2878:28:40","statements":[{"nodeType":"YulAssignment","src":"2888:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2895:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2888:3:40"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2864:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2874:3:40","type":""}],"src":"2846:60:40"},{"body":{"nodeType":"YulBlock","src":"2972:82:40","statements":[{"nodeType":"YulAssignment","src":"2982:66:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3022:17:40"},"nodeType":"YulFunctionCall","src":"3022:24:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3013:8:40"},"nodeType":"YulFunctionCall","src":"3013:34:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2995:17:40"},"nodeType":"YulFunctionCall","src":"2995:53:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2982:9:40"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2962:9:40","type":""}],"src":"2912:142:40"},{"body":{"nodeType":"YulBlock","src":"3107:28:40","statements":[{"nodeType":"YulAssignment","src":"3117:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"3124:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3117:3:40"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3103:3:40","type":""}],"src":"3060:75:40"},{"body":{"nodeType":"YulBlock","src":"3217:193:40","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:63:40","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3282:7:40"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3251:30:40"},"nodeType":"YulFunctionCall","src":"3251:39:40"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3231:16:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3306:4:40"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3346:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3340:5:40"},"nodeType":"YulFunctionCall","src":"3340:11:40"},{"name":"offset","nodeType":"YulIdentifier","src":"3353:6:40"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3385:16:40"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3361:23:40"},"nodeType":"YulFunctionCall","src":"3361:41:40"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3312:27:40"},"nodeType":"YulFunctionCall","src":"3312:91:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3299:6:40"},"nodeType":"YulFunctionCall","src":"3299:105:40"},"nodeType":"YulExpressionStatement","src":"3299:105:40"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3194:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3200:6:40","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3208:7:40","type":""}],"src":"3141:269:40"},{"body":{"nodeType":"YulBlock","src":"3465:24:40","statements":[{"nodeType":"YulAssignment","src":"3475:8:40","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:1:40","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3475:3:40"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3461:3:40","type":""}],"src":"3416:73:40"},{"body":{"nodeType":"YulBlock","src":"3548:136:40","statements":[{"nodeType":"YulVariableDeclaration","src":"3558:46:40","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3572:30:40"},"nodeType":"YulFunctionCall","src":"3572:32:40"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3562:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3657:4:40"},{"name":"offset","nodeType":"YulIdentifier","src":"3663:6:40"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3671:6:40"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3613:43:40"},"nodeType":"YulFunctionCall","src":"3613:65:40"},"nodeType":"YulExpressionStatement","src":"3613:65:40"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3534:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3540:6:40","type":""}],"src":"3495:189:40"},{"body":{"nodeType":"YulBlock","src":"3740:136:40","statements":[{"body":{"nodeType":"YulBlock","src":"3807:63:40","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3851:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:40","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3821:29:40"},"nodeType":"YulFunctionCall","src":"3821:39:40"},"nodeType":"YulExpressionStatement","src":"3821:39:40"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3760:5:40"},{"name":"end","nodeType":"YulIdentifier","src":"3767:3:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3757:2:40"},"nodeType":"YulFunctionCall","src":"3757:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3772:26:40","statements":[{"nodeType":"YulAssignment","src":"3774:22:40","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3787:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3794:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:40"},"nodeType":"YulFunctionCall","src":"3783:13:40"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3774:5:40"}]}]},"pre":{"nodeType":"YulBlock","src":"3754:2:40","statements":[]},"src":"3750:120:40"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3728:5:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"3735:3:40","type":""}],"src":"3690:186:40"},{"body":{"nodeType":"YulBlock","src":"3961:464:40","statements":[{"body":{"nodeType":"YulBlock","src":"3987:431:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4001:54:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4049:5:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4017:31:40"},"nodeType":"YulFunctionCall","src":"4017:38:40"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4005:8:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:63:40","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4091:8:40"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4119:10:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4101:17:40"},"nodeType":"YulFunctionCall","src":"4101:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:40"},"nodeType":"YulFunctionCall","src":"4087:44:40"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4072:11:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:27:40","statements":[{"nodeType":"YulAssignment","src":"4290:23:40","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4305:8:40"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4290:11:40"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4272:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4269:2:40"},"nodeType":"YulFunctionCall","src":"4269:18:40"},"nodeType":"YulIf","src":"4266:49:40"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4357:11:40"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4374:8:40"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4402:3:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4384:17:40"},"nodeType":"YulFunctionCall","src":"4384:22:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:40"},"nodeType":"YulFunctionCall","src":"4370:37:40"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4328:28:40"},"nodeType":"YulFunctionCall","src":"4328:80:40"},"nodeType":"YulExpressionStatement","src":"4328:80:40"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3978:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3983:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:40"},"nodeType":"YulFunctionCall","src":"3975:11:40"},"nodeType":"YulIf","src":"3972:446:40"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3937:5:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"3944:3:40","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3949:10:40","type":""}],"src":"3882:543:40"},{"body":{"nodeType":"YulBlock","src":"4494:54:40","statements":[{"nodeType":"YulAssignment","src":"4504:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4529:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"4535:5:40"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4525:3:40"},"nodeType":"YulFunctionCall","src":"4525:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4504:8:40"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4469:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"4475:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4485:8:40","type":""}],"src":"4431:117:40"},{"body":{"nodeType":"YulBlock","src":"4605:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4615:68:40","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:1:40","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4667:5:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4660:3:40"},"nodeType":"YulFunctionCall","src":"4660:13:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:40","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4675:3:40"},"nodeType":"YulFunctionCall","src":"4675:6:40"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4631:28:40"},"nodeType":"YulFunctionCall","src":"4631:51:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4627:3:40"},"nodeType":"YulFunctionCall","src":"4627:56:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4619:4:40","type":""}]},{"nodeType":"YulAssignment","src":"4692:25:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4706:4:40"},{"name":"mask","nodeType":"YulIdentifier","src":"4712:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4702:3:40"},"nodeType":"YulFunctionCall","src":"4702:15:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:40"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4582:4:40","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4588:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4598:6:40","type":""}],"src":"4554:169:40"},{"body":{"nodeType":"YulBlock","src":"4809:214:40","statements":[{"nodeType":"YulAssignment","src":"4942:37:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4969:4:40"},{"name":"len","nodeType":"YulIdentifier","src":"4975:3:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4950:18:40"},"nodeType":"YulFunctionCall","src":"4950:29:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4942:4:40"}]},{"nodeType":"YulAssignment","src":"4988:29:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4999:4:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5009:1:40","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5012:3:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5005:3:40"},"nodeType":"YulFunctionCall","src":"5005:11:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4996:2:40"},"nodeType":"YulFunctionCall","src":"4996:21:40"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4988:4:40"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4790:4:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"4796:3:40","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4804:4:40","type":""}],"src":"4728:295:40"},{"body":{"nodeType":"YulBlock","src":"5120:1303:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5131:51:40","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5178:3:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5145:32:40"},"nodeType":"YulFunctionCall","src":"5145:37:40"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5135:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5267:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5269:16:40"},"nodeType":"YulFunctionCall","src":"5269:18:40"},"nodeType":"YulExpressionStatement","src":"5269:18:40"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5239:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5247:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5236:2:40"},"nodeType":"YulFunctionCall","src":"5236:30:40"},"nodeType":"YulIf","src":"5233:56:40"},{"nodeType":"YulVariableDeclaration","src":"5299:52:40","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5345:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5339:5:40"},"nodeType":"YulFunctionCall","src":"5339:11:40"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5313:25:40"},"nodeType":"YulFunctionCall","src":"5313:38:40"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5303:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:40"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5450:6:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"5458:6:40"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5398:45:40"},"nodeType":"YulFunctionCall","src":"5398:67:40"},"nodeType":"YulExpressionStatement","src":"5398:67:40"},{"nodeType":"YulVariableDeclaration","src":"5475:18:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5492:1:40","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5479:9:40","type":""}]},{"nodeType":"YulAssignment","src":"5503:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5516:4:40","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5503:9:40"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5567:611:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5581:37:40","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5600:6:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:4:40","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5608:3:40"},"nodeType":"YulFunctionCall","src":"5608:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:40"},"nodeType":"YulFunctionCall","src":"5596:22:40"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5585:7:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5632:51:40","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5678:4:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5646:31:40"},"nodeType":"YulFunctionCall","src":"5646:37:40"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5636:6:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5696:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5705:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5700:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:163:40","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5789:6:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5807:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5812:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:40"},"nodeType":"YulFunctionCall","src":"5803:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5797:5:40"},"nodeType":"YulFunctionCall","src":"5797:26:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5782:6:40"},"nodeType":"YulFunctionCall","src":"5782:42:40"},"nodeType":"YulExpressionStatement","src":"5782:42:40"},{"nodeType":"YulAssignment","src":"5841:24:40","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5855:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:40"},"nodeType":"YulFunctionCall","src":"5851:14:40"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5841:6:40"}]},{"nodeType":"YulAssignment","src":"5882:31:40","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5899:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:40"},"nodeType":"YulFunctionCall","src":"5895:18:40"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5882:9:40"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5730:1:40"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5733:7:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:40"},"nodeType":"YulFunctionCall","src":"5727:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5742:21:40","statements":[{"nodeType":"YulAssignment","src":"5744:17:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5753:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"5756:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:40"},"nodeType":"YulFunctionCall","src":"5749:12:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5744:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"5723:3:40","statements":[]},"src":"5719:208:40"},{"body":{"nodeType":"YulBlock","src":"5963:156:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5981:43:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6008:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6013:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:40"},"nodeType":"YulFunctionCall","src":"6004:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5998:5:40"},"nodeType":"YulFunctionCall","src":"5998:26:40"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5985:9:40","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:40"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6075:9:40"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6090:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"6098:4:40","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6086:3:40"},"nodeType":"YulFunctionCall","src":"6086:17:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6056:18:40"},"nodeType":"YulFunctionCall","src":"6056:48:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6041:6:40"},"nodeType":"YulFunctionCall","src":"6041:64:40"},"nodeType":"YulExpressionStatement","src":"6041:64:40"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5946:7:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"5955:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5943:2:40"},"nodeType":"YulFunctionCall","src":"5943:19:40"},"nodeType":"YulIf","src":"5940:179:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6139:4:40"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6153:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:40","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6149:3:40"},"nodeType":"YulFunctionCall","src":"6149:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:40"},"nodeType":"YulFunctionCall","src":"6145:22:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6132:6:40"},"nodeType":"YulFunctionCall","src":"6132:36:40"},"nodeType":"YulExpressionStatement","src":"6132:36:40"}]},"nodeType":"YulCase","src":"5560:618:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5565:1:40","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6195:222:40","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:14:40","value":{"kind":"number","nodeType":"YulLiteral","src":"6222:1:40","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6213:5:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"6246:67:40","statements":[{"nodeType":"YulAssignment","src":"6264:35:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6283:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6288:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6279:3:40"},"nodeType":"YulFunctionCall","src":"6279:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6273:5:40"},"nodeType":"YulFunctionCall","src":"6273:26:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6264:5:40"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6239:6:40"},"nodeType":"YulIf","src":"6236:77:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6333:4:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6392:5:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"6399:6:40"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6339:52:40"},"nodeType":"YulFunctionCall","src":"6339:67:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6326:6:40"},"nodeType":"YulFunctionCall","src":"6326:81:40"},"nodeType":"YulExpressionStatement","src":"6326:81:40"}]},"nodeType":"YulCase","src":"6187:230:40","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5540:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5537:2:40"},"nodeType":"YulFunctionCall","src":"5537:14:40"},"nodeType":"YulSwitch","src":"5530:887:40"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5109:4:40","type":""},{"name":"src","nodeType":"YulTypedName","src":"5115:3:40","type":""}],"src":"5028:1395:40"},{"body":{"nodeType":"YulBlock","src":"6494:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6511:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6534:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6516:17:40"},"nodeType":"YulFunctionCall","src":"6516:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6504:6:40"},"nodeType":"YulFunctionCall","src":"6504:37:40"},"nodeType":"YulExpressionStatement","src":"6504:37:40"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6482:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6489:3:40","type":""}],"src":"6429:118:40"},{"body":{"nodeType":"YulBlock","src":"6651:124:40","statements":[{"nodeType":"YulAssignment","src":"6661:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:40"},"nodeType":"YulFunctionCall","src":"6669:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6661:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6754:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6765:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:40"},"nodeType":"YulFunctionCall","src":"6750:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6697:43:40"},"nodeType":"YulFunctionCall","src":"6697:71:40"},"nodeType":"YulExpressionStatement","src":"6697:71:40"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6623:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6635:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6646:4:40","type":""}],"src":"6553:222:40"},{"body":{"nodeType":"YulBlock","src":"6809:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6826:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6829:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6819:6:40"},"nodeType":"YulFunctionCall","src":"6819:88:40"},"nodeType":"YulExpressionStatement","src":"6819:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6923:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6926:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6916:6:40"},"nodeType":"YulFunctionCall","src":"6916:15:40"},"nodeType":"YulExpressionStatement","src":"6916:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6947:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6950:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6940:6:40"},"nodeType":"YulFunctionCall","src":"6940:15:40"},"nodeType":"YulExpressionStatement","src":"6940:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6781:180:40"},{"body":{"nodeType":"YulBlock","src":"7018:51:40","statements":[{"nodeType":"YulAssignment","src":"7028:34:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7053:1:40","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"7056:5:40"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7049:3:40"},"nodeType":"YulFunctionCall","src":"7049:13:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7028:8:40"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6999:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7009:8:40","type":""}],"src":"6967:102:40"},{"body":{"nodeType":"YulBlock","src":"7148:775:40","statements":[{"nodeType":"YulAssignment","src":"7158:15:40","value":{"name":"_power","nodeType":"YulIdentifier","src":"7167:6:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7158:5:40"}]},{"nodeType":"YulAssignment","src":"7182:14:40","value":{"name":"_base","nodeType":"YulIdentifier","src":"7191:5:40"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"7182:4:40"}]},{"body":{"nodeType":"YulBlock","src":"7240:677:40","statements":[{"body":{"nodeType":"YulBlock","src":"7328:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7330:16:40"},"nodeType":"YulFunctionCall","src":"7330:18:40"},"nodeType":"YulExpressionStatement","src":"7330:18:40"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7306:4:40"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7316:3:40"},{"name":"base","nodeType":"YulIdentifier","src":"7321:4:40"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7312:3:40"},"nodeType":"YulFunctionCall","src":"7312:14:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7303:2:40"},"nodeType":"YulFunctionCall","src":"7303:24:40"},"nodeType":"YulIf","src":"7300:50:40"},{"body":{"nodeType":"YulBlock","src":"7395:419:40","statements":[{"nodeType":"YulAssignment","src":"7775:25:40","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7788:5:40"},{"name":"base","nodeType":"YulIdentifier","src":"7795:4:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7784:3:40"},"nodeType":"YulFunctionCall","src":"7784:16:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7775:5:40"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7370:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"7380:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7366:3:40"},"nodeType":"YulFunctionCall","src":"7366:16:40"},"nodeType":"YulIf","src":"7363:451:40"},{"nodeType":"YulAssignment","src":"7827:23:40","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7839:4:40"},{"name":"base","nodeType":"YulIdentifier","src":"7845:4:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7835:3:40"},"nodeType":"YulFunctionCall","src":"7835:15:40"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"7827:4:40"}]},{"nodeType":"YulAssignment","src":"7863:44:40","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7898:8:40"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"7875:22:40"},"nodeType":"YulFunctionCall","src":"7875:32:40"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"7863:8:40"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7216:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"7226:1:40","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7213:2:40"},"nodeType":"YulFunctionCall","src":"7213:15:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7229:2:40","statements":[]},"pre":{"nodeType":"YulBlock","src":"7209:3:40","statements":[]},"src":"7205:712:40"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"7103:6:40","type":""},{"name":"_base","nodeType":"YulTypedName","src":"7111:5:40","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7118:8:40","type":""},{"name":"max","nodeType":"YulTypedName","src":"7128:3:40","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7136:5:40","type":""},{"name":"base","nodeType":"YulTypedName","src":"7143:4:40","type":""}],"src":"7075:848:40"},{"body":{"nodeType":"YulBlock","src":"7989:1013:40","statements":[{"body":{"nodeType":"YulBlock","src":"8184:20:40","statements":[{"nodeType":"YulAssignment","src":"8186:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8195:1:40","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8186:5:40"}]},{"nodeType":"YulLeave","src":"8197:5:40"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8174:8:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8167:6:40"},"nodeType":"YulFunctionCall","src":"8167:16:40"},"nodeType":"YulIf","src":"8164:40:40"},{"body":{"nodeType":"YulBlock","src":"8229:20:40","statements":[{"nodeType":"YulAssignment","src":"8231:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8240:1:40","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8231:5:40"}]},{"nodeType":"YulLeave","src":"8242:5:40"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8223:4:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8216:6:40"},"nodeType":"YulFunctionCall","src":"8216:12:40"},"nodeType":"YulIf","src":"8213:36:40"},{"cases":[{"body":{"nodeType":"YulBlock","src":"8359:20:40","statements":[{"nodeType":"YulAssignment","src":"8361:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:40","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8361:5:40"}]},{"nodeType":"YulLeave","src":"8372:5:40"}]},"nodeType":"YulCase","src":"8352:27:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8357:1:40","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8403:176:40","statements":[{"body":{"nodeType":"YulBlock","src":"8438:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8440:16:40"},"nodeType":"YulFunctionCall","src":"8440:18:40"},"nodeType":"YulExpressionStatement","src":"8440:18:40"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8423:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"8433:3:40","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8420:2:40"},"nodeType":"YulFunctionCall","src":"8420:17:40"},"nodeType":"YulIf","src":"8417:43:40"},{"nodeType":"YulAssignment","src":"8473:25:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8486:1:40","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"8489:8:40"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8482:3:40"},"nodeType":"YulFunctionCall","src":"8482:16:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8473:5:40"}]},{"body":{"nodeType":"YulBlock","src":"8529:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8531:16:40"},"nodeType":"YulFunctionCall","src":"8531:18:40"},"nodeType":"YulExpressionStatement","src":"8531:18:40"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8517:5:40"},{"name":"max","nodeType":"YulIdentifier","src":"8524:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8514:2:40"},"nodeType":"YulFunctionCall","src":"8514:14:40"},"nodeType":"YulIf","src":"8511:40:40"},{"nodeType":"YulLeave","src":"8564:5:40"}]},"nodeType":"YulCase","src":"8388:191:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8393:1:40","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"8309:4:40"},"nodeType":"YulSwitch","src":"8302:277:40"},{"body":{"nodeType":"YulBlock","src":"8711:123:40","statements":[{"nodeType":"YulAssignment","src":"8725:28:40","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8738:4:40"},{"name":"exponent","nodeType":"YulIdentifier","src":"8744:8:40"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8734:3:40"},"nodeType":"YulFunctionCall","src":"8734:19:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8725:5:40"}]},{"body":{"nodeType":"YulBlock","src":"8784:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8786:16:40"},"nodeType":"YulFunctionCall","src":"8786:18:40"},"nodeType":"YulExpressionStatement","src":"8786:18:40"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8772:5:40"},{"name":"max","nodeType":"YulIdentifier","src":"8779:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8769:2:40"},"nodeType":"YulFunctionCall","src":"8769:14:40"},"nodeType":"YulIf","src":"8766:40:40"},{"nodeType":"YulLeave","src":"8819:5:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8614:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"8620:2:40","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8611:2:40"},"nodeType":"YulFunctionCall","src":"8611:12:40"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8628:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"8638:2:40","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8625:2:40"},"nodeType":"YulFunctionCall","src":"8625:16:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8607:3:40"},"nodeType":"YulFunctionCall","src":"8607:35:40"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8663:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"8669:3:40","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8660:2:40"},"nodeType":"YulFunctionCall","src":"8660:13:40"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8678:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"8688:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8675:2:40"},"nodeType":"YulFunctionCall","src":"8675:16:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8656:3:40"},"nodeType":"YulFunctionCall","src":"8656:36:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8591:2:40"},"nodeType":"YulFunctionCall","src":"8591:111:40"},"nodeType":"YulIf","src":"8588:246:40"},{"nodeType":"YulAssignment","src":"8844:57:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8878:1:40","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"8881:4:40"},{"name":"exponent","nodeType":"YulIdentifier","src":"8887:8:40"},{"name":"max","nodeType":"YulIdentifier","src":"8897:3:40"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"8859:18:40"},"nodeType":"YulFunctionCall","src":"8859:42:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8844:5:40"},{"name":"base","nodeType":"YulIdentifier","src":"8851:4:40"}]},{"body":{"nodeType":"YulBlock","src":"8940:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8942:16:40"},"nodeType":"YulFunctionCall","src":"8942:18:40"},"nodeType":"YulExpressionStatement","src":"8942:18:40"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8917:5:40"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"8928:3:40"},{"name":"base","nodeType":"YulIdentifier","src":"8933:4:40"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8924:3:40"},"nodeType":"YulFunctionCall","src":"8924:14:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8914:2:40"},"nodeType":"YulFunctionCall","src":"8914:25:40"},"nodeType":"YulIf","src":"8911:51:40"},{"nodeType":"YulAssignment","src":"8971:25:40","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8984:5:40"},{"name":"base","nodeType":"YulIdentifier","src":"8991:4:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8980:3:40"},"nodeType":"YulFunctionCall","src":"8980:16:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8971:5:40"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"7959:4:40","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7965:8:40","type":""},{"name":"max","nodeType":"YulTypedName","src":"7975:3:40","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7983:5:40","type":""}],"src":"7929:1073:40"},{"body":{"nodeType":"YulBlock","src":"9051:43:40","statements":[{"nodeType":"YulAssignment","src":"9061:27:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9076:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"9083:4:40","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9072:3:40"},"nodeType":"YulFunctionCall","src":"9072:16:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9061:7:40"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9033:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9043:7:40","type":""}],"src":"9008:86:40"},{"body":{"nodeType":"YulBlock","src":"9164:217:40","statements":[{"nodeType":"YulAssignment","src":"9174:31:40","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9200:4:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9182:17:40"},"nodeType":"YulFunctionCall","src":"9182:23:40"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9174:4:40"}]},{"nodeType":"YulAssignment","src":"9214:37:40","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9242:8:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9226:15:40"},"nodeType":"YulFunctionCall","src":"9226:25:40"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"9214:8:40"}]},{"nodeType":"YulAssignment","src":"9261:113:40","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9291:4:40"},{"name":"exponent","nodeType":"YulIdentifier","src":"9297:8:40"},{"kind":"number","nodeType":"YulLiteral","src":"9307:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"9270:20:40"},"nodeType":"YulFunctionCall","src":"9270:104:40"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9261:5:40"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"9139:4:40","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9145:8:40","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9158:5:40","type":""}],"src":"9100:281:40"},{"body":{"nodeType":"YulBlock","src":"9435:362:40","statements":[{"nodeType":"YulAssignment","src":"9445:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9468:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9450:17:40"},"nodeType":"YulFunctionCall","src":"9450:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9445:1:40"}]},{"nodeType":"YulAssignment","src":"9479:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9502:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9484:17:40"},"nodeType":"YulFunctionCall","src":"9484:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9479:1:40"}]},{"nodeType":"YulVariableDeclaration","src":"9513:28:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9536:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"9539:1:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9532:3:40"},"nodeType":"YulFunctionCall","src":"9532:9:40"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"9517:11:40","type":""}]},{"nodeType":"YulAssignment","src":"9550:41:40","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"9579:11:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9561:17:40"},"nodeType":"YulFunctionCall","src":"9561:30:40"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9550:7:40"}]},{"body":{"nodeType":"YulBlock","src":"9768:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9770:16:40"},"nodeType":"YulFunctionCall","src":"9770:18:40"},"nodeType":"YulExpressionStatement","src":"9770:18:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9701:1:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9694:6:40"},"nodeType":"YulFunctionCall","src":"9694:9:40"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9724:1:40"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"9731:7:40"},{"name":"x","nodeType":"YulIdentifier","src":"9740:1:40"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9727:3:40"},"nodeType":"YulFunctionCall","src":"9727:15:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9721:2:40"},"nodeType":"YulFunctionCall","src":"9721:22:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9674:2:40"},"nodeType":"YulFunctionCall","src":"9674:83:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9654:6:40"},"nodeType":"YulFunctionCall","src":"9654:113:40"},"nodeType":"YulIf","src":"9651:139:40"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9418:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"9421:1:40","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9427:7:40","type":""}],"src":"9387:410:40"},{"body":{"nodeType":"YulBlock","src":"9848:32:40","statements":[{"nodeType":"YulAssignment","src":"9858:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"9869:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9858:7:40"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9830:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9840:7:40","type":""}],"src":"9803:77:40"},{"body":{"nodeType":"YulBlock","src":"9951:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9968:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9991:5:40"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9973:17:40"},"nodeType":"YulFunctionCall","src":"9973:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9961:6:40"},"nodeType":"YulFunctionCall","src":"9961:37:40"},"nodeType":"YulExpressionStatement","src":"9961:37:40"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9939:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9946:3:40","type":""}],"src":"9886:118:40"},{"body":{"nodeType":"YulBlock","src":"10075:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10092:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10115:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10097:17:40"},"nodeType":"YulFunctionCall","src":"10097:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10085:6:40"},"nodeType":"YulFunctionCall","src":"10085:37:40"},"nodeType":"YulExpressionStatement","src":"10085:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10063:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10070:3:40","type":""}],"src":"10010:118:40"},{"body":{"nodeType":"YulBlock","src":"10344:454:40","statements":[{"nodeType":"YulAssignment","src":"10354:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10366:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10377:3:40","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10362:3:40"},"nodeType":"YulFunctionCall","src":"10362:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10354:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10435:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10448:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10459:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:40"},"nodeType":"YulFunctionCall","src":"10444:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10391:43:40"},"nodeType":"YulFunctionCall","src":"10391:71:40"},"nodeType":"YulExpressionStatement","src":"10391:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10516:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10529:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10540:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:40"},"nodeType":"YulFunctionCall","src":"10525:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10472:43:40"},"nodeType":"YulFunctionCall","src":"10472:72:40"},"nodeType":"YulExpressionStatement","src":"10472:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10598:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10611:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10622:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10607:3:40"},"nodeType":"YulFunctionCall","src":"10607:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10554:43:40"},"nodeType":"YulFunctionCall","src":"10554:72:40"},"nodeType":"YulExpressionStatement","src":"10554:72:40"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10680:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10693:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10704:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10689:3:40"},"nodeType":"YulFunctionCall","src":"10689:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10636:43:40"},"nodeType":"YulFunctionCall","src":"10636:72:40"},"nodeType":"YulExpressionStatement","src":"10636:72:40"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10762:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10775:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10786:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10771:3:40"},"nodeType":"YulFunctionCall","src":"10771:19:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10718:43:40"},"nodeType":"YulFunctionCall","src":"10718:73:40"},"nodeType":"YulExpressionStatement","src":"10718:73:40"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10284:9:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10296:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10304:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10312:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10320:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10328:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10339:4:40","type":""}],"src":"10134:664:40"},{"body":{"nodeType":"YulBlock","src":"10900:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10917:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"10922:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10910:6:40"},"nodeType":"YulFunctionCall","src":"10910:19:40"},"nodeType":"YulExpressionStatement","src":"10910:19:40"},{"nodeType":"YulAssignment","src":"10938:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10957:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"10962:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10953:3:40"},"nodeType":"YulFunctionCall","src":"10953:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10938:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10872:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"10877:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10888:11:40","type":""}],"src":"10804:169:40"},{"body":{"nodeType":"YulBlock","src":"11041:184:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11051:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11060:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11055:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"11120:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11145:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"11150:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11141:3:40"},"nodeType":"YulFunctionCall","src":"11141:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11164:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"11169:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11160:3:40"},"nodeType":"YulFunctionCall","src":"11160:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11154:5:40"},"nodeType":"YulFunctionCall","src":"11154:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11134:6:40"},"nodeType":"YulFunctionCall","src":"11134:39:40"},"nodeType":"YulExpressionStatement","src":"11134:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11081:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"11084:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11078:2:40"},"nodeType":"YulFunctionCall","src":"11078:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11092:19:40","statements":[{"nodeType":"YulAssignment","src":"11094:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11103:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"11106:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11099:3:40"},"nodeType":"YulFunctionCall","src":"11099:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11094:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"11074:3:40","statements":[]},"src":"11070:113:40"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11203:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"11208:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11199:3:40"},"nodeType":"YulFunctionCall","src":"11199:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"11217:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11192:6:40"},"nodeType":"YulFunctionCall","src":"11192:27:40"},"nodeType":"YulExpressionStatement","src":"11192:27:40"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11023:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11028:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"11033:6:40","type":""}],"src":"10979:246:40"},{"body":{"nodeType":"YulBlock","src":"11279:54:40","statements":[{"nodeType":"YulAssignment","src":"11289:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11307:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"11314:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11303:3:40"},"nodeType":"YulFunctionCall","src":"11303:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11323:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11319:3:40"},"nodeType":"YulFunctionCall","src":"11319:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11299:3:40"},"nodeType":"YulFunctionCall","src":"11299:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11289:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11262:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11272:6:40","type":""}],"src":"11231:102:40"},{"body":{"nodeType":"YulBlock","src":"11431:285:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11441:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11488:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11455:32:40"},"nodeType":"YulFunctionCall","src":"11455:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11445:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11503:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11569:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"11574:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11510:58:40"},"nodeType":"YulFunctionCall","src":"11510:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11503:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11629:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"11636:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:40"},"nodeType":"YulFunctionCall","src":"11625:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"11643:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"11648:6:40"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11590:34:40"},"nodeType":"YulFunctionCall","src":"11590:65:40"},"nodeType":"YulExpressionStatement","src":"11590:65:40"},{"nodeType":"YulAssignment","src":"11664:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11675:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11702:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11680:21:40"},"nodeType":"YulFunctionCall","src":"11680:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11671:3:40"},"nodeType":"YulFunctionCall","src":"11671:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11664:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11412:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11419:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11427:3:40","type":""}],"src":"11339:377:40"},{"body":{"nodeType":"YulBlock","src":"11840:195:40","statements":[{"nodeType":"YulAssignment","src":"11850:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11862:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"11873:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11858:3:40"},"nodeType":"YulFunctionCall","src":"11858:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11850:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11897:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"11908:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11893:3:40"},"nodeType":"YulFunctionCall","src":"11893:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11916:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"11922:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11912:3:40"},"nodeType":"YulFunctionCall","src":"11912:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11886:6:40"},"nodeType":"YulFunctionCall","src":"11886:47:40"},"nodeType":"YulExpressionStatement","src":"11886:47:40"},{"nodeType":"YulAssignment","src":"11942:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12014:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"12023:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11950:63:40"},"nodeType":"YulFunctionCall","src":"11950:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11942:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11812:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11824:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11835:4:40","type":""}],"src":"11722:313:40"},{"body":{"nodeType":"YulBlock","src":"12099:40:40","statements":[{"nodeType":"YulAssignment","src":"12110:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12126:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12120:5:40"},"nodeType":"YulFunctionCall","src":"12120:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12110:6:40"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12082:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12092:6:40","type":""}],"src":"12041:98:40"},{"body":{"nodeType":"YulBlock","src":"12201:60:40","statements":[{"nodeType":"YulAssignment","src":"12211:11:40","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12219:3:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12211:4:40"}]},{"nodeType":"YulAssignment","src":"12232:22:40","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12244:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"12249:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12240:3:40"},"nodeType":"YulFunctionCall","src":"12240:14:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12232:4:40"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12188:3:40","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12196:4:40","type":""}],"src":"12145:116:40"},{"body":{"nodeType":"YulBlock","src":"12322:99:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12333:42:40","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12370:3:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12364:5:40"},"nodeType":"YulFunctionCall","src":"12364:10:40"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12346:17:40"},"nodeType":"YulFunctionCall","src":"12346:29:40"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12337:5:40","type":""}]},{"nodeType":"YulAssignment","src":"12385:29:40","value":{"name":"value","nodeType":"YulIdentifier","src":"12409:5:40"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"12385:11:40"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12302:3:40","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"12310:11:40","type":""}],"src":"12267:154:40"},{"body":{"nodeType":"YulBlock","src":"12517:504:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12528:52:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12574:5:40"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12542:31:40"},"nodeType":"YulFunctionCall","src":"12542:38:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12532:6:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12589:21:40","value":{"name":"array","nodeType":"YulIdentifier","src":"12605:5:40"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"12593:8:40","type":""}]},{"nodeType":"YulAssignment","src":"12620:52:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12666:5:40"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12632:33:40"},"nodeType":"YulFunctionCall","src":"12632:40:40"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12620:8:40"}]},{"nodeType":"YulAssignment","src":"12682:44:40","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12717:8:40"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"12691:25:40"},"nodeType":"YulFunctionCall","src":"12691:35:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12682:5:40"}]},{"body":{"nodeType":"YulBlock","src":"12754:260:40","statements":[{"nodeType":"YulAssignment","src":"12768:236:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12798:5:40"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12865:1:40","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12872:2:40","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"12876:6:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12868:3:40"},"nodeType":"YulFunctionCall","src":"12868:15:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12861:3:40"},"nodeType":"YulFunctionCall","src":"12861:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"12906:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12821:18:40"},"nodeType":"YulFunctionCall","src":"12821:169:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12777:3:40"},"nodeType":"YulFunctionCall","src":"12777:227:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12768:5:40"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12742:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12750:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12739:2:40"},"nodeType":"YulFunctionCall","src":"12739:14:40"},"nodeType":"YulIf","src":"12736:278:40"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12501:5:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12511:5:40","type":""}],"src":"12427:594:40"},{"body":{"nodeType":"YulBlock","src":"13153:206:40","statements":[{"nodeType":"YulAssignment","src":"13163:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13175:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13186:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13171:3:40"},"nodeType":"YulFunctionCall","src":"13171:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13163:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13243:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13256:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13267:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13252:3:40"},"nodeType":"YulFunctionCall","src":"13252:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13199:43:40"},"nodeType":"YulFunctionCall","src":"13199:71:40"},"nodeType":"YulExpressionStatement","src":"13199:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13324:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13337:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13348:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13333:3:40"},"nodeType":"YulFunctionCall","src":"13333:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13280:43:40"},"nodeType":"YulFunctionCall","src":"13280:72:40"},"nodeType":"YulExpressionStatement","src":"13280:72:40"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13117:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13129:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13137:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13148:4:40","type":""}],"src":"13027:332:40"},{"body":{"nodeType":"YulBlock","src":"13409:147:40","statements":[{"nodeType":"YulAssignment","src":"13419:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13442:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13424:17:40"},"nodeType":"YulFunctionCall","src":"13424:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13419:1:40"}]},{"nodeType":"YulAssignment","src":"13453:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13476:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13458:17:40"},"nodeType":"YulFunctionCall","src":"13458:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13453:1:40"}]},{"nodeType":"YulAssignment","src":"13487:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13498:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"13501:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13494:3:40"},"nodeType":"YulFunctionCall","src":"13494:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13487:3:40"}]},{"body":{"nodeType":"YulBlock","src":"13527:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13529:16:40"},"nodeType":"YulFunctionCall","src":"13529:18:40"},"nodeType":"YulExpressionStatement","src":"13529:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13519:1:40"},{"name":"sum","nodeType":"YulIdentifier","src":"13522:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13516:2:40"},"nodeType":"YulFunctionCall","src":"13516:10:40"},"nodeType":"YulIf","src":"13513:36:40"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13396:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"13399:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13405:3:40","type":""}],"src":"13365:191:40"},{"body":{"nodeType":"YulBlock","src":"13716:288:40","statements":[{"nodeType":"YulAssignment","src":"13726:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13738:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13749:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13734:3:40"},"nodeType":"YulFunctionCall","src":"13734:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13726:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13806:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13819:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13830:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13815:3:40"},"nodeType":"YulFunctionCall","src":"13815:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13762:43:40"},"nodeType":"YulFunctionCall","src":"13762:71:40"},"nodeType":"YulExpressionStatement","src":"13762:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13887:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13900:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13911:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13896:3:40"},"nodeType":"YulFunctionCall","src":"13896:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13843:43:40"},"nodeType":"YulFunctionCall","src":"13843:72:40"},"nodeType":"YulExpressionStatement","src":"13843:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13969:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13982:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13993:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13978:3:40"},"nodeType":"YulFunctionCall","src":"13978:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13925:43:40"},"nodeType":"YulFunctionCall","src":"13925:72:40"},"nodeType":"YulExpressionStatement","src":"13925:72:40"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13672:9:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13684:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13692:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13700:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13711:4:40","type":""}],"src":"13562:442:40"},{"body":{"nodeType":"YulBlock","src":"14108:124:40","statements":[{"nodeType":"YulAssignment","src":"14118:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14130:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14141:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14126:3:40"},"nodeType":"YulFunctionCall","src":"14126:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14118:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14198:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14211:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14222:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14207:3:40"},"nodeType":"YulFunctionCall","src":"14207:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14154:43:40"},"nodeType":"YulFunctionCall","src":"14154:71:40"},"nodeType":"YulExpressionStatement","src":"14154:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14080:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14092:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14103:4:40","type":""}],"src":"14010:222:40"},{"body":{"nodeType":"YulBlock","src":"14283:93:40","statements":[{"nodeType":"YulAssignment","src":"14293:77:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14308:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"14315:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14304:3:40"},"nodeType":"YulFunctionCall","src":"14304:66:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14293:7:40"}]}]},"name":"cleanup_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14265:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14275:7:40","type":""}],"src":"14238:138:40"},{"body":{"nodeType":"YulBlock","src":"14426:200:40","statements":[{"nodeType":"YulAssignment","src":"14436:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14459:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"14441:17:40"},"nodeType":"YulFunctionCall","src":"14441:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14436:1:40"}]},{"nodeType":"YulAssignment","src":"14470:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14493:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"14475:17:40"},"nodeType":"YulFunctionCall","src":"14475:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14470:1:40"}]},{"nodeType":"YulAssignment","src":"14504:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14515:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"14518:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14511:3:40"},"nodeType":"YulFunctionCall","src":"14511:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14504:3:40"}]},{"body":{"nodeType":"YulBlock","src":"14597:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14599:16:40"},"nodeType":"YulFunctionCall","src":"14599:18:40"},"nodeType":"YulExpressionStatement","src":"14599:18:40"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"14536:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"14541:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14533:2:40"},"nodeType":"YulFunctionCall","src":"14533:63:40"},"nodeType":"YulIf","src":"14530:89:40"}]},"name":"checked_add_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14413:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"14416:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14422:3:40","type":""}],"src":"14382:244:40"},{"body":{"nodeType":"YulBlock","src":"14687:32:40","statements":[{"nodeType":"YulAssignment","src":"14697:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"14708:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14697:7:40"}]}]},"name":"cleanup_t_rational_208_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14669:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14679:7:40","type":""}],"src":"14632:87:40"},{"body":{"nodeType":"YulBlock","src":"14793:90:40","statements":[{"nodeType":"YulAssignment","src":"14803:74:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14869:5:40"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nodeType":"YulIdentifier","src":"14841:27:40"},"nodeType":"YulFunctionCall","src":"14841:34:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"14832:8:40"},"nodeType":"YulFunctionCall","src":"14832:44:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"14816:15:40"},"nodeType":"YulFunctionCall","src":"14816:61:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"14803:9:40"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14773:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"14783:9:40","type":""}],"src":"14725:158:40"},{"body":{"nodeType":"YulBlock","src":"14962:74:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14979:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15023:5:40"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"14984:38:40"},"nodeType":"YulFunctionCall","src":"14984:45:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14972:6:40"},"nodeType":"YulFunctionCall","src":"14972:58:40"},"nodeType":"YulExpressionStatement","src":"14972:58:40"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14950:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14957:3:40","type":""}],"src":"14889:147:40"},{"body":{"nodeType":"YulBlock","src":"15176:214:40","statements":[{"nodeType":"YulAssignment","src":"15186:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15198:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"15209:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15194:3:40"},"nodeType":"YulFunctionCall","src":"15194:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15186:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15274:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15287:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"15298:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15283:3:40"},"nodeType":"YulFunctionCall","src":"15283:17:40"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"15222:51:40"},"nodeType":"YulFunctionCall","src":"15222:79:40"},"nodeType":"YulExpressionStatement","src":"15222:79:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15355:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15368:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"15379:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15364:3:40"},"nodeType":"YulFunctionCall","src":"15364:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15311:43:40"},"nodeType":"YulFunctionCall","src":"15311:72:40"},"nodeType":"YulExpressionStatement","src":"15311:72:40"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15140:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15152:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15160:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15171:4:40","type":""}],"src":"15042:348:40"},{"body":{"nodeType":"YulBlock","src":"15441:202:40","statements":[{"nodeType":"YulAssignment","src":"15451:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15474:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"15456:17:40"},"nodeType":"YulFunctionCall","src":"15456:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15451:1:40"}]},{"nodeType":"YulAssignment","src":"15485:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15508:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"15490:17:40"},"nodeType":"YulFunctionCall","src":"15490:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15485:1:40"}]},{"nodeType":"YulAssignment","src":"15519:17:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15531:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"15534:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15527:3:40"},"nodeType":"YulFunctionCall","src":"15527:9:40"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15519:4:40"}]},{"body":{"nodeType":"YulBlock","src":"15614:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15616:16:40"},"nodeType":"YulFunctionCall","src":"15616:18:40"},"nodeType":"YulExpressionStatement","src":"15616:18:40"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15552:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"15558:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15549:2:40"},"nodeType":"YulFunctionCall","src":"15549:64:40"},"nodeType":"YulIf","src":"15546:90:40"}]},"name":"checked_sub_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15427:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"15430:1:40","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15436:4:40","type":""}],"src":"15396:247:40"},{"body":{"nodeType":"YulBlock","src":"15694:149:40","statements":[{"nodeType":"YulAssignment","src":"15704:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15727:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15709:17:40"},"nodeType":"YulFunctionCall","src":"15709:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15704:1:40"}]},{"nodeType":"YulAssignment","src":"15738:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15761:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15743:17:40"},"nodeType":"YulFunctionCall","src":"15743:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15738:1:40"}]},{"nodeType":"YulAssignment","src":"15772:17:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15784:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"15787:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15780:3:40"},"nodeType":"YulFunctionCall","src":"15780:9:40"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15772:4:40"}]},{"body":{"nodeType":"YulBlock","src":"15814:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15816:16:40"},"nodeType":"YulFunctionCall","src":"15816:18:40"},"nodeType":"YulExpressionStatement","src":"15816:18:40"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15805:4:40"},{"name":"x","nodeType":"YulIdentifier","src":"15811:1:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15802:2:40"},"nodeType":"YulFunctionCall","src":"15802:11:40"},"nodeType":"YulIf","src":"15799:37:40"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15680:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"15683:1:40","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15689:4:40","type":""}],"src":"15649:194:40"},{"body":{"nodeType":"YulBlock","src":"15903:32:40","statements":[{"nodeType":"YulAssignment","src":"15913:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"15924:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15913:7:40"}]}]},"name":"cleanup_t_rational_48_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15885:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15895:7:40","type":""}],"src":"15849:86:40"},{"body":{"nodeType":"YulBlock","src":"16008:89:40","statements":[{"nodeType":"YulAssignment","src":"16018:73:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16083:5:40"}],"functionName":{"name":"cleanup_t_rational_48_by_1","nodeType":"YulIdentifier","src":"16056:26:40"},"nodeType":"YulFunctionCall","src":"16056:33:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16047:8:40"},"nodeType":"YulFunctionCall","src":"16047:43:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"16031:15:40"},"nodeType":"YulFunctionCall","src":"16031:60:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16018:9:40"}]}]},"name":"convert_t_rational_48_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15988:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15998:9:40","type":""}],"src":"15941:156:40"},{"body":{"nodeType":"YulBlock","src":"16175:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16192:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16235:5:40"}],"functionName":{"name":"convert_t_rational_48_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"16197:37:40"},"nodeType":"YulFunctionCall","src":"16197:44:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16185:6:40"},"nodeType":"YulFunctionCall","src":"16185:57:40"},"nodeType":"YulExpressionStatement","src":"16185:57:40"}]},"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16163:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16170:3:40","type":""}],"src":"16103:145:40"},{"body":{"nodeType":"YulBlock","src":"16387:213:40","statements":[{"nodeType":"YulAssignment","src":"16397:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16409:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16420:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16405:3:40"},"nodeType":"YulFunctionCall","src":"16405:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16397:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16484:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16497:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16508:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16493:3:40"},"nodeType":"YulFunctionCall","src":"16493:17:40"}],"functionName":{"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"16433:50:40"},"nodeType":"YulFunctionCall","src":"16433:78:40"},"nodeType":"YulExpressionStatement","src":"16433:78:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16565:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16578:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16589:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16574:3:40"},"nodeType":"YulFunctionCall","src":"16574:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16521:43:40"},"nodeType":"YulFunctionCall","src":"16521:72:40"},"nodeType":"YulExpressionStatement","src":"16521:72:40"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16351:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16363:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16371:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16382:4:40","type":""}],"src":"16254:346:40"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_48_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_48_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_48_by_1(value)))\n    }\n\n    function abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_48_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5C1A CODESIZE SUB DUP1 PUSH3 0x5C1A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C796D61746841786F6E7300000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C796D61746841786F6E7300000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504C59584E530000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0x1629 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x135 SWAP2 SWAP1 PUSH3 0x1629 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BF SWAP2 SWAP1 PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D9 DUP2 PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1F0 PUSH1 0x6 DUP4 PUSH3 0x396 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x20E PUSH1 0x7 DUP3 PUSH3 0x396 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x24D PUSH3 0x3EE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2C9 CALLER PUSH3 0x2A0 PUSH3 0x44B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x2AE SWAP2 SWAP1 PUSH3 0x18CE JUMP JUMPDEST PUSH2 0x3E8 PUSH3 0x2BD SWAP2 SWAP1 PUSH3 0x191F JUMP JUMPDEST PUSH3 0x454 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1DF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x3BC JUMPI PUSH3 0x3B4 DUP4 PUSH3 0x4E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3E8 JUMP JUMPDEST DUP3 PUSH3 0x3CE DUP4 PUSH3 0x54E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3DF SWAP2 SWAP1 PUSH3 0x1629 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x430 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4C9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4C0 SWAP2 SWAP1 PUSH3 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4DD PUSH1 0x0 DUP4 DUP4 PUSH3 0x558 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x531 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x528 SWAP2 SWAP1 PUSH3 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x53F SWAP1 PUSH3 0x1AD8 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x56B DUP4 DUP4 DUP4 PUSH3 0x570 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x583 DUP4 DUP4 DUP4 PUSH3 0x645 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x62D JUMPI PUSH1 0x0 PUSH3 0x5CA PUSH3 0x66D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x5DE PUSH3 0x677 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x62A JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x621 SWAP3 SWAP2 SWAP1 PUSH3 0x1B48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH3 0x640 DUP4 DUP4 DUP4 PUSH3 0x69B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x655 PUSH3 0x7A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x668 DUP4 DUP4 DUP4 PUSH3 0x7EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x702 JUMPI PUSH3 0x6FF PUSH1 0xB PUSH3 0xA1B PUSH1 0x20 SHL PUSH3 0xF96 OR PUSH3 0x6F3 DUP5 PUSH3 0xA33 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x769 JUMPI PUSH3 0x766 PUSH1 0xB PUSH3 0xAF4 PUSH1 0x20 SHL PUSH3 0xFAC OR PUSH3 0x75A DUP5 PUSH3 0xA33 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH3 0x79C PUSH3 0x77E DUP5 PUSH3 0xB0C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x78F DUP5 PUSH3 0xB0C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xB75 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x7B1 PUSH3 0xE28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x841 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x834 SWAP2 SWAP1 PUSH3 0x1B75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x917 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x8D0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xA0E SWAP2 SWAP1 PUSH3 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xA2B SWAP2 SWAP1 PUSH3 0x1C30 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA9C JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA93 SWAP3 SWAP2 SWAP1 PUSH3 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xAE8 PUSH3 0xABB PUSH3 0xE3F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAD7 PUSH3 0xAD0 DUP9 PUSH3 0xE56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST DUP8 PUSH3 0xECA PUSH1 0x20 SHL SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xB04 SWAP2 SWAP1 PUSH3 0x1CF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xBB2 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xE23 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCED JUMPI PUSH1 0x0 DUP1 PUSH3 0xC5C PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xAF4 PUSH1 0x20 SHL PUSH3 0xFAC OR PUSH3 0xC50 DUP7 PUSH3 0xA33 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xCE2 SWAP3 SWAP2 SWAP1 PUSH3 0x1B48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xE22 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD91 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xA1B PUSH1 0x20 SHL PUSH3 0xF96 OR PUSH3 0xD85 DUP7 PUSH3 0xA33 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xE17 SWAP3 SWAP2 SWAP1 PUSH3 0x1B48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE51 PUSH3 0xEEF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH3 0xEBF JUMPI PUSH3 0xE8F DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH3 0xE83 SWAP2 SWAP1 PUSH3 0x1D4A JUMP JUMPDEST PUSH3 0xF07 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xEC2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xEE3 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH3 0xF1C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF02 NUMBER PUSH3 0x12B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x11C6 JUMPI PUSH1 0x0 PUSH3 0xF54 DUP8 PUSH1 0x1 DUP5 PUSH3 0xF48 SWAP2 SWAP1 PUSH3 0x1D4A JUMP JUMPDEST PUSH3 0xF07 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH3 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH3 0x10D4 JUMPI DUP5 PUSH3 0x1081 DUP9 PUSH1 0x1 DUP6 PUSH3 0x1075 SWAP2 SWAP1 PUSH3 0x1D4A JUMP JUMPDEST PUSH3 0xF07 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x11B4 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH3 0x12AE JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x130B JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1302 SWAP3 SWAP2 SWAP1 PUSH3 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1345 DUP3 PUSH3 0x1318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1357 DUP2 PUSH3 0x1338 JUMP JUMPDEST DUP2 EQ PUSH3 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1377 DUP2 PUSH3 0x134C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1396 JUMPI PUSH3 0x1395 PUSH3 0x1313 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x13A6 DUP5 DUP3 DUP6 ADD PUSH3 0x1366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1431 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1447 JUMPI PUSH3 0x1446 PUSH3 0x13E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x14B1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1472 JUMP JUMPDEST PUSH3 0x14BD DUP7 DUP4 PUSH3 0x1472 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x150A PUSH3 0x1504 PUSH3 0x14FE DUP5 PUSH3 0x14D5 JUMP JUMPDEST PUSH3 0x14DF JUMP JUMPDEST PUSH3 0x14D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1526 DUP4 PUSH3 0x14E9 JUMP JUMPDEST PUSH3 0x153E PUSH3 0x1535 DUP3 PUSH3 0x1511 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x147F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1555 PUSH3 0x1546 JUMP JUMPDEST PUSH3 0x1562 DUP2 DUP5 DUP5 PUSH3 0x151B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x158A JUMPI PUSH3 0x157E PUSH1 0x0 DUP3 PUSH3 0x154B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1568 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x15D9 JUMPI PUSH3 0x15A3 DUP2 PUSH3 0x144D JUMP JUMPDEST PUSH3 0x15AE DUP5 PUSH3 0x1462 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x15BE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x15D6 PUSH3 0x15CD DUP6 PUSH3 0x1462 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1567 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x15DE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1619 DUP4 DUP4 PUSH3 0x15EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1634 DUP3 PUSH3 0x13AF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1650 JUMPI PUSH3 0x164F PUSH3 0x13BA JUMP JUMPDEST JUMPDEST PUSH3 0x165C DUP3 SLOAD PUSH3 0x1418 JUMP JUMPDEST PUSH3 0x1669 DUP3 DUP3 DUP6 PUSH3 0x158E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x16A1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x168C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1698 DUP6 DUP3 PUSH3 0x160B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1708 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x16B1 DUP7 PUSH3 0x144D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x16DB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16B4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x16FB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x16F7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x15EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x171B DUP2 PUSH3 0x1338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1738 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1710 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x17CC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x17A4 JUMPI PUSH3 0x17A3 PUSH3 0x173E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x17B4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x17C4 DUP6 PUSH3 0x176D JUMP JUMPDEST SWAP5 POP PUSH3 0x1784 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x17E7 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x18BA JUMP JUMPDEST DUP2 PUSH3 0x17F7 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x18BA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x1810 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x181B JUMPI PUSH3 0x1851 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x18BA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x1830 JUMPI PUSH3 0x182F PUSH3 0x173E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x184A JUMPI PUSH3 0x1849 PUSH3 0x173E JUMP JUMPDEST JUMPDEST POP PUSH3 0x18BA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x188B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x1885 JUMPI PUSH3 0x1884 PUSH3 0x173E JUMP JUMPDEST JUMPDEST PUSH3 0x18BA JUMP JUMPDEST PUSH3 0x189A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x177A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x18B4 JUMPI PUSH3 0x18B3 PUSH3 0x173E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18DB DUP3 PUSH3 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH3 0x18E8 DUP4 PUSH3 0x18C1 JUMP JUMPDEST SWAP3 POP PUSH3 0x1917 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x17D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x192C DUP3 PUSH3 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH3 0x1939 DUP4 PUSH3 0x14D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x1949 DUP2 PUSH3 0x14D5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x1963 JUMPI PUSH3 0x1962 PUSH3 0x173E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x197F DUP2 PUSH3 0x196A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1990 DUP2 PUSH3 0x14D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x19AD PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x1974 JUMP JUMPDEST PUSH3 0x19BC PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1974 JUMP JUMPDEST PUSH3 0x19CB PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1974 JUMP JUMPDEST PUSH3 0x19DA PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x1985 JUMP JUMPDEST PUSH3 0x19E9 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x1710 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1A24 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1A07 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A4E DUP3 PUSH3 0x13AF JUMP JUMPDEST PUSH3 0x1A5A DUP2 DUP6 PUSH3 0x19F3 JUMP JUMPDEST SWAP4 POP PUSH3 0x1A6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1A04 JUMP JUMPDEST PUSH3 0x1A77 DUP2 PUSH3 0x1A30 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1A9E DUP2 DUP5 PUSH3 0x1A41 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1ACF DUP3 MLOAD PUSH3 0x196A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AE5 DUP3 PUSH3 0x1AA6 JUMP JUMPDEST DUP3 PUSH3 0x1AF1 DUP5 PUSH3 0x1AB1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1AFE DUP2 PUSH3 0x1AC1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1B41 JUMPI PUSH3 0x1B3C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x1472 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1B5F PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1985 JUMP JUMPDEST PUSH3 0x1B6E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1985 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B82 DUP3 PUSH3 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B8F DUP4 PUSH3 0x14D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1BAA JUMPI PUSH3 0x1BA9 PUSH3 0x173E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1BC7 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1710 JUMP JUMPDEST PUSH3 0x1BD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1985 JUMP JUMPDEST PUSH3 0x1BE5 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1985 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C04 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1985 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C3D DUP3 PUSH3 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH3 0x1C4A DUP4 PUSH3 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C7F JUMPI PUSH3 0x1C7E PUSH3 0x173E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CB0 PUSH3 0x1CAA PUSH3 0x1CA4 DUP5 PUSH3 0x1C85 JUMP JUMPDEST PUSH3 0x14DF JUMP JUMPDEST PUSH3 0x18C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CC2 DUP2 PUSH3 0x1C8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1CDF PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1CB7 JUMP JUMPDEST PUSH3 0x1CEE PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1985 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D02 DUP3 PUSH3 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH3 0x1D0F DUP4 PUSH3 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D44 JUMPI PUSH3 0x1D43 PUSH3 0x173E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D57 DUP3 PUSH3 0x14D5 JUMP JUMPDEST SWAP2 POP PUSH3 0x1D64 DUP4 PUSH3 0x14D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1D7F JUMPI PUSH3 0x1D7E PUSH3 0x173E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DB0 PUSH3 0x1DAA PUSH3 0x1DA4 DUP5 PUSH3 0x1D85 JUMP JUMPDEST PUSH3 0x14DF JUMP JUMPDEST PUSH3 0x18C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1DC2 DUP2 PUSH3 0x1D8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1DDF PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1DB7 JUMP JUMPDEST PUSH3 0x1DEE PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1985 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x3DCA PUSH3 0x1E50 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x17D6 ADD MSTORE PUSH1 0x0 PUSH2 0x179B ADD MSTORE PUSH1 0x0 PUSH2 0x1BF7 ADD MSTORE PUSH1 0x0 PUSH2 0x1BD6 ADD MSTORE PUSH1 0x0 PUSH2 0x1168 ADD MSTORE PUSH1 0x0 PUSH2 0x11BE ADD MSTORE PUSH1 0x0 PUSH2 0x11E7 ADD MSTORE PUSH2 0x3DCA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DF JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x547 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x4AB JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x42F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C5 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x32B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2B7 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x323E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x3272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x441 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x454 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x349B JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x355C JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x35E9 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x599 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x368B JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x37AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x636 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x683 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x658 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x683 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x666 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x698 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A5 DUP2 DUP6 DUP6 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C5 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D2 DUP6 DUP3 DUP6 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x6DD DUP6 DUP6 DUP6 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x1164 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70C PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x75C JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B5 PUSH2 0x768 DUP5 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1275 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x13F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x7FE DUP3 DUP3 PUSH2 0x1459 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80C PUSH2 0x14DB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x81C PUSH2 0xB31 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x909 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x915 DUP2 DUP4 PUSH2 0x14EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x992 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x99C PUSH1 0x0 PUSH2 0x1657 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP3 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x172F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x9D6 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x17CD JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x384E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA2D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA1 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xAF1 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP3 SWAP2 SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0D PUSH2 0xAFD DUP5 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xB PUSH2 0x1275 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3B PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7B SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1808 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC49 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0xC56 DUP2 DUP6 DUP6 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xCA6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH2 0xD00 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1870 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP PUSH2 0xD14 DUP2 DUP8 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0xD1E DUP2 DUP9 PUSH2 0x14EB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD6C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xD9B DUP13 PUSH2 0x1912 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDB1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xDD4 DUP3 PUSH2 0x1870 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDE4 DUP3 DUP8 DUP8 DUP8 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE58 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP3 SWAP2 SWAP1 PUSH2 0x3923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE63 DUP11 DUP11 DUP11 PUSH2 0xFCA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0xF08 DUP4 DUP4 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF93 DUP2 PUSH2 0x1657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFA4 SWAP2 SWAP1 PUSH2 0x397B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x39C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFD7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 DUP5 DUP5 PUSH2 0xE6F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x106A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x105A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1069 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115F DUP4 DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11E0 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x120D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1218 JUMP JUMPDEST PUSH2 0x1215 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x126D JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x3A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 PUSH2 0x129C DUP5 PUSH2 0x1C47 JUMP JUMPDEST DUP5 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP PUSH2 0x12B6 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x12EB JUMPI DUP1 SWAP2 POP PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x12F8 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x130E DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1360 JUMPI PUSH2 0x1331 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1377 PUSH2 0xFC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1395 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH2 0x13B8 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13FE PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1442 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 NUMBER PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15FA DUP2 DUP4 PUSH2 0x15F5 DUP7 PUSH2 0x1E0E JUMP JUMPDEST PUSH2 0x1E20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH2 0x164B PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP3 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1737 PUSH2 0x214B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x177B PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17C8 PUSH1 0x6 PUSH32 0x0 PUSH2 0x218C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1803 PUSH1 0x7 PUSH32 0x0 PUSH2 0x218C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1865 JUMPI PUSH2 0x1836 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1883 PUSH2 0x187D PUSH2 0x1164 JUMP JUMPDEST DUP4 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x189C DUP9 DUP9 DUP9 DUP9 PUSH2 0x227D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18AC DUP3 DUP3 PUSH2 0x2371 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x190D JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP3 SWAP2 SWAP1 PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1971 PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0x19C2 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x24D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B9B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B92 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BAC DUP4 DUP4 DUP4 PUSH2 0x25AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1C59 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C66 DUP5 PUSH2 0x265B JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CCB JUMPI PUSH2 0x1CCA PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1D37 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1D31 JUMPI PUSH2 0x1D30 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x273C JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 PUSH2 0x1D6C DUP5 DUP5 PUSH2 0x2755 JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1D81 DUP8 DUP4 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1DAD JUMPI DUP1 SWAP3 POP PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1DBA SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1D58 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1DD6 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x1E0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E19 DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2094 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F7A JUMPI PUSH1 0x0 DUP1 PUSH2 0x1EEB PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xFAC PUSH2 0x1EE6 DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F6F SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2093 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2004 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF96 PUSH2 0x1FFF DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2088 SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x20FA JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F1 SWAP3 SWAP2 SWAP1 PUSH2 0x3C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x919 JUMP JUMPDEST ISZERO PUSH2 0x218A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x21A9 JUMPI PUSH2 0x21A2 DUP4 PUSH2 0x2829 JUMP JUMPDEST SWAP1 POP PUSH2 0x2236 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x21B5 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21E1 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2358 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2367 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23B2 JUMPI PUSH2 0x23B1 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23C5 JUMPI PUSH2 0x23C4 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23FC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2468 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245F SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x247B JUMPI PUSH2 0x247A PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x248E JUMPI PUSH2 0x248D PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x24D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C7 SWAP2 SWAP1 PUSH2 0x3272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x24DD PUSH2 0x2FA6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x3CD0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25B5 DUP4 DUP4 DUP4 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x264B JUMPI PUSH1 0x0 PUSH2 0x25F3 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25FF PUSH2 0x28B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2648 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263F SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2656 DUP4 DUP4 DUP4 PUSH2 0x28D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x267D JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2698 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26B3 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26CE JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26E9 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2704 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x271F JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2733 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x274B JUMPI DUP2 PUSH2 0x274D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2766 SWAP2 SWAP1 PUSH2 0x3CFF JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2773 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x27E1 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x281D PUSH2 0x27F7 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x280D PUSH2 0x2803 DUP9 PUSH2 0x1808 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2993 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2836 DUP4 PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x2854 PUSH2 0x384E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2887 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A5 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x28B0 DUP4 DUP4 DUP4 PUSH2 0x2A00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2926 JUMPI PUSH2 0x2923 PUSH1 0xB PUSH2 0xF96 PUSH2 0x291E DUP5 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2973 JUMPI PUSH2 0x2970 PUSH1 0xB PUSH2 0xFAC PUSH2 0x296B DUP5 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x298E PUSH2 0x297F DUP5 PUSH2 0x896 JUMP JUMPDEST PUSH2 0x2988 DUP5 PUSH2 0x896 JUMP JUMPDEST DUP4 PUSH2 0x1E20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29A4 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2C25 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A52 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A46 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B6E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BBB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C18 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2EB6 JUMPI PUSH1 0x0 PUSH2 0x2C52 DUP8 PUSH1 0x1 DUP5 PUSH2 0x2C4D SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2DC5 JUMPI DUP5 PUSH2 0x2D73 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2D6E SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2EA5 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2F9E JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x301E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3046 DUP3 PUSH2 0x2FE4 JUMP JUMPDEST PUSH2 0x3050 DUP2 DUP6 PUSH2 0x2FEF JUMP JUMPDEST SWAP4 POP PUSH2 0x3060 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3000 JUMP JUMPDEST PUSH2 0x3069 DUP2 PUSH2 0x302A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308E DUP2 DUP5 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C6 DUP3 PUSH2 0x309B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D6 DUP2 PUSH2 0x30BB JUMP JUMPDEST DUP2 EQ PUSH2 0x30E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F3 DUP2 PUSH2 0x30CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310C DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3129 DUP2 PUSH2 0x3103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3145 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3154 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3165 DUP6 DUP3 DUP7 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3184 DUP2 PUSH2 0x316F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x317B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31AE DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31F6 DUP7 DUP3 DUP8 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3207 DUP7 DUP3 DUP8 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3218 DUP7 DUP3 DUP8 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3238 DUP2 PUSH2 0x3222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3253 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326C DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A3 JUMPI PUSH2 0x32A2 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32B1 DUP5 DUP3 DUP6 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C3 DUP2 PUSH2 0x30BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32FD DUP2 PUSH2 0x32E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3318 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3353 DUP2 PUSH2 0x331E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x338E DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A0 DUP4 DUP4 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C4 DUP3 PUSH2 0x3359 JUMP JUMPDEST PUSH2 0x33CE DUP2 DUP6 PUSH2 0x3364 JUMP JUMPDEST SWAP4 POP PUSH2 0x33D9 DUP4 PUSH2 0x3375 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x340A JUMPI DUP2 MLOAD PUSH2 0x33F1 DUP9 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP8 POP PUSH2 0x33FC DUP4 PUSH2 0x33AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x342C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x334A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x343E DUP2 DUP10 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3452 DUP2 DUP9 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP PUSH2 0x3461 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x346E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x347B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x348D DUP2 DUP5 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B0 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34BF DUP5 DUP3 DUP6 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E3 DUP2 PUSH2 0x34C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x350D DUP2 PUSH2 0x3222 JUMP JUMPDEST DUP2 EQ PUSH2 0x3518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x3504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3539 DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP2 EQ PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3556 DUP2 PUSH2 0x3530 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3579 JUMPI PUSH2 0x3578 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP10 DUP3 DUP11 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3598 DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x35A9 DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x35BA DUP10 DUP3 DUP11 ADD PUSH2 0x351B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x35CB DUP10 DUP3 DUP11 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x35DC DUP10 DUP3 DUP11 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3608 JUMPI PUSH2 0x3607 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3616 DUP11 DUP3 DUP12 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3627 DUP11 DUP3 DUP12 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3638 DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3649 DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x365A DUP11 DUP3 DUP12 ADD PUSH2 0x351B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x366B DUP11 DUP3 DUP12 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x367C DUP11 DUP3 DUP12 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A2 JUMPI PUSH2 0x36A1 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B0 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36C1 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36D4 DUP2 PUSH2 0x32E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x36DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F1 DUP2 PUSH2 0x36CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370E JUMPI PUSH2 0x370D PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371C DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372D DUP6 DUP3 DUP7 ADD PUSH2 0x36E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3740 DUP2 PUSH2 0x34C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3775 DUP2 PUSH2 0x3746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3791 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3737 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x37A4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x376C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x380C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x381F JUMPI PUSH2 0x381E PUSH2 0x37C5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x383A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3847 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3892 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x389F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x38B9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x38D7 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x38E4 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38F1 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38FE PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x390B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3918 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3938 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3945 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3986 DUP3 PUSH2 0x3746 JUMP JUMPDEST SWAP2 POP PUSH2 0x3991 DUP4 PUSH2 0x3746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C3 JUMPI PUSH2 0x39C2 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D4 DUP3 PUSH2 0x3746 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DF DUP4 PUSH2 0x3746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A11 JUMPI PUSH2 0x3A10 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A2C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3A39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3A46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7D PUSH2 0x3A78 PUSH2 0x3A73 DUP5 PUSH2 0x3A4E JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8D DUP2 PUSH2 0x3A62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A84 JUMP JUMPDEST PUSH2 0x3AB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC7 DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD2 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3AEA JUMPI PUSH2 0x3AE9 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFB DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B06 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B1E JUMPI PUSH2 0x3B1D PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3B46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3B62 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B6F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B7C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B89 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3B96 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BE4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3BF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1D PUSH2 0x3C18 PUSH2 0x3C13 DUP5 PUSH2 0x3BF8 JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C2D DUP2 PUSH2 0x3C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C24 JUMP JUMPDEST PUSH2 0x3C55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C71 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3C7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x3C8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3C98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3263 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D0A DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D15 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D25 JUMPI PUSH2 0x3D24 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D55 PUSH2 0x3D50 PUSH2 0x3D4B DUP5 PUSH2 0x3D30 JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D65 DUP2 PUSH2 0x3D3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D5C JUMP JUMPDEST PUSH2 0x3D8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP MLOAD SLOAD SMOD PUSH7 0xFF70330C31A37 0xBF 0xA7 PUSH17 0xF871D0C81CCE7180D5604A0874243A0665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"387:954:38:-:0;;;474:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1574:52:13;;;;;;;;;;;;;;;;;1613:4;3328:431:29;;;;;;;;;;;;;;;;;565:12:38;1896:113:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:24;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:29;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:13;630:42:38::3;636:10;661;:8;;;:10;;:::i;:::-;655:2;:16;;;;:::i;:::-;648:4;:23;;;;:::i;:::-;630:5;;;:42;;:::i;:::-;474:205:::0;387:954;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2914:340:25:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:29:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:10:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:25:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:26:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;986:177:38:-;1126:30;1140:4;1146:2;1150:5;1126:13;;;:30;;:::i;:::-;986:177;;;:::o;2327:413:14:-;2421:30;2435:4;2441:2;2445:5;2421:13;;;:30;;:::i;:::-;2481:1;2465:18;;:4;:18;;;2461:226;;2499:14;2516:13;:11;;;:13;;:::i;:::-;2499:30;;2543:11;2557:12;:10;;;:12;;:::i;:::-;2543:26;;2596:3;2587:6;:12;2583:94;;;2650:6;2658:3;2626:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2583:94;2485:202;;2461:226;2696:37;2717:4;2723:2;2727:5;2696:20;;;:37;;:::i;:::-;2327:413;;;:::o;1112:145:12:-;1474:19:24;:17;;;:19;;:::i;:::-;1220:30:12::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;3144:97:10:-;3196:7;3222:12;;3215:19;;3144:97;:::o;2084:103:14:-;2137:7;2163:17;2156:24;;;;2084:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;;;;;7400:26;7419:6;7400:18;;;:26;;:::i;:::-;7369:5;;;:58;;:::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;;;;;7519:26;7538:6;7519:18;;;:26;;:::i;:::-;7483:5;;;:63;;:::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;;;:15;;:::i;:::-;7602:13;7612:2;7602:9;;;:13;;:::i;:::-;7617:6;7566:18;;;:58;;:::i;:::-;7232:399;;;:::o;2002:128:24:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:10:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;9277:96:2:-;9335:7;9365:1;9361;:5;;;;:::i;:::-;9354:12;;9277:96;;;;:::o;4169:218:34:-;4226:7;4257:17;4249:25;;:5;:25;4245:105;;;4328:3;4333:5;4297:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:105;4374:5;4359:21;;4169:218;;;:::o;9016:255:2:-;9183:7;9192;9218:46;9229:7;:5;;;:7;;:::i;:::-;9238:25;9241:14;:5;:12;;;:14;;:::i;:::-;9257:5;9238:2;:25;;:::i;:::-;9218:5;:10;;;;:46;;;;;:::i;:::-;9211:53;;;;9016:255;;;;;;:::o;9379:101::-;9442:7;9472:1;9468;:5;;;;:::i;:::-;9461:12;;9379:101;;;;:::o;5539:117::-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;7717:780::-;7817:2;7809:10;;:4;:10;;;;:24;;;;;7832:1;7823:6;:10;7809:24;7805:686;;;7869:1;7853:18;;:4;:18;;;7849:315;;7892:16;7910;7930:150;7957:20;:26;7978:4;7957:26;;;;;;;;;;;;;;;8005:9;;;;;8036:26;8055:6;8036:18;;;:26;;:::i;:::-;7930:5;;;:150;;:::i;:::-;7891:189;;;;;;;;8124:4;8103:46;;;8130:8;8140;8103:46;;;;;;;:::i;:::-;;;;;;;;7873:291;;7849:315;8195:1;8181:16;;:2;:16;;;8177:304;;8218:16;8236;8256:143;8283:20;:24;8304:2;8283:24;;;;;;;;;;;;;;;8329:4;;;;;8355:26;8374:6;8355:18;;;:26;;:::i;:::-;8256:5;;;:143;;:::i;:::-;8217:182;;;;;;;;8443:2;8422:44;;;8447:8;8457;8422:44;;;;;;;:::i;:::-;;;;;;;;8199:282;;8177:304;7805:686;7717:780;;;:::o;1850:84:24:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;2789:96:2:-;2835:6;2860:18;:16;;;:18;;:::i;:::-;2853:25;;2789:96;:::o;10167:206:36:-;10229:7;10248:11;10262:4;:17;;:24;;;;10248:38;;10310:1;10303:3;:8;:63;;10318:41;10332:4;:17;;10357:1;10351:3;:7;;;;:::i;:::-;10318:13;;;:41;;:::i;:::-;:48;;;;;;;;;;;;10303:63;;;10314:1;10303:63;10296:70;;;10167:206;;;:::o;8050:162::-;8132:7;8141;8167:38;8175:4;:17;;8194:3;8199:5;8167:7;;;:38;;:::i;:::-;8160:45;;;;8050:162;;;;;;:::o;931:109:37:-;977:6;1002:31;1020:12;1002:17;;;:31;;:::i;:::-;995:38;;931:109;:::o;14099:265:36:-;14209:28;14282:9;14279:1;14272:20;14344:3;14337:4;14334:1;14324:18;14320:28;14305:43;;14099:265;;;;:::o;11513:870::-;11604:7;11613;11632:11;11646:4;:11;;;;11632:25;;11678:1;11672:3;:7;11668:709;;;11747:25;11775:28;11789:4;11801:1;11795:3;:7;;;;:::i;:::-;11775:13;;;:28;;:::i;:::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:3;11877:15;;:4;:9;;;:15;;;11873:91;;;11919:30;;;;;;;;;;;;;;11873:91;12040:3;12027:16;;:4;:9;;;:16;;;12023:189;;12101:5;12063:28;12077:4;12089:1;12083:3;:7;;;;:::i;:::-;12063:13;;;:28;;:::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;12023:189;;;12145:4;12155:41;;;;;;;;12176:3;12155:41;;;;;;12189:5;12155:41;;;;;12145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:4;:11;;;12246:5;12225:27;;;;;;;;11668:709;12283:4;12293:41;;;;;;;;12314:3;12293:41;;;;;;12327:5;12293:41;;;;;12283:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:1;12360:5;12349:17;;;;;11513:870;;;;;;;:::o;14291:213:34:-;14347:6;14377:16;14369:24;;:5;:24;14365:103;;;14447:2;14451:5;14416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;14365:103;14491:5;14477:20;;14291:213;;;:::o;88:117:40:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:77::-;9840:7;9869:5;9858:16;;9803:77;;;:::o;9886:118::-;9973:24;9991:5;9973:24;:::i;:::-;9968:3;9961:37;9886:118;;:::o;10010:::-;10097:24;10115:5;10097:24;:::i;:::-;10092:3;10085:37;10010:118;;:::o;10134:664::-;10339:4;10377:3;10366:9;10362:19;10354:27;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10472:72;10540:2;10529:9;10525:18;10516:6;10472:72;:::i;:::-;10554;10622:2;10611:9;10607:18;10598:6;10554:72;:::i;:::-;10636;10704:2;10693:9;10689:18;10680:6;10636:72;:::i;:::-;10718:73;10786:3;10775:9;10771:19;10762:6;10718:73;:::i;:::-;10134:664;;;;;;;;:::o;10804:169::-;10888:11;10922:6;10917:3;10910:19;10962:4;10957:3;10953:14;10938:29;;10804:169;;;;:::o;10979:246::-;11060:1;11070:113;11084:6;11081:1;11078:13;11070:113;;;11169:1;11164:3;11160:11;11154:18;11150:1;11145:3;11141:11;11134:39;11106:2;11103:1;11099:10;11094:15;;11070:113;;;11217:1;11208:6;11203:3;11199:16;11192:27;11041:184;10979:246;;;:::o;11231:102::-;11272:6;11323:2;11319:7;11314:2;11307:5;11303:14;11299:28;11289:38;;11231:102;;;:::o;11339:377::-;11427:3;11455:39;11488:5;11455:39;:::i;:::-;11510:71;11574:6;11569:3;11510:71;:::i;:::-;11503:78;;11590:65;11648:6;11643:3;11636:4;11629:5;11625:16;11590:65;:::i;:::-;11680:29;11702:6;11680:29;:::i;:::-;11675:3;11671:39;11664:46;;11431:285;11339:377;;;;:::o;11722:313::-;11835:4;11873:2;11862:9;11858:18;11850:26;;11922:9;11916:4;11912:20;11908:1;11897:9;11893:17;11886:47;11950:78;12023:4;12014:6;11950:78;:::i;:::-;11942:86;;11722:313;;;;:::o;12041:98::-;12092:6;12126:5;12120:12;12110:22;;12041:98;;;:::o;12145:116::-;12196:4;12219:3;12211:11;;12249:4;12244:3;12240:14;12232:22;;12145:116;;;:::o;12267:154::-;12310:11;12346:29;12370:3;12364:10;12346:29;:::i;:::-;12409:5;12385:29;;12322:99;12267:154;;;:::o;12427:594::-;12511:5;12542:38;12574:5;12542:38;:::i;:::-;12605:5;12632:40;12666:5;12632:40;:::i;:::-;12620:52;;12691:35;12717:8;12691:35;:::i;:::-;12682:44;;12750:2;12742:6;12739:14;12736:278;;;12821:169;12906:66;12876:6;12872:2;12868:15;12865:1;12861:23;12821:169;:::i;:::-;12798:5;12777:227;12768:236;;12736:278;12517:504;;12427:594;;;:::o;13027:332::-;13148:4;13186:2;13175:9;13171:18;13163:26;;13199:71;13267:1;13256:9;13252:17;13243:6;13199:71;:::i;:::-;13280:72;13348:2;13337:9;13333:18;13324:6;13280:72;:::i;:::-;13027:332;;;;;:::o;13365:191::-;13405:3;13424:20;13442:1;13424:20;:::i;:::-;13419:25;;13458:20;13476:1;13458:20;:::i;:::-;13453:25;;13501:1;13498;13494:9;13487:16;;13522:3;13519:1;13516:10;13513:36;;;13529:18;;:::i;:::-;13513:36;13365:191;;;;:::o;13562:442::-;13711:4;13749:2;13738:9;13734:18;13726:26;;13762:71;13830:1;13819:9;13815:17;13806:6;13762:71;:::i;:::-;13843:72;13911:2;13900:9;13896:18;13887:6;13843:72;:::i;:::-;13925;13993:2;13982:9;13978:18;13969:6;13925:72;:::i;:::-;13562:442;;;;;;:::o;14010:222::-;14103:4;14141:2;14130:9;14126:18;14118:26;;14154:71;14222:1;14211:9;14207:17;14198:6;14154:71;:::i;:::-;14010:222;;;;:::o;14238:138::-;14275:7;14315:54;14308:5;14304:66;14293:77;;14238:138;;;:::o;14382:244::-;14422:3;14441:20;14459:1;14441:20;:::i;:::-;14436:25;;14475:20;14493:1;14475:20;:::i;:::-;14470:25;;14518:1;14515;14511:9;14504:16;;14541:54;14536:3;14533:63;14530:89;;;14599:18;;:::i;:::-;14530:89;14382:244;;;;:::o;14632:87::-;14679:7;14708:5;14697:16;;14632:87;;;:::o;14725:158::-;14783:9;14816:61;14832:44;14841:34;14869:5;14841:34;:::i;:::-;14832:44;:::i;:::-;14816:61;:::i;:::-;14803:74;;14725:158;;;:::o;14889:147::-;14984:45;15023:5;14984:45;:::i;:::-;14979:3;14972:58;14889:147;;:::o;15042:348::-;15171:4;15209:2;15198:9;15194:18;15186:26;;15222:79;15298:1;15287:9;15283:17;15274:6;15222:79;:::i;:::-;15311:72;15379:2;15368:9;15364:18;15355:6;15311:72;:::i;:::-;15042:348;;;;;:::o;15396:247::-;15436:4;15456:20;15474:1;15456:20;:::i;:::-;15451:25;;15490:20;15508:1;15490:20;:::i;:::-;15485:25;;15534:1;15531;15527:9;15519:17;;15558:54;15552:4;15549:64;15546:90;;;15616:18;;:::i;:::-;15546:90;15396:247;;;;:::o;15649:194::-;15689:4;15709:20;15727:1;15709:20;:::i;:::-;15704:25;;15743:20;15761:1;15743:20;:::i;:::-;15738:25;;15787:1;15784;15780:9;15772:17;;15811:1;15805:4;15802:11;15799:37;;;15816:18;;:::i;:::-;15799:37;15649:194;;;;:::o;15849:86::-;15895:7;15924:5;15913:16;;15849:86;;;:::o;15941:156::-;15998:9;16031:60;16047:43;16056:33;16083:5;16056:33;:::i;:::-;16047:43;:::i;:::-;16031:60;:::i;:::-;16018:73;;15941:156;;;:::o;16103:145::-;16197:44;16235:5;16197:44;:::i;:::-;16192:3;16185:57;16103:145;;:::o;16254:346::-;16382:4;16420:2;16409:9;16405:18;16397:26;;16433:78;16508:1;16497:9;16493:17;16484:6;16433:78;:::i;:::-;16521:72;16589:2;16578:9;16574:18;16565:6;16521:72;:::i;:::-;16254:346;;;;;:::o;387:954:38:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_319":{"entryPoint":2050,"id":319,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_1777":{"entryPoint":1778,"id":1777,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_4621":{"entryPoint":6034,"id":4621,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4633":{"entryPoint":6093,"id":4633,"parameterSlots":0,"returnSlots":1},"@_add_754":{"entryPoint":3990,"id":754,"parameterSlots":2,"returnSlots":1},"@_approve_1403":{"entryPoint":4042,"id":1403,"parameterSlots":3,"returnSlots":0},"@_approve_1463":{"entryPoint":6602,"id":1463,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4551":{"entryPoint":7089,"id":4551,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":4975,"id":84,"parameterSlots":0,"returnSlots":0},"@_checkpoints_705":{"entryPoint":6505,"id":705,"parameterSlots":2,"returnSlots":1},"@_delegate_535":{"entryPoint":5355,"id":535,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4530":{"entryPoint":4452,"id":4530,"parameterSlots":0,"returnSlots":1},"@_getVotingUnits_1879":{"entryPoint":7694,"id":1879,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_4567":{"entryPoint":6256,"id":4567,"parameterSlots":1,"returnSlots":1},"@_insert_8589":{"entryPoint":11301,"id":8589,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1811":{"entryPoint":10421,"id":1811,"parameterSlots":0,"returnSlots":1},"@_mint_1352":{"entryPoint":5209,"id":1352,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":7712,"id":668,"parameterSlots":3,"returnSlots":0},"@_msgSender_3282":{"entryPoint":4034,"id":3282,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_686":{"entryPoint":5631,"id":686,"parameterSlots":1,"returnSlots":1},"@_pause_3460":{"entryPoint":5935,"id":3460,"parameterSlots":0,"returnSlots":0},"@_push_740":{"entryPoint":10217,"id":740,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_3431":{"entryPoint":8523,"id":3431,"parameterSlots":0,"returnSlots":0},"@_requirePaused_3444":{"entryPoint":7630,"id":3444,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1511":{"entryPoint":4060,"id":1511,"parameterSlots":3,"returnSlots":0},"@_subtract_768":{"entryPoint":4012,"id":768,"parameterSlots":2,"returnSlots":1},"@_throwError_4406":{"entryPoint":9073,"id":4406,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5719,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":10457,"id":590,"parameterSlots":3,"returnSlots":0},"@_transfer_1242":{"entryPoint":4208,"id":1242,"parameterSlots":3,"returnSlots":0},"@_unpause_3476":{"entryPoint":5110,"id":3476,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_8708":{"entryPoint":7488,"id":8708,"parameterSlots":2,"returnSlots":1},"@_update_1319":{"entryPoint":10752,"id":1319,"parameterSlots":3,"returnSlots":0},"@_update_1623":{"entryPoint":10397,"id":1623,"parameterSlots":3,"returnSlots":0},"@_update_1865":{"entryPoint":9642,"id":1865,"parameterSlots":3,"returnSlots":0},"@_update_9604":{"entryPoint":7073,"id":9604,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_8641":{"entryPoint":7509,"id":8641,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_3359":{"entryPoint":6330,"id":3359,"parameterSlots":2,"returnSlots":0},"@_useNonce_3334":{"entryPoint":6418,"id":3334,"parameterSlots":1,"returnSlots":1},"@allowance_1139":{"entryPoint":3695,"id":1139,"parameterSlots":2,"returnSlots":1},"@approve_1163":{"entryPoint":1677,"id":1163,"parameterSlots":2,"returnSlots":1},"@at_8498":{"entryPoint":9429,"id":8498,"parameterSlots":2,"returnSlots":1},"@average_4972":{"entryPoint":10069,"id":4972,"parameterSlots":2,"returnSlots":1},"@balanceOf_1098":{"entryPoint":2370,"id":1098,"parameterSlots":1,"returnSlots":1},"@blockNumber_9265":{"entryPoint":5339,"id":9265,"parameterSlots":0,"returnSlots":1},"@byteLength_3595":{"entryPoint":10672,"id":3595,"parameterSlots":1,"returnSlots":1},"@checkpoints_1909":{"entryPoint":3830,"id":1909,"parameterSlots":2,"returnSlots":1},"@clock_299":{"entryPoint":2865,"id":299,"parameterSlots":0,"returnSlots":1},"@decimals_1076":{"entryPoint":1769,"id":1076,"parameterSlots":0,"returnSlots":1},"@delegateBySig_500":{"entryPoint":3169,"id":500,"parameterSlots":6,"returnSlots":0},"@delegate_443":{"entryPoint":2303,"id":443,"parameterSlots":1,"returnSlots":0},"@delegates_426":{"entryPoint":2198,"id":426,"parameterSlots":1,"returnSlots":1},"@eip712Domain_4609":{"entryPoint":2498,"id":4609,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_402":{"entryPoint":2710,"id":402,"parameterSlots":1,"returnSlots":1},"@getPastVotes_370":{"entryPoint":1793,"id":370,"parameterSlots":2,"returnSlots":1},"@getVotes_334":{"entryPoint":3026,"id":334,"parameterSlots":1,"returnSlots":1},"@latest_8417":{"entryPoint":6152,"id":8417,"parameterSlots":1,"returnSlots":1},"@length_8480":{"entryPoint":8345,"id":8480,"parameterSlots":1,"returnSlots":1},"@log2_5454":{"entryPoint":9819,"id":5454,"parameterSlots":1,"returnSlots":1},"@min_4949":{"entryPoint":10044,"id":4949,"parameterSlots":2,"returnSlots":1},"@mint_9582":{"entryPoint":2028,"id":9582,"parameterSlots":2,"returnSlots":0},"@name_1058":{"entryPoint":1531,"id":1058,"parameterSlots":0,"returnSlots":1},"@nonces_1767":{"entryPoint":5917,"id":1767,"parameterSlots":1,"returnSlots":1},"@nonces_3319":{"entryPoint":8450,"id":3319,"parameterSlots":1,"returnSlots":1},"@nonces_9620":{"entryPoint":2462,"id":9620,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1892":{"entryPoint":2352,"id":1892,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2668,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_9558":{"entryPoint":2480,"id":9558,"parameterSlots":0,"returnSlots":0},"@paused_3419":{"entryPoint":2329,"id":3419,"parameterSlots":0,"returnSlots":1},"@permit_1750":{"entryPoint":3367,"id":1750,"parameterSlots":7,"returnSlots":0},"@push_8220":{"entryPoint":10643,"id":8220,"parameterSlots":3,"returnSlots":2},"@recover_4357":{"entryPoint":6282,"id":4357,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2442,"id":98,"parameterSlots":0,"returnSlots":0},"@sqrt_5287":{"entryPoint":7239,"id":5287,"parameterSlots":1,"returnSlots":1},"@symbol_1067":{"entryPoint":2880,"id":1067,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_3662":{"entryPoint":8588,"id":3662,"parameterSlots":2,"returnSlots":1},"@toString_3563":{"entryPoint":10281,"id":3563,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4707":{"entryPoint":8764,"id":4707,"parameterSlots":2,"returnSlots":1},"@toUint208_5993":{"entryPoint":10107,"id":5993,"parameterSlots":1,"returnSlots":1},"@toUint32_6609":{"entryPoint":8362,"id":6609,"parameterSlots":1,"returnSlots":1},"@toUint48_6553":{"entryPoint":4635,"id":6553,"parameterSlots":1,"returnSlots":1},"@totalSupply_1085":{"entryPoint":1712,"id":1085,"parameterSlots":0,"returnSlots":1},"@transferFrom_1195":{"entryPoint":1722,"id":1195,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3856,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_1122":{"entryPoint":3134,"id":1122,"parameterSlots":2,"returnSlots":1},"@tryRecover_4321":{"entryPoint":8829,"id":4321,"parameterSlots":4,"returnSlots":3},"@unpause_9567":{"entryPoint":2010,"id":9567,"parameterSlots":0,"returnSlots":0},"@upperLookupRecent_8387":{"entryPoint":4725,"id":8387,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":14050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":13595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13963,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12751,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13801,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12591,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13660,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":14071,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":13467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":13130,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12899,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":15708,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack":{"entryPoint":15396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack":{"entryPoint":14980,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Checkpoint208_$8197_memory_ptr_to_t_struct$_Checkpoint208_$8197_memory_ptr_fromStack":{"entryPoint":14203,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint208_to_t_uint208":{"entryPoint":14188,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13189,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12709,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13044,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48":{"entryPoint":14135,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":13530,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":12847,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14627,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15140,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14871,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13335,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14530,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14461,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":15181,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15452,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15723,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15411,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":14995,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$8197_memory_ptr__to_t_struct$_Checkpoint208_$8197_memory_ptr__fromStack_reversed":{"entryPoint":14250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15311,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":14373,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":13059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":13545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":12862,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13173,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13145,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12260,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13228,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13156,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12271,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":14715,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15088,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15615,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":14793,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15036,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":12475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12655,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":13086,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12889,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":15664,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_32_by_1":{"entryPoint":15352,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_48_by_1":{"entryPoint":14926,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12443,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":14150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12537,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13028,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":13512,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12834,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":15674,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_32_by_1_to_t_uint8":{"entryPoint":15362,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_48_by_1_to_t_uint8":{"entryPoint":14946,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":12288,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14324,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":14936,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14668,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15264,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15521,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14277,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15568,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14414,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12438,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12330,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":12493,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13616,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12547,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":14027,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":13572,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24915:40","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:40","statements":[{"nodeType":"YulAssignment","src":"77:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:40"},"nodeType":"YulFunctionCall","src":"87:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:40","type":""}],"src":"7:99:40"},{"body":{"nodeType":"YulBlock","src":"208:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:40"},"nodeType":"YulFunctionCall","src":"218:19:40"},"nodeType":"YulExpressionStatement","src":"218:19:40"},{"nodeType":"YulAssignment","src":"246:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:40"},"nodeType":"YulFunctionCall","src":"261:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:40","type":""}],"src":"112:169:40"},{"body":{"nodeType":"YulBlock","src":"349:184:40","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:40"},"nodeType":"YulFunctionCall","src":"449:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:40"},"nodeType":"YulFunctionCall","src":"468:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:40"},"nodeType":"YulFunctionCall","src":"462:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:40"},"nodeType":"YulFunctionCall","src":"442:39:40"},"nodeType":"YulExpressionStatement","src":"442:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:40"},"nodeType":"YulFunctionCall","src":"386:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:40","statements":[{"nodeType":"YulAssignment","src":"402:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:40"},"nodeType":"YulFunctionCall","src":"407:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:40","statements":[]},"src":"378:113:40"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:40"},"nodeType":"YulFunctionCall","src":"507:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:40"},"nodeType":"YulFunctionCall","src":"500:27:40"},"nodeType":"YulExpressionStatement","src":"500:27:40"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:40","type":""}],"src":"287:246:40"},{"body":{"nodeType":"YulBlock","src":"587:54:40","statements":[{"nodeType":"YulAssignment","src":"597:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:40"},"nodeType":"YulFunctionCall","src":"611:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:40"},"nodeType":"YulFunctionCall","src":"627:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:40"},"nodeType":"YulFunctionCall","src":"607:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:40","type":""}],"src":"539:102:40"},{"body":{"nodeType":"YulBlock","src":"739:285:40","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:40"},"nodeType":"YulFunctionCall","src":"763:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:40","type":""}]},{"nodeType":"YulAssignment","src":"811:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:40"},"nodeType":"YulFunctionCall","src":"818:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:40"},"nodeType":"YulFunctionCall","src":"933:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:40"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:40"},"nodeType":"YulFunctionCall","src":"898:65:40"},"nodeType":"YulExpressionStatement","src":"898:65:40"},{"nodeType":"YulAssignment","src":"972:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:40"},"nodeType":"YulFunctionCall","src":"988:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:40"},"nodeType":"YulFunctionCall","src":"979:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:40","type":""}],"src":"647:377:40"},{"body":{"nodeType":"YulBlock","src":"1148:195:40","statements":[{"nodeType":"YulAssignment","src":"1158:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:40"},"nodeType":"YulFunctionCall","src":"1166:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:40"},"nodeType":"YulFunctionCall","src":"1201:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:40"},"nodeType":"YulFunctionCall","src":"1220:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:40"},"nodeType":"YulFunctionCall","src":"1194:47:40"},"nodeType":"YulExpressionStatement","src":"1194:47:40"},{"nodeType":"YulAssignment","src":"1250:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:40"},"nodeType":"YulFunctionCall","src":"1258:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:40","type":""}],"src":"1030:313:40"},{"body":{"nodeType":"YulBlock","src":"1389:35:40","statements":[{"nodeType":"YulAssignment","src":"1399:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:40"},"nodeType":"YulFunctionCall","src":"1409:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:40","type":""}],"src":"1349:75:40"},{"body":{"nodeType":"YulBlock","src":"1519:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:40"},"nodeType":"YulFunctionCall","src":"1529:12:40"},"nodeType":"YulExpressionStatement","src":"1529:12:40"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:40"},{"body":{"nodeType":"YulBlock","src":"1642:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:40"},"nodeType":"YulFunctionCall","src":"1652:12:40"},"nodeType":"YulExpressionStatement","src":"1652:12:40"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:40"},{"body":{"nodeType":"YulBlock","src":"1721:81:40","statements":[{"nodeType":"YulAssignment","src":"1731:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:40"},"nodeType":"YulFunctionCall","src":"1742:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:40","type":""}],"src":"1676:126:40"},{"body":{"nodeType":"YulBlock","src":"1853:51:40","statements":[{"nodeType":"YulAssignment","src":"1863:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:40"},"nodeType":"YulFunctionCall","src":"1874:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:40","type":""}],"src":"1808:96:40"},{"body":{"nodeType":"YulBlock","src":"1953:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:40"},"nodeType":"YulFunctionCall","src":"2012:12:40"},"nodeType":"YulExpressionStatement","src":"2012:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:40"},"nodeType":"YulFunctionCall","src":"1983:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:40"},"nodeType":"YulFunctionCall","src":"1973:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:40"},"nodeType":"YulFunctionCall","src":"1966:43:40"},"nodeType":"YulIf","src":"1963:63:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:40","type":""}],"src":"1910:122:40"},{"body":{"nodeType":"YulBlock","src":"2090:87:40","statements":[{"nodeType":"YulAssignment","src":"2100:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:40"},"nodeType":"YulFunctionCall","src":"2109:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:40"},"nodeType":"YulFunctionCall","src":"2138:33:40"},"nodeType":"YulExpressionStatement","src":"2138:33:40"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:40","type":""}],"src":"2038:139:40"},{"body":{"nodeType":"YulBlock","src":"2228:32:40","statements":[{"nodeType":"YulAssignment","src":"2238:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:40","type":""}],"src":"2183:77:40"},{"body":{"nodeType":"YulBlock","src":"2309:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:40"},"nodeType":"YulFunctionCall","src":"2368:12:40"},"nodeType":"YulExpressionStatement","src":"2368:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:40"},"nodeType":"YulFunctionCall","src":"2339:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:40"},"nodeType":"YulFunctionCall","src":"2329:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:40"},"nodeType":"YulFunctionCall","src":"2322:43:40"},"nodeType":"YulIf","src":"2319:63:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:40","type":""}],"src":"2266:122:40"},{"body":{"nodeType":"YulBlock","src":"2446:87:40","statements":[{"nodeType":"YulAssignment","src":"2456:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:40"},"nodeType":"YulFunctionCall","src":"2465:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:40"},"nodeType":"YulFunctionCall","src":"2494:33:40"},"nodeType":"YulExpressionStatement","src":"2494:33:40"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:40","type":""}],"src":"2394:139:40"},{"body":{"nodeType":"YulBlock","src":"2622:391:40","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:40"},"nodeType":"YulFunctionCall","src":"2670:79:40"},"nodeType":"YulExpressionStatement","src":"2670:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:40"},"nodeType":"YulFunctionCall","src":"2639:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:40"},"nodeType":"YulFunctionCall","src":"2635:32:40"},"nodeType":"YulIf","src":"2632:119:40"},{"nodeType":"YulBlock","src":"2761:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:40"},"nodeType":"YulFunctionCall","src":"2836:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:40"},"nodeType":"YulFunctionCall","src":"2815:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:40"}]}]},{"nodeType":"YulBlock","src":"2888:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:40"},"nodeType":"YulFunctionCall","src":"2964:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:40"},"nodeType":"YulFunctionCall","src":"2943:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:40","type":""}],"src":"2539:474:40"},{"body":{"nodeType":"YulBlock","src":"3061:48:40","statements":[{"nodeType":"YulAssignment","src":"3071:32:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:40"},"nodeType":"YulFunctionCall","src":"3089:13:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:40"},"nodeType":"YulFunctionCall","src":"3082:21:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:40"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:40","type":""}],"src":"3019:90:40"},{"body":{"nodeType":"YulBlock","src":"3174:50:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:40"},"nodeType":"YulFunctionCall","src":"3196:21:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:40"},"nodeType":"YulFunctionCall","src":"3184:34:40"},"nodeType":"YulExpressionStatement","src":"3184:34:40"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:40","type":""}],"src":"3115:109:40"},{"body":{"nodeType":"YulBlock","src":"3322:118:40","statements":[{"nodeType":"YulAssignment","src":"3332:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:40"},"nodeType":"YulFunctionCall","src":"3340:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:40"},"nodeType":"YulFunctionCall","src":"3415:17:40"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:40"},"nodeType":"YulFunctionCall","src":"3368:65:40"},"nodeType":"YulExpressionStatement","src":"3368:65:40"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:40","type":""}],"src":"3230:210:40"},{"body":{"nodeType":"YulBlock","src":"3511:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:40"},"nodeType":"YulFunctionCall","src":"3533:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:40"},"nodeType":"YulFunctionCall","src":"3521:37:40"},"nodeType":"YulExpressionStatement","src":"3521:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:40","type":""}],"src":"3446:118:40"},{"body":{"nodeType":"YulBlock","src":"3668:124:40","statements":[{"nodeType":"YulAssignment","src":"3678:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:40"},"nodeType":"YulFunctionCall","src":"3686:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:40"},"nodeType":"YulFunctionCall","src":"3767:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:40"},"nodeType":"YulFunctionCall","src":"3714:71:40"},"nodeType":"YulExpressionStatement","src":"3714:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:40","type":""}],"src":"3570:222:40"},{"body":{"nodeType":"YulBlock","src":"3898:519:40","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:40"},"nodeType":"YulFunctionCall","src":"3946:79:40"},"nodeType":"YulExpressionStatement","src":"3946:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:40"},"nodeType":"YulFunctionCall","src":"3915:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:40","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:40"},"nodeType":"YulFunctionCall","src":"3911:32:40"},"nodeType":"YulIf","src":"3908:119:40"},{"nodeType":"YulBlock","src":"4037:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:40","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:40"},"nodeType":"YulFunctionCall","src":"4112:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:40"},"nodeType":"YulFunctionCall","src":"4091:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:40"}]}]},{"nodeType":"YulBlock","src":"4164:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:40","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:40"},"nodeType":"YulFunctionCall","src":"4240:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:40"},"nodeType":"YulFunctionCall","src":"4219:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:40"}]}]},{"nodeType":"YulBlock","src":"4292:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:40","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:40"},"nodeType":"YulFunctionCall","src":"4368:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:40"},"nodeType":"YulFunctionCall","src":"4347:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:40","type":""}],"src":"3798:619:40"},{"body":{"nodeType":"YulBlock","src":"4466:43:40","statements":[{"nodeType":"YulAssignment","src":"4476:27:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:40","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:40"},"nodeType":"YulFunctionCall","src":"4487:16:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:40"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:40","type":""}],"src":"4423:86:40"},{"body":{"nodeType":"YulBlock","src":"4576:51:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:40"},"nodeType":"YulFunctionCall","src":"4598:22:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:40"},"nodeType":"YulFunctionCall","src":"4586:35:40"},"nodeType":"YulExpressionStatement","src":"4586:35:40"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:40","type":""}],"src":"4515:112:40"},{"body":{"nodeType":"YulBlock","src":"4727:120:40","statements":[{"nodeType":"YulAssignment","src":"4737:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:40"},"nodeType":"YulFunctionCall","src":"4745:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:40"},"nodeType":"YulFunctionCall","src":"4822:17:40"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:40"},"nodeType":"YulFunctionCall","src":"4773:67:40"},"nodeType":"YulExpressionStatement","src":"4773:67:40"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:40","type":""}],"src":"4633:214:40"},{"body":{"nodeType":"YulBlock","src":"4898:32:40","statements":[{"nodeType":"YulAssignment","src":"4908:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:40"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:40","type":""}],"src":"4853:77:40"},{"body":{"nodeType":"YulBlock","src":"5001:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:40"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:40"},"nodeType":"YulFunctionCall","src":"5023:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:40"},"nodeType":"YulFunctionCall","src":"5011:37:40"},"nodeType":"YulExpressionStatement","src":"5011:37:40"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:40","type":""}],"src":"4936:118:40"},{"body":{"nodeType":"YulBlock","src":"5158:124:40","statements":[{"nodeType":"YulAssignment","src":"5168:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:40"},"nodeType":"YulFunctionCall","src":"5176:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:40"},"nodeType":"YulFunctionCall","src":"5257:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:40"},"nodeType":"YulFunctionCall","src":"5204:71:40"},"nodeType":"YulExpressionStatement","src":"5204:71:40"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:40","type":""}],"src":"5060:222:40"},{"body":{"nodeType":"YulBlock","src":"5354:263:40","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:40"},"nodeType":"YulFunctionCall","src":"5402:79:40"},"nodeType":"YulExpressionStatement","src":"5402:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:40"},"nodeType":"YulFunctionCall","src":"5371:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:40"},"nodeType":"YulFunctionCall","src":"5367:32:40"},"nodeType":"YulIf","src":"5364:119:40"},{"nodeType":"YulBlock","src":"5493:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:40","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:40"},"nodeType":"YulFunctionCall","src":"5568:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:40"},"nodeType":"YulFunctionCall","src":"5547:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:40"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:40","type":""}],"src":"5288:329:40"},{"body":{"nodeType":"YulBlock","src":"5688:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5728:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5710:17:40"},"nodeType":"YulFunctionCall","src":"5710:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:40"},"nodeType":"YulFunctionCall","src":"5698:37:40"},"nodeType":"YulExpressionStatement","src":"5698:37:40"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5676:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5683:3:40","type":""}],"src":"5623:118:40"},{"body":{"nodeType":"YulBlock","src":"5845:124:40","statements":[{"nodeType":"YulAssignment","src":"5855:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5878:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:40"},"nodeType":"YulFunctionCall","src":"5863:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5855:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5935:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5959:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:40"},"nodeType":"YulFunctionCall","src":"5944:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5891:43:40"},"nodeType":"YulFunctionCall","src":"5891:71:40"},"nodeType":"YulExpressionStatement","src":"5891:71:40"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5817:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5829:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5840:4:40","type":""}],"src":"5747:222:40"},{"body":{"nodeType":"YulBlock","src":"6019:49:40","statements":[{"nodeType":"YulAssignment","src":"6029:33:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6044:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"6051:10:40","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6040:3:40"},"nodeType":"YulFunctionCall","src":"6040:22:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6029:7:40"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6001:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6011:7:40","type":""}],"src":"5975:93:40"},{"body":{"nodeType":"YulBlock","src":"6137:52:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6176:5:40"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6159:16:40"},"nodeType":"YulFunctionCall","src":"6159:23:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:40"},"nodeType":"YulFunctionCall","src":"6147:36:40"},"nodeType":"YulExpressionStatement","src":"6147:36:40"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6125:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6132:3:40","type":""}],"src":"6074:115:40"},{"body":{"nodeType":"YulBlock","src":"6291:122:40","statements":[{"nodeType":"YulAssignment","src":"6301:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6324:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:40"},"nodeType":"YulFunctionCall","src":"6309:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6301:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6379:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6392:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6403:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6388:3:40"},"nodeType":"YulFunctionCall","src":"6388:17:40"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6337:41:40"},"nodeType":"YulFunctionCall","src":"6337:69:40"},"nodeType":"YulExpressionStatement","src":"6337:69:40"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6263:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6275:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6286:4:40","type":""}],"src":"6195:218:40"},{"body":{"nodeType":"YulBlock","src":"6463:105:40","statements":[{"nodeType":"YulAssignment","src":"6473:89:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6488:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"6495:66:40","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6484:3:40"},"nodeType":"YulFunctionCall","src":"6484:78:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6473:7:40"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6445:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6455:7:40","type":""}],"src":"6419:149:40"},{"body":{"nodeType":"YulBlock","src":"6637:52:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6654:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6676:5:40"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6659:16:40"},"nodeType":"YulFunctionCall","src":"6659:23:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6647:6:40"},"nodeType":"YulFunctionCall","src":"6647:36:40"},"nodeType":"YulExpressionStatement","src":"6647:36:40"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6625:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6632:3:40","type":""}],"src":"6574:115:40"},{"body":{"nodeType":"YulBlock","src":"6769:40:40","statements":[{"nodeType":"YulAssignment","src":"6780:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6796:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6790:5:40"},"nodeType":"YulFunctionCall","src":"6790:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6780:6:40"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6752:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6762:6:40","type":""}],"src":"6695:114:40"},{"body":{"nodeType":"YulBlock","src":"6926:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6943:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"6948:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6936:6:40"},"nodeType":"YulFunctionCall","src":"6936:19:40"},"nodeType":"YulExpressionStatement","src":"6936:19:40"},{"nodeType":"YulAssignment","src":"6964:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6983:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"6988:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6979:3:40"},"nodeType":"YulFunctionCall","src":"6979:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6964:11:40"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6898:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"6903:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6914:11:40","type":""}],"src":"6815:184:40"},{"body":{"nodeType":"YulBlock","src":"7077:60:40","statements":[{"nodeType":"YulAssignment","src":"7087:11:40","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7095:3:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7087:4:40"}]},{"nodeType":"YulAssignment","src":"7108:22:40","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7120:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7116:3:40"},"nodeType":"YulFunctionCall","src":"7116:14:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7108:4:40"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7064:3:40","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7072:4:40","type":""}],"src":"7005:132:40"},{"body":{"nodeType":"YulBlock","src":"7198:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7215:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7238:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7220:17:40"},"nodeType":"YulFunctionCall","src":"7220:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7208:6:40"},"nodeType":"YulFunctionCall","src":"7208:37:40"},"nodeType":"YulExpressionStatement","src":"7208:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7186:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7193:3:40","type":""}],"src":"7143:108:40"},{"body":{"nodeType":"YulBlock","src":"7337:99:40","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7381:6:40"},{"name":"pos","nodeType":"YulIdentifier","src":"7389:3:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7347:33:40"},"nodeType":"YulFunctionCall","src":"7347:46:40"},"nodeType":"YulExpressionStatement","src":"7347:46:40"},{"nodeType":"YulAssignment","src":"7402:28:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7420:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7416:3:40"},"nodeType":"YulFunctionCall","src":"7416:14:40"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7402:10:40"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7310:6:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7318:3:40","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7326:10:40","type":""}],"src":"7257:179:40"},{"body":{"nodeType":"YulBlock","src":"7517:38:40","statements":[{"nodeType":"YulAssignment","src":"7527:22:40","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7539:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"7544:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:40"},"nodeType":"YulFunctionCall","src":"7535:14:40"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7527:4:40"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7504:3:40","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7512:4:40","type":""}],"src":"7442:113:40"},{"body":{"nodeType":"YulBlock","src":"7715:608:40","statements":[{"nodeType":"YulVariableDeclaration","src":"7725:68:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7787:5:40"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7739:47:40"},"nodeType":"YulFunctionCall","src":"7739:54:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7729:6:40","type":""}]},{"nodeType":"YulAssignment","src":"7802:93:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7883:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"7888:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7809:73:40"},"nodeType":"YulFunctionCall","src":"7809:86:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7802:3:40"}]},{"nodeType":"YulVariableDeclaration","src":"7904:71:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7969:5:40"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7919:49:40"},"nodeType":"YulFunctionCall","src":"7919:56:40"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7908:7:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7984:21:40","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7998:7:40"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7988:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"8074:224:40","statements":[{"nodeType":"YulVariableDeclaration","src":"8088:34:40","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8115:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8109:5:40"},"nodeType":"YulFunctionCall","src":"8109:13:40"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8092:13:40","type":""}]},{"nodeType":"YulAssignment","src":"8135:70:40","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8186:13:40"},{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:40"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8142:43:40"},"nodeType":"YulFunctionCall","src":"8142:63:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8135:3:40"}]},{"nodeType":"YulAssignment","src":"8218:70:40","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8281:6:40"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8228:52:40"},"nodeType":"YulFunctionCall","src":"8228:60:40"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8218:6:40"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8036:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"8039:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8033:2:40"},"nodeType":"YulFunctionCall","src":"8033:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8047:18:40","statements":[{"nodeType":"YulAssignment","src":"8049:14:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8058:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"8061:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:40"},"nodeType":"YulFunctionCall","src":"8054:9:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8049:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"8018:14:40","statements":[{"nodeType":"YulVariableDeclaration","src":"8020:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"8029:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8024:1:40","type":""}]}]},"src":"8014:284:40"},{"nodeType":"YulAssignment","src":"8307:10:40","value":{"name":"pos","nodeType":"YulIdentifier","src":"8314:3:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8307:3:40"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7694:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7701:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7710:3:40","type":""}],"src":"7591:732:40"},{"body":{"nodeType":"YulBlock","src":"8683:861:40","statements":[{"nodeType":"YulAssignment","src":"8693:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8705:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8716:3:40","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8701:3:40"},"nodeType":"YulFunctionCall","src":"8701:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8693:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8785:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8796:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8781:3:40"},"nodeType":"YulFunctionCall","src":"8781:17:40"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8730:41:40"},"nodeType":"YulFunctionCall","src":"8730:69:40"},"nodeType":"YulExpressionStatement","src":"8730:69:40"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8820:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8831:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:40"},"nodeType":"YulFunctionCall","src":"8816:18:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8840:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8846:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8836:3:40"},"nodeType":"YulFunctionCall","src":"8836:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8809:6:40"},"nodeType":"YulFunctionCall","src":"8809:48:40"},"nodeType":"YulExpressionStatement","src":"8809:48:40"},{"nodeType":"YulAssignment","src":"8866:86:40","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8938:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:63:40"},"nodeType":"YulFunctionCall","src":"8874:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8866:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8984:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:40"},"nodeType":"YulFunctionCall","src":"8969:18:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8993:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8999:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8989:3:40"},"nodeType":"YulFunctionCall","src":"8989:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8962:6:40"},"nodeType":"YulFunctionCall","src":"8962:48:40"},"nodeType":"YulExpressionStatement","src":"8962:48:40"},{"nodeType":"YulAssignment","src":"9019:86:40","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9091:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9027:63:40"},"nodeType":"YulFunctionCall","src":"9027:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9019:4:40"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9159:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9172:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9183:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:40"},"nodeType":"YulFunctionCall","src":"9168:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9115:43:40"},"nodeType":"YulFunctionCall","src":"9115:72:40"},"nodeType":"YulExpressionStatement","src":"9115:72:40"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9241:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9254:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9265:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9250:3:40"},"nodeType":"YulFunctionCall","src":"9250:19:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9197:43:40"},"nodeType":"YulFunctionCall","src":"9197:73:40"},"nodeType":"YulExpressionStatement","src":"9197:73:40"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9324:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9337:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9348:3:40","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9333:3:40"},"nodeType":"YulFunctionCall","src":"9333:19:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9280:43:40"},"nodeType":"YulFunctionCall","src":"9280:73:40"},"nodeType":"YulExpressionStatement","src":"9280:73:40"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9374:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9385:3:40","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:40"},"nodeType":"YulFunctionCall","src":"9370:19:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9395:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"9401:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9391:3:40"},"nodeType":"YulFunctionCall","src":"9391:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9363:6:40"},"nodeType":"YulFunctionCall","src":"9363:49:40"},"nodeType":"YulExpressionStatement","src":"9363:49:40"},{"nodeType":"YulAssignment","src":"9421:116:40","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9523:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"9532:4:40"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9429:93:40"},"nodeType":"YulFunctionCall","src":"9429:108:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9421:4:40"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8607:9:40","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8619:6:40","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8627:6:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8635:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8643:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8651:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8659:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8667:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8678:4:40","type":""}],"src":"8329:1215:40"},{"body":{"nodeType":"YulBlock","src":"9616:263:40","statements":[{"body":{"nodeType":"YulBlock","src":"9662:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9664:77:40"},"nodeType":"YulFunctionCall","src":"9664:79:40"},"nodeType":"YulExpressionStatement","src":"9664:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9637:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"9646:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9633:3:40"},"nodeType":"YulFunctionCall","src":"9633:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9629:3:40"},"nodeType":"YulFunctionCall","src":"9629:32:40"},"nodeType":"YulIf","src":"9626:119:40"},{"nodeType":"YulBlock","src":"9755:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"9770:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"9784:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9774:6:40","type":""}]},{"nodeType":"YulAssignment","src":"9799:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9834:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"9845:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9830:3:40"},"nodeType":"YulFunctionCall","src":"9830:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9854:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9809:20:40"},"nodeType":"YulFunctionCall","src":"9809:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9799:6:40"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9586:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9597:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9609:6:40","type":""}],"src":"9550:329:40"},{"body":{"nodeType":"YulBlock","src":"9929:53:40","statements":[{"nodeType":"YulAssignment","src":"9939:37:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9954:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"9961:14:40","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9950:3:40"},"nodeType":"YulFunctionCall","src":"9950:26:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9939:7:40"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9911:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9921:7:40","type":""}],"src":"9885:97:40"},{"body":{"nodeType":"YulBlock","src":"10051:52:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10068:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10090:5:40"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"10073:16:40"},"nodeType":"YulFunctionCall","src":"10073:23:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:40"},"nodeType":"YulFunctionCall","src":"10061:36:40"},"nodeType":"YulExpressionStatement","src":"10061:36:40"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10039:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10046:3:40","type":""}],"src":"9988:115:40"},{"body":{"nodeType":"YulBlock","src":"10205:122:40","statements":[{"nodeType":"YulAssignment","src":"10215:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:40"},"nodeType":"YulFunctionCall","src":"10223:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10293:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10317:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10302:3:40"},"nodeType":"YulFunctionCall","src":"10302:17:40"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"10251:41:40"},"nodeType":"YulFunctionCall","src":"10251:69:40"},"nodeType":"YulExpressionStatement","src":"10251:69:40"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10189:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:40","type":""}],"src":"10109:218:40"},{"body":{"nodeType":"YulBlock","src":"10374:77:40","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:40"},"nodeType":"YulFunctionCall","src":"10431:12:40"},"nodeType":"YulExpressionStatement","src":"10431:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10397:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10404:15:40"},"nodeType":"YulFunctionCall","src":"10404:22:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10394:2:40"},"nodeType":"YulFunctionCall","src":"10394:33:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10387:6:40"},"nodeType":"YulFunctionCall","src":"10387:41:40"},"nodeType":"YulIf","src":"10384:61:40"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10367:5:40","type":""}],"src":"10333:118:40"},{"body":{"nodeType":"YulBlock","src":"10507:85:40","statements":[{"nodeType":"YulAssignment","src":"10517:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10539:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10526:12:40"},"nodeType":"YulFunctionCall","src":"10526:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10517:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10580:5:40"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"10555:24:40"},"nodeType":"YulFunctionCall","src":"10555:31:40"},"nodeType":"YulExpressionStatement","src":"10555:31:40"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10485:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"10493:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10501:5:40","type":""}],"src":"10457:135:40"},{"body":{"nodeType":"YulBlock","src":"10641:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"10698:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10707:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10710:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10700:6:40"},"nodeType":"YulFunctionCall","src":"10700:12:40"},"nodeType":"YulExpressionStatement","src":"10700:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10664:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10689:5:40"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10671:17:40"},"nodeType":"YulFunctionCall","src":"10671:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10661:2:40"},"nodeType":"YulFunctionCall","src":"10661:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10654:6:40"},"nodeType":"YulFunctionCall","src":"10654:43:40"},"nodeType":"YulIf","src":"10651:63:40"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10634:5:40","type":""}],"src":"10598:122:40"},{"body":{"nodeType":"YulBlock","src":"10778:87:40","statements":[{"nodeType":"YulAssignment","src":"10788:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10810:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10797:12:40"},"nodeType":"YulFunctionCall","src":"10797:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10788:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10853:5:40"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10826:26:40"},"nodeType":"YulFunctionCall","src":"10826:33:40"},"nodeType":"YulExpressionStatement","src":"10826:33:40"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10756:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"10764:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10772:5:40","type":""}],"src":"10726:139:40"},{"body":{"nodeType":"YulBlock","src":"11020:904:40","statements":[{"body":{"nodeType":"YulBlock","src":"11067:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11069:77:40"},"nodeType":"YulFunctionCall","src":"11069:79:40"},"nodeType":"YulExpressionStatement","src":"11069:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11041:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11037:3:40"},"nodeType":"YulFunctionCall","src":"11037:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"11062:3:40","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11033:3:40"},"nodeType":"YulFunctionCall","src":"11033:33:40"},"nodeType":"YulIf","src":"11030:120:40"},{"nodeType":"YulBlock","src":"11160:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11175:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11189:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11179:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11204:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11239:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11250:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11235:3:40"},"nodeType":"YulFunctionCall","src":"11235:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11259:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11214:20:40"},"nodeType":"YulFunctionCall","src":"11214:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11204:6:40"}]}]},{"nodeType":"YulBlock","src":"11287:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11302:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11316:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11306:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11332:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11367:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11378:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11363:3:40"},"nodeType":"YulFunctionCall","src":"11363:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11387:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11342:20:40"},"nodeType":"YulFunctionCall","src":"11342:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11332:6:40"}]}]},{"nodeType":"YulBlock","src":"11415:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11430:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11444:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11434:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11460:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11495:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11506:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11491:3:40"},"nodeType":"YulFunctionCall","src":"11491:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11515:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11470:20:40"},"nodeType":"YulFunctionCall","src":"11470:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11460:6:40"}]}]},{"nodeType":"YulBlock","src":"11543:116:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11558:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11572:2:40","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11562:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11588:61:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11632:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:40"},"nodeType":"YulFunctionCall","src":"11617:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11641:7:40"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11598:18:40"},"nodeType":"YulFunctionCall","src":"11598:51:40"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11588:6:40"}]}]},{"nodeType":"YulBlock","src":"11669:119:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11684:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11698:3:40","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11688:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11715:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11750:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11761:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11746:3:40"},"nodeType":"YulFunctionCall","src":"11746:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11770:7:40"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11725:20:40"},"nodeType":"YulFunctionCall","src":"11725:53:40"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11715:6:40"}]}]},{"nodeType":"YulBlock","src":"11798:119:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11813:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11827:3:40","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11817:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11844:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11879:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11890:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11875:3:40"},"nodeType":"YulFunctionCall","src":"11875:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11899:7:40"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11854:20:40"},"nodeType":"YulFunctionCall","src":"11854:53:40"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11844:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10950:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10961:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10973:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10981:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10989:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10997:6:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11005:6:40","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11013:6:40","type":""}],"src":"10871:1053:40"},{"body":{"nodeType":"YulBlock","src":"12096:1033:40","statements":[{"body":{"nodeType":"YulBlock","src":"12143:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12145:77:40"},"nodeType":"YulFunctionCall","src":"12145:79:40"},"nodeType":"YulExpressionStatement","src":"12145:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12117:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"12126:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12113:3:40"},"nodeType":"YulFunctionCall","src":"12113:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"12138:3:40","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12109:3:40"},"nodeType":"YulFunctionCall","src":"12109:33:40"},"nodeType":"YulIf","src":"12106:120:40"},{"nodeType":"YulBlock","src":"12236:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12251:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12265:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12255:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12280:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12315:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12326:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12311:3:40"},"nodeType":"YulFunctionCall","src":"12311:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12335:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12290:20:40"},"nodeType":"YulFunctionCall","src":"12290:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12280:6:40"}]}]},{"nodeType":"YulBlock","src":"12363:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12378:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12392:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12382:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12408:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12443:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12454:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12439:3:40"},"nodeType":"YulFunctionCall","src":"12439:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12463:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12418:20:40"},"nodeType":"YulFunctionCall","src":"12418:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12408:6:40"}]}]},{"nodeType":"YulBlock","src":"12491:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12506:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12520:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12510:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12536:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12571:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12582:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12567:3:40"},"nodeType":"YulFunctionCall","src":"12567:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12591:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12546:20:40"},"nodeType":"YulFunctionCall","src":"12546:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12536:6:40"}]}]},{"nodeType":"YulBlock","src":"12619:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12634:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12648:2:40","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12638:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12664:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12699:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12710:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12695:3:40"},"nodeType":"YulFunctionCall","src":"12695:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12719:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12674:20:40"},"nodeType":"YulFunctionCall","src":"12674:53:40"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12664:6:40"}]}]},{"nodeType":"YulBlock","src":"12747:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12762:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12776:3:40","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12793:61:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12826:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12837:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12822:3:40"},"nodeType":"YulFunctionCall","src":"12822:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12846:7:40"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"12803:18:40"},"nodeType":"YulFunctionCall","src":"12803:51:40"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12793:6:40"}]}]},{"nodeType":"YulBlock","src":"12874:119:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12889:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12903:3:40","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12893:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12920:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12955:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12966:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12951:3:40"},"nodeType":"YulFunctionCall","src":"12951:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12975:7:40"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12930:20:40"},"nodeType":"YulFunctionCall","src":"12930:53:40"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12920:6:40"}]}]},{"nodeType":"YulBlock","src":"13003:119:40","statements":[{"nodeType":"YulVariableDeclaration","src":"13018:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"13032:3:40","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13022:6:40","type":""}]},{"nodeType":"YulAssignment","src":"13049:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13084:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"13095:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13080:3:40"},"nodeType":"YulFunctionCall","src":"13080:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13104:7:40"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13059:20:40"},"nodeType":"YulFunctionCall","src":"13059:53:40"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13049:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12018:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12029:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12041:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12049:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12057:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12065:6:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12073:6:40","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12081:6:40","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12089:6:40","type":""}],"src":"11930:1199:40"},{"body":{"nodeType":"YulBlock","src":"13218:391:40","statements":[{"body":{"nodeType":"YulBlock","src":"13264:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13266:77:40"},"nodeType":"YulFunctionCall","src":"13266:79:40"},"nodeType":"YulExpressionStatement","src":"13266:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13239:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"13248:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13235:3:40"},"nodeType":"YulFunctionCall","src":"13235:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"13260:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13231:3:40"},"nodeType":"YulFunctionCall","src":"13231:32:40"},"nodeType":"YulIf","src":"13228:119:40"},{"nodeType":"YulBlock","src":"13357:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"13372:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"13386:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13376:6:40","type":""}]},{"nodeType":"YulAssignment","src":"13401:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"13447:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13432:3:40"},"nodeType":"YulFunctionCall","src":"13432:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13456:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13411:20:40"},"nodeType":"YulFunctionCall","src":"13411:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13401:6:40"}]}]},{"nodeType":"YulBlock","src":"13484:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"13499:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"13513:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13503:6:40","type":""}]},{"nodeType":"YulAssignment","src":"13529:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13564:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"13575:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13560:3:40"},"nodeType":"YulFunctionCall","src":"13560:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13584:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13539:20:40"},"nodeType":"YulFunctionCall","src":"13539:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13529:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13180:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13191:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13203:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13211:6:40","type":""}],"src":"13135:474:40"},{"body":{"nodeType":"YulBlock","src":"13657:78:40","statements":[{"body":{"nodeType":"YulBlock","src":"13713:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13722:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13725:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13715:6:40"},"nodeType":"YulFunctionCall","src":"13715:12:40"},"nodeType":"YulExpressionStatement","src":"13715:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13680:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13704:5:40"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13687:16:40"},"nodeType":"YulFunctionCall","src":"13687:23:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13677:2:40"},"nodeType":"YulFunctionCall","src":"13677:34:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13670:6:40"},"nodeType":"YulFunctionCall","src":"13670:42:40"},"nodeType":"YulIf","src":"13667:62:40"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13650:5:40","type":""}],"src":"13615:120:40"},{"body":{"nodeType":"YulBlock","src":"13792:86:40","statements":[{"nodeType":"YulAssignment","src":"13802:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13824:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13811:12:40"},"nodeType":"YulFunctionCall","src":"13811:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13866:5:40"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"13840:25:40"},"nodeType":"YulFunctionCall","src":"13840:32:40"},"nodeType":"YulExpressionStatement","src":"13840:32:40"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13770:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"13778:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13786:5:40","type":""}],"src":"13741:137:40"},{"body":{"nodeType":"YulBlock","src":"13966:390:40","statements":[{"body":{"nodeType":"YulBlock","src":"14012:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14014:77:40"},"nodeType":"YulFunctionCall","src":"14014:79:40"},"nodeType":"YulExpressionStatement","src":"14014:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13987:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"13996:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13983:3:40"},"nodeType":"YulFunctionCall","src":"13983:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"14008:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13979:3:40"},"nodeType":"YulFunctionCall","src":"13979:32:40"},"nodeType":"YulIf","src":"13976:119:40"},{"nodeType":"YulBlock","src":"14105:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"14120:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"14134:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14124:6:40","type":""}]},{"nodeType":"YulAssignment","src":"14149:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14184:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"14195:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:40"},"nodeType":"YulFunctionCall","src":"14180:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14204:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14159:20:40"},"nodeType":"YulFunctionCall","src":"14159:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14149:6:40"}]}]},{"nodeType":"YulBlock","src":"14232:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"14247:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"14261:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14251:6:40","type":""}]},{"nodeType":"YulAssignment","src":"14277:62:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14311:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"14322:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:40"},"nodeType":"YulFunctionCall","src":"14307:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14331:7:40"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14287:19:40"},"nodeType":"YulFunctionCall","src":"14287:52:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14277:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13928:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13939:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13951:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13959:6:40","type":""}],"src":"13884:472:40"},{"body":{"nodeType":"YulBlock","src":"14415:52:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14432:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14454:5:40"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14437:16:40"},"nodeType":"YulFunctionCall","src":"14437:23:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14425:6:40"},"nodeType":"YulFunctionCall","src":"14425:36:40"},"nodeType":"YulExpressionStatement","src":"14425:36:40"}]},"name":"abi_encode_t_uint48_to_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14403:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14410:3:40","type":""}],"src":"14362:105:40"},{"body":{"nodeType":"YulBlock","src":"14518:93:40","statements":[{"nodeType":"YulAssignment","src":"14528:77:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14543:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"14550:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14539:3:40"},"nodeType":"YulFunctionCall","src":"14539:66:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14528:7:40"}]}]},"name":"cleanup_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14500:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14510:7:40","type":""}],"src":"14473:138:40"},{"body":{"nodeType":"YulBlock","src":"14672:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14689:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14712:5:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"14694:17:40"},"nodeType":"YulFunctionCall","src":"14694:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14682:6:40"},"nodeType":"YulFunctionCall","src":"14682:37:40"},"nodeType":"YulExpressionStatement","src":"14682:37:40"}]},"name":"abi_encode_t_uint208_to_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14660:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14667:3:40","type":""}],"src":"14617:108:40"},{"body":{"nodeType":"YulBlock","src":"14935:391:40","statements":[{"nodeType":"YulVariableDeclaration","src":"14945:26:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14961:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"14966:4:40","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14957:3:40"},"nodeType":"YulFunctionCall","src":"14957:14:40"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14949:4:40","type":""}]},{"nodeType":"YulBlock","src":"14981:162:40","statements":[{"nodeType":"YulVariableDeclaration","src":"15016:43:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15046:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"15053:4:40","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15042:3:40"},"nodeType":"YulFunctionCall","src":"15042:16:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15036:5:40"},"nodeType":"YulFunctionCall","src":"15036:23:40"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15020:12:40","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15104:12:40"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15122:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"15127:4:40","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15118:3:40"},"nodeType":"YulFunctionCall","src":"15118:14:40"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nodeType":"YulIdentifier","src":"15072:31:40"},"nodeType":"YulFunctionCall","src":"15072:61:40"},"nodeType":"YulExpressionStatement","src":"15072:61:40"}]},{"nodeType":"YulBlock","src":"15153:166:40","statements":[{"nodeType":"YulVariableDeclaration","src":"15190:43:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15220:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"15227:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15216:3:40"},"nodeType":"YulFunctionCall","src":"15216:16:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15210:5:40"},"nodeType":"YulFunctionCall","src":"15210:23:40"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15194:12:40","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15280:12:40"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15298:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"15303:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15294:3:40"},"nodeType":"YulFunctionCall","src":"15294:14:40"}],"functionName":{"name":"abi_encode_t_uint208_to_t_uint208","nodeType":"YulIdentifier","src":"15246:33:40"},"nodeType":"YulFunctionCall","src":"15246:63:40"},"nodeType":"YulExpressionStatement","src":"15246:63:40"}]}]},"name":"abi_encode_t_struct$_Checkpoint208_$8197_memory_ptr_to_t_struct$_Checkpoint208_$8197_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14922:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14929:3:40","type":""}],"src":"14807:519:40"},{"body":{"nodeType":"YulBlock","src":"15492:186:40","statements":[{"nodeType":"YulAssignment","src":"15502:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15514:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"15525:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15510:3:40"},"nodeType":"YulFunctionCall","src":"15510:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15644:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15657:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"15668:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15653:3:40"},"nodeType":"YulFunctionCall","src":"15653:17:40"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint208_$8197_memory_ptr_to_t_struct$_Checkpoint208_$8197_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15538:105:40"},"nodeType":"YulFunctionCall","src":"15538:133:40"},"nodeType":"YulExpressionStatement","src":"15538:133:40"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$8197_memory_ptr__to_t_struct$_Checkpoint208_$8197_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15464:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15476:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15487:4:40","type":""}],"src":"15332:346:40"},{"body":{"nodeType":"YulBlock","src":"15712:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15729:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15732:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15722:6:40"},"nodeType":"YulFunctionCall","src":"15722:88:40"},"nodeType":"YulExpressionStatement","src":"15722:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15826:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15829:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15819:6:40"},"nodeType":"YulFunctionCall","src":"15819:15:40"},"nodeType":"YulExpressionStatement","src":"15819:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15850:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15853:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15843:6:40"},"nodeType":"YulFunctionCall","src":"15843:15:40"},"nodeType":"YulExpressionStatement","src":"15843:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15684:180:40"},{"body":{"nodeType":"YulBlock","src":"15921:269:40","statements":[{"nodeType":"YulAssignment","src":"15931:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15945:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"15951:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15941:3:40"},"nodeType":"YulFunctionCall","src":"15941:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15931:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"15962:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15992:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"15998:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15988:3:40"},"nodeType":"YulFunctionCall","src":"15988:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15966:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"16039:51:40","statements":[{"nodeType":"YulAssignment","src":"16053:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16067:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"16075:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16063:3:40"},"nodeType":"YulFunctionCall","src":"16063:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16053:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16019:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16012:6:40"},"nodeType":"YulFunctionCall","src":"16012:26:40"},"nodeType":"YulIf","src":"16009:81:40"},{"body":{"nodeType":"YulBlock","src":"16142:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16156:16:40"},"nodeType":"YulFunctionCall","src":"16156:18:40"},"nodeType":"YulExpressionStatement","src":"16156:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16106:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16129:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"16137:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16126:2:40"},"nodeType":"YulFunctionCall","src":"16126:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16103:2:40"},"nodeType":"YulFunctionCall","src":"16103:38:40"},"nodeType":"YulIf","src":"16100:84:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15905:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15914:6:40","type":""}],"src":"15870:320:40"},{"body":{"nodeType":"YulBlock","src":"16320:204:40","statements":[{"nodeType":"YulAssignment","src":"16330:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16342:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16353:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16338:3:40"},"nodeType":"YulFunctionCall","src":"16338:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16330:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16410:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16423:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16434:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16419:3:40"},"nodeType":"YulFunctionCall","src":"16419:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16366:43:40"},"nodeType":"YulFunctionCall","src":"16366:71:40"},"nodeType":"YulExpressionStatement","src":"16366:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16489:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16502:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16513:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16498:3:40"},"nodeType":"YulFunctionCall","src":"16498:18:40"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"16447:41:40"},"nodeType":"YulFunctionCall","src":"16447:70:40"},"nodeType":"YulExpressionStatement","src":"16447:70:40"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16284:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16296:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16304:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16315:4:40","type":""}],"src":"16196:328:40"},{"body":{"nodeType":"YulBlock","src":"16558:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16575:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16578:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16568:6:40"},"nodeType":"YulFunctionCall","src":"16568:88:40"},"nodeType":"YulExpressionStatement","src":"16568:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16672:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16675:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16665:6:40"},"nodeType":"YulFunctionCall","src":"16665:15:40"},"nodeType":"YulExpressionStatement","src":"16665:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16696:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16699:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16689:6:40"},"nodeType":"YulFunctionCall","src":"16689:15:40"},"nodeType":"YulExpressionStatement","src":"16689:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16530:180:40"},{"body":{"nodeType":"YulBlock","src":"16898:371:40","statements":[{"nodeType":"YulAssignment","src":"16908:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16920:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16931:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16916:3:40"},"nodeType":"YulFunctionCall","src":"16916:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16908:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16989:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17002:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17013:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16998:3:40"},"nodeType":"YulFunctionCall","src":"16998:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16945:43:40"},"nodeType":"YulFunctionCall","src":"16945:71:40"},"nodeType":"YulExpressionStatement","src":"16945:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17070:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17083:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17094:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17079:3:40"},"nodeType":"YulFunctionCall","src":"17079:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17026:43:40"},"nodeType":"YulFunctionCall","src":"17026:72:40"},"nodeType":"YulExpressionStatement","src":"17026:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17152:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17165:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17176:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17161:3:40"},"nodeType":"YulFunctionCall","src":"17161:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17108:43:40"},"nodeType":"YulFunctionCall","src":"17108:72:40"},"nodeType":"YulExpressionStatement","src":"17108:72:40"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17234:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17247:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17258:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17243:3:40"},"nodeType":"YulFunctionCall","src":"17243:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17190:43:40"},"nodeType":"YulFunctionCall","src":"17190:72:40"},"nodeType":"YulExpressionStatement","src":"17190:72:40"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16846:9:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16858:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16866:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16874:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16882:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16893:4:40","type":""}],"src":"16716:553:40"},{"body":{"nodeType":"YulBlock","src":"17513:537:40","statements":[{"nodeType":"YulAssignment","src":"17523:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17535:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17546:3:40","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17531:3:40"},"nodeType":"YulFunctionCall","src":"17531:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17523:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17604:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17617:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17628:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17613:3:40"},"nodeType":"YulFunctionCall","src":"17613:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17560:43:40"},"nodeType":"YulFunctionCall","src":"17560:71:40"},"nodeType":"YulExpressionStatement","src":"17560:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17685:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17698:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17709:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17694:3:40"},"nodeType":"YulFunctionCall","src":"17694:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17641:43:40"},"nodeType":"YulFunctionCall","src":"17641:72:40"},"nodeType":"YulExpressionStatement","src":"17641:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17767:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17780:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17791:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17776:3:40"},"nodeType":"YulFunctionCall","src":"17776:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17723:43:40"},"nodeType":"YulFunctionCall","src":"17723:72:40"},"nodeType":"YulExpressionStatement","src":"17723:72:40"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17849:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17862:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17873:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17858:3:40"},"nodeType":"YulFunctionCall","src":"17858:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17805:43:40"},"nodeType":"YulFunctionCall","src":"17805:72:40"},"nodeType":"YulExpressionStatement","src":"17805:72:40"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17931:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17944:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"17955:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17940:3:40"},"nodeType":"YulFunctionCall","src":"17940:19:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17887:43:40"},"nodeType":"YulFunctionCall","src":"17887:73:40"},"nodeType":"YulExpressionStatement","src":"17887:73:40"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18014:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18027:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"18038:3:40","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18023:3:40"},"nodeType":"YulFunctionCall","src":"18023:19:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17970:43:40"},"nodeType":"YulFunctionCall","src":"17970:73:40"},"nodeType":"YulExpressionStatement","src":"17970:73:40"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17445:9:40","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17457:6:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17465:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17473:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17481:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17489:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17497:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17508:4:40","type":""}],"src":"17275:775:40"},{"body":{"nodeType":"YulBlock","src":"18182:206:40","statements":[{"nodeType":"YulAssignment","src":"18192:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18204:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"18215:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18200:3:40"},"nodeType":"YulFunctionCall","src":"18200:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18192:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18272:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18285:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"18296:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18281:3:40"},"nodeType":"YulFunctionCall","src":"18281:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18228:43:40"},"nodeType":"YulFunctionCall","src":"18228:71:40"},"nodeType":"YulExpressionStatement","src":"18228:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18353:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18366:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"18377:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18362:3:40"},"nodeType":"YulFunctionCall","src":"18362:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18309:43:40"},"nodeType":"YulFunctionCall","src":"18309:72:40"},"nodeType":"YulExpressionStatement","src":"18309:72:40"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18146:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18158:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18166:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18177:4:40","type":""}],"src":"18056:332:40"},{"body":{"nodeType":"YulBlock","src":"18422:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18439:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18442:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18432:6:40"},"nodeType":"YulFunctionCall","src":"18432:88:40"},"nodeType":"YulExpressionStatement","src":"18432:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18536:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18539:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18529:6:40"},"nodeType":"YulFunctionCall","src":"18529:15:40"},"nodeType":"YulExpressionStatement","src":"18529:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18563:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18553:6:40"},"nodeType":"YulFunctionCall","src":"18553:15:40"},"nodeType":"YulExpressionStatement","src":"18553:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18394:180:40"},{"body":{"nodeType":"YulBlock","src":"18624:200:40","statements":[{"nodeType":"YulAssignment","src":"18634:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18657:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"18639:17:40"},"nodeType":"YulFunctionCall","src":"18639:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18634:1:40"}]},{"nodeType":"YulAssignment","src":"18668:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18691:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"18673:17:40"},"nodeType":"YulFunctionCall","src":"18673:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18668:1:40"}]},{"nodeType":"YulAssignment","src":"18702:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18713:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"18716:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18709:3:40"},"nodeType":"YulFunctionCall","src":"18709:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18702:3:40"}]},{"body":{"nodeType":"YulBlock","src":"18795:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18797:16:40"},"nodeType":"YulFunctionCall","src":"18797:18:40"},"nodeType":"YulExpressionStatement","src":"18797:18:40"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"18734:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"18739:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18731:2:40"},"nodeType":"YulFunctionCall","src":"18731:63:40"},"nodeType":"YulIf","src":"18728:89:40"}]},"name":"checked_add_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18611:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"18614:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18620:3:40","type":""}],"src":"18580:244:40"},{"body":{"nodeType":"YulBlock","src":"18875:202:40","statements":[{"nodeType":"YulAssignment","src":"18885:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18908:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"18890:17:40"},"nodeType":"YulFunctionCall","src":"18890:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18885:1:40"}]},{"nodeType":"YulAssignment","src":"18919:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18942:1:40"}],"functionName":{"name":"cleanup_t_uint208","nodeType":"YulIdentifier","src":"18924:17:40"},"nodeType":"YulFunctionCall","src":"18924:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18919:1:40"}]},{"nodeType":"YulAssignment","src":"18953:17:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18965:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"18968:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18961:3:40"},"nodeType":"YulFunctionCall","src":"18961:9:40"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18953:4:40"}]},{"body":{"nodeType":"YulBlock","src":"19048:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19050:16:40"},"nodeType":"YulFunctionCall","src":"19050:18:40"},"nodeType":"YulExpressionStatement","src":"19050:18:40"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"18986:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"18992:54:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18983:2:40"},"nodeType":"YulFunctionCall","src":"18983:64:40"},"nodeType":"YulIf","src":"18980:90:40"}]},"name":"checked_sub_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18861:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"18864:1:40","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18870:4:40","type":""}],"src":"18830:247:40"},{"body":{"nodeType":"YulBlock","src":"19237:288:40","statements":[{"nodeType":"YulAssignment","src":"19247:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19259:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"19270:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19255:3:40"},"nodeType":"YulFunctionCall","src":"19255:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19247:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19327:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19340:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"19351:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19336:3:40"},"nodeType":"YulFunctionCall","src":"19336:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19283:43:40"},"nodeType":"YulFunctionCall","src":"19283:71:40"},"nodeType":"YulExpressionStatement","src":"19283:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19408:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19421:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"19432:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19417:3:40"},"nodeType":"YulFunctionCall","src":"19417:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19364:43:40"},"nodeType":"YulFunctionCall","src":"19364:72:40"},"nodeType":"YulExpressionStatement","src":"19364:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19490:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19503:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"19514:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19499:3:40"},"nodeType":"YulFunctionCall","src":"19499:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19446:43:40"},"nodeType":"YulFunctionCall","src":"19446:72:40"},"nodeType":"YulExpressionStatement","src":"19446:72:40"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19193:9:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19205:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19213:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19221:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19232:4:40","type":""}],"src":"19083:442:40"},{"body":{"nodeType":"YulBlock","src":"19585:32:40","statements":[{"nodeType":"YulAssignment","src":"19595:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"19606:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19595:7:40"}]}]},"name":"cleanup_t_rational_48_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19567:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19577:7:40","type":""}],"src":"19531:86:40"},{"body":{"nodeType":"YulBlock","src":"19655:28:40","statements":[{"nodeType":"YulAssignment","src":"19665:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"19672:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19665:3:40"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19641:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19651:3:40","type":""}],"src":"19623:60:40"},{"body":{"nodeType":"YulBlock","src":"19756:89:40","statements":[{"nodeType":"YulAssignment","src":"19766:73:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19831:5:40"}],"functionName":{"name":"cleanup_t_rational_48_by_1","nodeType":"YulIdentifier","src":"19804:26:40"},"nodeType":"YulFunctionCall","src":"19804:33:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19795:8:40"},"nodeType":"YulFunctionCall","src":"19795:43:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"19779:15:40"},"nodeType":"YulFunctionCall","src":"19779:60:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19766:9:40"}]}]},"name":"convert_t_rational_48_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19736:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19746:9:40","type":""}],"src":"19689:156:40"},{"body":{"nodeType":"YulBlock","src":"19923:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19940:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19983:5:40"}],"functionName":{"name":"convert_t_rational_48_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"19945:37:40"},"nodeType":"YulFunctionCall","src":"19945:44:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19933:6:40"},"nodeType":"YulFunctionCall","src":"19933:57:40"},"nodeType":"YulExpressionStatement","src":"19933:57:40"}]},"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19911:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19918:3:40","type":""}],"src":"19851:145:40"},{"body":{"nodeType":"YulBlock","src":"20135:213:40","statements":[{"nodeType":"YulAssignment","src":"20145:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20157:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20168:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20153:3:40"},"nodeType":"YulFunctionCall","src":"20153:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20145:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20232:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20245:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20256:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20241:3:40"},"nodeType":"YulFunctionCall","src":"20241:17:40"}],"functionName":{"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20181:50:40"},"nodeType":"YulFunctionCall","src":"20181:78:40"},"nodeType":"YulExpressionStatement","src":"20181:78:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20313:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20326:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20337:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20322:3:40"},"nodeType":"YulFunctionCall","src":"20322:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20269:43:40"},"nodeType":"YulFunctionCall","src":"20269:72:40"},"nodeType":"YulExpressionStatement","src":"20269:72:40"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20099:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20111:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20119:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20130:4:40","type":""}],"src":"20002:346:40"},{"body":{"nodeType":"YulBlock","src":"20399:149:40","statements":[{"nodeType":"YulAssignment","src":"20409:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20432:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20414:17:40"},"nodeType":"YulFunctionCall","src":"20414:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20409:1:40"}]},{"nodeType":"YulAssignment","src":"20443:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20466:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20448:17:40"},"nodeType":"YulFunctionCall","src":"20448:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20443:1:40"}]},{"nodeType":"YulAssignment","src":"20477:17:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20489:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"20492:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20485:3:40"},"nodeType":"YulFunctionCall","src":"20485:9:40"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20477:4:40"}]},{"body":{"nodeType":"YulBlock","src":"20519:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20521:16:40"},"nodeType":"YulFunctionCall","src":"20521:18:40"},"nodeType":"YulExpressionStatement","src":"20521:18:40"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"20510:4:40"},{"name":"x","nodeType":"YulIdentifier","src":"20516:1:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20507:2:40"},"nodeType":"YulFunctionCall","src":"20507:11:40"},"nodeType":"YulIf","src":"20504:37:40"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20385:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"20388:1:40","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20394:4:40","type":""}],"src":"20354:194:40"},{"body":{"nodeType":"YulBlock","src":"20598:147:40","statements":[{"nodeType":"YulAssignment","src":"20608:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20631:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20613:17:40"},"nodeType":"YulFunctionCall","src":"20613:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20608:1:40"}]},{"nodeType":"YulAssignment","src":"20642:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20665:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20647:17:40"},"nodeType":"YulFunctionCall","src":"20647:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20642:1:40"}]},{"nodeType":"YulAssignment","src":"20676:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20687:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"20690:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20683:3:40"},"nodeType":"YulFunctionCall","src":"20683:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20676:3:40"}]},{"body":{"nodeType":"YulBlock","src":"20716:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20718:16:40"},"nodeType":"YulFunctionCall","src":"20718:18:40"},"nodeType":"YulExpressionStatement","src":"20718:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20708:1:40"},{"name":"sum","nodeType":"YulIdentifier","src":"20711:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20705:2:40"},"nodeType":"YulFunctionCall","src":"20705:10:40"},"nodeType":"YulIf","src":"20702:36:40"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20585:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"20588:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20594:3:40","type":""}],"src":"20554:191:40"},{"body":{"nodeType":"YulBlock","src":"20877:206:40","statements":[{"nodeType":"YulAssignment","src":"20887:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20899:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20910:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20895:3:40"},"nodeType":"YulFunctionCall","src":"20895:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20887:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20967:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20980:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20991:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20976:3:40"},"nodeType":"YulFunctionCall","src":"20976:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20923:43:40"},"nodeType":"YulFunctionCall","src":"20923:71:40"},"nodeType":"YulExpressionStatement","src":"20923:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21048:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21061:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21072:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21057:3:40"},"nodeType":"YulFunctionCall","src":"21057:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21004:43:40"},"nodeType":"YulFunctionCall","src":"21004:72:40"},"nodeType":"YulExpressionStatement","src":"21004:72:40"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20841:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20853:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20861:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20872:4:40","type":""}],"src":"20751:332:40"},{"body":{"nodeType":"YulBlock","src":"21299:454:40","statements":[{"nodeType":"YulAssignment","src":"21309:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21321:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21332:3:40","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21317:3:40"},"nodeType":"YulFunctionCall","src":"21317:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21309:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21390:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21403:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21414:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21399:3:40"},"nodeType":"YulFunctionCall","src":"21399:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21346:43:40"},"nodeType":"YulFunctionCall","src":"21346:71:40"},"nodeType":"YulExpressionStatement","src":"21346:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21471:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21484:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21495:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21480:3:40"},"nodeType":"YulFunctionCall","src":"21480:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21427:43:40"},"nodeType":"YulFunctionCall","src":"21427:72:40"},"nodeType":"YulExpressionStatement","src":"21427:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21553:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21566:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21577:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21562:3:40"},"nodeType":"YulFunctionCall","src":"21562:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21509:43:40"},"nodeType":"YulFunctionCall","src":"21509:72:40"},"nodeType":"YulExpressionStatement","src":"21509:72:40"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21635:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21648:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21659:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21644:3:40"},"nodeType":"YulFunctionCall","src":"21644:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21591:43:40"},"nodeType":"YulFunctionCall","src":"21591:72:40"},"nodeType":"YulExpressionStatement","src":"21591:72:40"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21717:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21730:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21741:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21726:3:40"},"nodeType":"YulFunctionCall","src":"21726:19:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21673:43:40"},"nodeType":"YulFunctionCall","src":"21673:73:40"},"nodeType":"YulExpressionStatement","src":"21673:73:40"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21239:9:40","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21251:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21259:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21267:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21275:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21283:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21294:4:40","type":""}],"src":"21089:664:40"},{"body":{"nodeType":"YulBlock","src":"21787:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21804:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21807:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21797:6:40"},"nodeType":"YulFunctionCall","src":"21797:88:40"},"nodeType":"YulExpressionStatement","src":"21797:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21901:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21904:4:40","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21894:6:40"},"nodeType":"YulFunctionCall","src":"21894:15:40"},"nodeType":"YulExpressionStatement","src":"21894:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21925:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21928:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21918:6:40"},"nodeType":"YulFunctionCall","src":"21918:15:40"},"nodeType":"YulExpressionStatement","src":"21918:15:40"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21759:180:40"},{"body":{"nodeType":"YulBlock","src":"22071:206:40","statements":[{"nodeType":"YulAssignment","src":"22081:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22093:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"22104:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22089:3:40"},"nodeType":"YulFunctionCall","src":"22089:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22081:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22161:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22174:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"22185:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22170:3:40"},"nodeType":"YulFunctionCall","src":"22170:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22117:43:40"},"nodeType":"YulFunctionCall","src":"22117:71:40"},"nodeType":"YulExpressionStatement","src":"22117:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22242:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22255:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"22266:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22251:3:40"},"nodeType":"YulFunctionCall","src":"22251:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22198:43:40"},"nodeType":"YulFunctionCall","src":"22198:72:40"},"nodeType":"YulExpressionStatement","src":"22198:72:40"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22035:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22047:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22055:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22066:4:40","type":""}],"src":"21945:332:40"},{"body":{"nodeType":"YulBlock","src":"22337:32:40","statements":[{"nodeType":"YulAssignment","src":"22347:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"22358:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22347:7:40"}]}]},"name":"cleanup_t_rational_32_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22319:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22329:7:40","type":""}],"src":"22283:86:40"},{"body":{"nodeType":"YulBlock","src":"22442:89:40","statements":[{"nodeType":"YulAssignment","src":"22452:73:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22517:5:40"}],"functionName":{"name":"cleanup_t_rational_32_by_1","nodeType":"YulIdentifier","src":"22490:26:40"},"nodeType":"YulFunctionCall","src":"22490:33:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22481:8:40"},"nodeType":"YulFunctionCall","src":"22481:43:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"22465:15:40"},"nodeType":"YulFunctionCall","src":"22465:60:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22452:9:40"}]}]},"name":"convert_t_rational_32_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22422:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22432:9:40","type":""}],"src":"22375:156:40"},{"body":{"nodeType":"YulBlock","src":"22609:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22626:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22669:5:40"}],"functionName":{"name":"convert_t_rational_32_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"22631:37:40"},"nodeType":"YulFunctionCall","src":"22631:44:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22619:6:40"},"nodeType":"YulFunctionCall","src":"22619:57:40"},"nodeType":"YulExpressionStatement","src":"22619:57:40"}]},"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22597:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22604:3:40","type":""}],"src":"22537:145:40"},{"body":{"nodeType":"YulBlock","src":"22821:213:40","statements":[{"nodeType":"YulAssignment","src":"22831:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22843:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"22854:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22839:3:40"},"nodeType":"YulFunctionCall","src":"22839:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22831:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22918:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22931:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"22942:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22927:3:40"},"nodeType":"YulFunctionCall","src":"22927:17:40"}],"functionName":{"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"22867:50:40"},"nodeType":"YulFunctionCall","src":"22867:78:40"},"nodeType":"YulExpressionStatement","src":"22867:78:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22999:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23012:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23023:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23008:3:40"},"nodeType":"YulFunctionCall","src":"23008:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22955:43:40"},"nodeType":"YulFunctionCall","src":"22955:72:40"},"nodeType":"YulExpressionStatement","src":"22955:72:40"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22785:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22797:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22805:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22816:4:40","type":""}],"src":"22688:346:40"},{"body":{"nodeType":"YulBlock","src":"23218:367:40","statements":[{"nodeType":"YulAssignment","src":"23228:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23240:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23251:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23236:3:40"},"nodeType":"YulFunctionCall","src":"23236:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23228:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23309:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23322:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23333:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23318:3:40"},"nodeType":"YulFunctionCall","src":"23318:17:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23265:43:40"},"nodeType":"YulFunctionCall","src":"23265:71:40"},"nodeType":"YulExpressionStatement","src":"23265:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23386:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23399:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23410:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23395:3:40"},"nodeType":"YulFunctionCall","src":"23395:18:40"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"23346:39:40"},"nodeType":"YulFunctionCall","src":"23346:68:40"},"nodeType":"YulExpressionStatement","src":"23346:68:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23468:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23481:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23492:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23477:3:40"},"nodeType":"YulFunctionCall","src":"23477:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23424:43:40"},"nodeType":"YulFunctionCall","src":"23424:72:40"},"nodeType":"YulExpressionStatement","src":"23424:72:40"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23550:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23563:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"23574:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23559:3:40"},"nodeType":"YulFunctionCall","src":"23559:18:40"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23506:43:40"},"nodeType":"YulFunctionCall","src":"23506:72:40"},"nodeType":"YulExpressionStatement","src":"23506:72:40"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23166:9:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23178:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23186:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23194:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23202:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23213:4:40","type":""}],"src":"23040:545:40"},{"body":{"nodeType":"YulBlock","src":"23619:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23636:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23639:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23629:6:40"},"nodeType":"YulFunctionCall","src":"23629:88:40"},"nodeType":"YulExpressionStatement","src":"23629:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23733:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23736:4:40","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23726:6:40"},"nodeType":"YulFunctionCall","src":"23726:15:40"},"nodeType":"YulExpressionStatement","src":"23726:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23757:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23760:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23750:6:40"},"nodeType":"YulFunctionCall","src":"23750:15:40"},"nodeType":"YulExpressionStatement","src":"23750:15:40"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"23591:180:40"},{"body":{"nodeType":"YulBlock","src":"23805:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23822:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23825:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23815:6:40"},"nodeType":"YulFunctionCall","src":"23815:88:40"},"nodeType":"YulExpressionStatement","src":"23815:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23919:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23922:4:40","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23912:6:40"},"nodeType":"YulFunctionCall","src":"23912:15:40"},"nodeType":"YulExpressionStatement","src":"23912:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23943:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23946:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23936:6:40"},"nodeType":"YulFunctionCall","src":"23936:15:40"},"nodeType":"YulExpressionStatement","src":"23936:15:40"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"23777:180:40"},{"body":{"nodeType":"YulBlock","src":"24005:143:40","statements":[{"nodeType":"YulAssignment","src":"24015:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24038:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24020:17:40"},"nodeType":"YulFunctionCall","src":"24020:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24015:1:40"}]},{"nodeType":"YulAssignment","src":"24049:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24072:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24054:17:40"},"nodeType":"YulFunctionCall","src":"24054:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24049:1:40"}]},{"body":{"nodeType":"YulBlock","src":"24096:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24098:16:40"},"nodeType":"YulFunctionCall","src":"24098:18:40"},"nodeType":"YulExpressionStatement","src":"24098:18:40"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24093:1:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24086:6:40"},"nodeType":"YulFunctionCall","src":"24086:9:40"},"nodeType":"YulIf","src":"24083:35:40"},{"nodeType":"YulAssignment","src":"24128:14:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24137:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"24140:1:40"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24133:3:40"},"nodeType":"YulFunctionCall","src":"24133:9:40"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24128:1:40"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23994:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"23997:1:40","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24003:1:40","type":""}],"src":"23963:185:40"},{"body":{"nodeType":"YulBlock","src":"24209:32:40","statements":[{"nodeType":"YulAssignment","src":"24219:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"24230:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24219:7:40"}]}]},"name":"cleanup_t_rational_208_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24191:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24201:7:40","type":""}],"src":"24154:87:40"},{"body":{"nodeType":"YulBlock","src":"24315:90:40","statements":[{"nodeType":"YulAssignment","src":"24325:74:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24391:5:40"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nodeType":"YulIdentifier","src":"24363:27:40"},"nodeType":"YulFunctionCall","src":"24363:34:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"24354:8:40"},"nodeType":"YulFunctionCall","src":"24354:44:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"24338:15:40"},"nodeType":"YulFunctionCall","src":"24338:61:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24325:9:40"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24295:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24305:9:40","type":""}],"src":"24247:158:40"},{"body":{"nodeType":"YulBlock","src":"24484:74:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24501:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24545:5:40"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"24506:38:40"},"nodeType":"YulFunctionCall","src":"24506:45:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24494:6:40"},"nodeType":"YulFunctionCall","src":"24494:58:40"},"nodeType":"YulExpressionStatement","src":"24494:58:40"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24472:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24479:3:40","type":""}],"src":"24411:147:40"},{"body":{"nodeType":"YulBlock","src":"24698:214:40","statements":[{"nodeType":"YulAssignment","src":"24708:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24720:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"24731:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24716:3:40"},"nodeType":"YulFunctionCall","src":"24716:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24708:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24796:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24809:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"24820:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24805:3:40"},"nodeType":"YulFunctionCall","src":"24805:17:40"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"24744:51:40"},"nodeType":"YulFunctionCall","src":"24744:79:40"},"nodeType":"YulExpressionStatement","src":"24744:79:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24877:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24890:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"24901:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24886:3:40"},"nodeType":"YulFunctionCall","src":"24886:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24833:43:40"},"nodeType":"YulFunctionCall","src":"24833:72:40"},"nodeType":"YulExpressionStatement","src":"24833:72:40"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24662:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24674:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24682:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24693:4:40","type":""}],"src":"24564:348:40"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint208_to_t_uint208(value, pos) {\n        mstore(pos, cleanup_t_uint208(value))\n    }\n\n    // struct Checkpoints.Checkpoint208 -> struct Checkpoints.Checkpoint208\n    function abi_encode_t_struct$_Checkpoint208_$8197_memory_ptr_to_t_struct$_Checkpoint208_$8197_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // _key\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint208_to_t_uint208(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint208_$8197_memory_ptr__to_t_struct$_Checkpoint208_$8197_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint208_$8197_memory_ptr_to_t_struct$_Checkpoint208_$8197_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_48_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_48_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_48_by_1(value)))\n    }\n\n    function abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_48_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_32_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_32_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_32_by_1(value)))\n    }\n\n    function abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_32_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4428":[{"length":32,"start":4583}],"4430":[{"length":32,"start":4542}],"4432":[{"length":32,"start":4456}],"4434":[{"length":32,"start":7126}],"4436":[{"length":32,"start":7159}],"4439":[{"length":32,"start":6043}],"4442":[{"length":32,"start":6102}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101da5760003560e01c8063715018a61161010457806395d89b41116100a2578063d505accf11610071578063d505accf14610563578063dd62ed3e1461057f578063f1127ed8146105af578063f2fde38b146105df576101da565b806395d89b41146104c95780639ab24eb0146104e7578063a9059cbb14610517578063c3cda52014610547576101da565b806384b0196e116100de57806384b0196e146104395780638da5cb5b1461045d5780638e539e8c1461047b57806391ddadf4146104ab576101da565b8063715018a6146103f55780637ecebe00146103ff5780638456cb591461042f576101da565b80633f4ba83a1161017c5780635c19a95c1161014b5780635c19a95c1461035b5780635c975abb146103775780636fcfff451461039557806370a08231146103c5576101da565b80633f4ba83a146102e757806340c10f19146102f15780634bf5d7e91461030d578063587cde1e1461032b576101da565b806323b872dd116101b857806323b872dd1461024b578063313ce5671461027b5780633644e515146102995780633a46b1a8146102b7576101da565b806306fdde03146101df578063095ea7b3146101fd57806318160ddd1461022d575b600080fd5b6101e76105fb565b6040516101f49190613074565b60405180910390f35b6102176004803603810190610212919061312f565b61068d565b604051610224919061318a565b60405180910390f35b6102356106b0565b60405161024291906131b4565b60405180910390f35b610265600480360381019061026091906131cf565b6106ba565b604051610272919061318a565b60405180910390f35b6102836106e9565b604051610290919061323e565b60405180910390f35b6102a16106f2565b6040516102ae9190613272565b60405180910390f35b6102d160048036038101906102cc919061312f565b610701565b6040516102de91906131b4565b60405180910390f35b6102ef6107da565b005b61030b6004803603810190610306919061312f565b6107ec565b005b610315610802565b6040516103229190613074565b60405180910390f35b6103456004803603810190610340919061328d565b610896565b60405161035291906132c9565b60405180910390f35b6103756004803603810190610370919061328d565b6108ff565b005b61037f610919565b60405161038c919061318a565b60405180910390f35b6103af60048036038101906103aa919061328d565b610930565b6040516103bc9190613303565b60405180910390f35b6103df60048036038101906103da919061328d565b610942565b6040516103ec91906131b4565b60405180910390f35b6103fd61098a565b005b6104196004803603810190610414919061328d565b61099e565b60405161042691906131b4565b60405180910390f35b6104376109b0565b005b6104416109c2565b6040516104549796959493929190613417565b60405180910390f35b610465610a6c565b60405161047291906132c9565b60405180910390f35b6104956004803603810190610490919061349b565b610a96565b6040516104a291906131b4565b60405180910390f35b6104b3610b31565b6040516104c091906134e9565b60405180910390f35b6104d1610b40565b6040516104de9190613074565b60405180910390f35b61050160048036038101906104fc919061328d565b610bd2565b60405161050e91906131b4565b60405180910390f35b610531600480360381019061052c919061312f565b610c3e565b60405161053e919061318a565b60405180910390f35b610561600480360381019061055c919061355c565b610c61565b005b61057d600480360381019061057891906135e9565b610d27565b005b6105996004803603810190610594919061368b565b610e6f565b6040516105a691906131b4565b60405180910390f35b6105c960048036038101906105c491906136f7565b610ef6565b6040516105d691906137aa565b60405180910390f35b6105f960048036038101906105f4919061328d565b610f10565b005b60606003805461060a906137f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610636906137f4565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b5050505050905090565b600080610698610fc2565b90506106a5818585610fca565b600191505092915050565b6000600254905090565b6000806106c5610fc2565b90506106d2858285610fdc565b6106dd858585611070565b60019150509392505050565b60006012905090565b60006106fc611164565b905090565b60008061070c610b31565b90508065ffffffffffff16831061075c5782816040517fecd3f81e000000000000000000000000000000000000000000000000000000008152600401610753929190613825565b60405180910390fd5b6107b56107688461121b565b600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061127590919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1691505092915050565b6107e261136f565b6107ea6113f6565b565b6107f461136f565b6107fe8282611459565b5050565b606061080c6114db565b65ffffffffffff1661081c610b31565b65ffffffffffff161461085b576040517f6ff0714000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610909610fc2565b905061091581836114eb565b5050565b6000600560009054906101000a900460ff16905090565b600061093b826115ff565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61099261136f565b61099c6000611657565b565b60006109a98261171d565b9050919050565b6109b861136f565b6109c061172f565b565b6000606080600080600060606109d6611792565b6109de6117cd565b46306000801b600067ffffffffffffffff8111156109ff576109fe61384e565b5b604051908082528060200260200182016040528015610a2d5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610aa1610b31565b90508065ffffffffffff168310610af15782816040517fecd3f81e000000000000000000000000000000000000000000000000000000008152600401610ae8929190613825565b60405180910390fd5b610b0d610afd8461121b565b600b61127590919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b6000610b3b6114db565b905090565b606060048054610b4f906137f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b906137f4565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b5050505050905090565b6000610c1b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611808565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b600080610c49610fc2565b9050610c56818585611070565b600191505092915050565b83421115610ca657836040517f4683af0e000000000000000000000000000000000000000000000000000000008152600401610c9d91906131b4565b60405180910390fd5b6000610d08610d007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610ce5949392919061387d565b60405160208183030381529060405280519060200120611870565b85858561188a565b9050610d1481876118ba565b610d1e81886114eb565b50505050505050565b83421115610d6c57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610d6391906131b4565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9b8c611912565b89604051602001610db1969594939291906138c2565b6040516020818303038152906040528051906020012090506000610dd482611870565b90506000610de48287878761188a565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5857808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610e4f929190613923565b60405180910390fd5b610e638a8a8a610fca565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610efe612fa6565b610f088383611969565b905092915050565b610f1861136f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f8a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f8191906132c9565b60405180910390fd5b610f9381611657565b50565b60008183610fa4919061397b565b905092915050565b60008183610fba91906139c9565b905092915050565b600033905090565b610fd783838360016119ca565b505050565b6000610fe88484610e6f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461106a578181101561105a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161105193929190613a17565b60405180910390fd5b611069848484840360006119ca565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110e25760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110d991906132c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111545760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161114b91906132c9565b60405180910390fd5b61115f838383611ba1565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156111e057507f000000000000000000000000000000000000000000000000000000000000000046145b1561120d577f00000000000000000000000000000000000000000000000000000000000000009050611218565b611215611bb1565b90505b90565b600065ffffffffffff801682111561126d576030826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401611264929190613a93565b60405180910390fd5b819050919050565b6000808360000180549050905060008082905060058311156112fd57600061129c84611c47565b846112a79190613abc565b90506112b68760000182611d40565b60000160009054906101000a900465ffffffffffff1665ffffffffffff168665ffffffffffff1610156112eb578091506112fb565b6001816112f89190613af0565b92505b505b600061130e87600001878585611d55565b905060008114611360576113318760000160018361132c9190613abc565b611d40565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611363565b60005b94505050505092915050565b611377610fc2565b73ffffffffffffffffffffffffffffffffffffffff16611395610a6c565b73ffffffffffffffffffffffffffffffffffffffff16146113f4576113b8610fc2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113eb91906132c9565b60405180910390fd5b565b6113fe611dce565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611442610fc2565b60405161144f91906132c9565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114cb5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114c291906132c9565b60405180910390fd5b6114d760008383611ba1565b5050565b60006114e64361121b565b905090565b60006114f683610896565b905081600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46115fa81836115f586611e0e565b611e20565b505050565b600061165061164b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612099565b6120aa565b9050919050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061172882612102565b9050919050565b61173761214b565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861177b610fc2565b60405161178891906132c9565b60405180910390a1565b60606117c860067f000000000000000000000000000000000000000000000000000000000000000061218c90919063ffffffff16565b905090565b606061180360077f000000000000000000000000000000000000000000000000000000000000000061218c90919063ffffffff16565b905090565b600080826000018054905090506000811461186557611836836000016001836118319190613abc565b611d40565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611868565b60005b915050919050565b600061188361187d611164565b8361223c565b9050919050565b60008060008061189c8888888861227d565b9250925092506118ac8282612371565b829350505050949350505050565b60006118c583611912565b905080821461190d5782816040517f752d88c0000000000000000000000000000000000000000000000000000000008152600401611904929190613b24565b60405180910390fd5b505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b611971612fa6565b6119c282600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124d590919063ffffffff16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a3c5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a3391906132c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611aae5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611aa591906132c9565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611b9b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b9291906131b4565b60405180910390a35b50505050565b611bac8383836125aa565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611c2c959493929190613b4d565b60405160208183030381529060405280519060200120905090565b6000808203611c595760009050611d3b565b60006001611c668461265b565b901c6001901b90506001818481611c8057611c7f613ba0565b5b048201901c90506001818481611c9957611c98613ba0565b5b048201901c90506001818481611cb257611cb1613ba0565b5b048201901c90506001818481611ccb57611cca613ba0565b5b048201901c90506001818481611ce457611ce3613ba0565b5b048201901c90506001818481611cfd57611cfc613ba0565b5b048201901c90506001818481611d1657611d15613ba0565b5b048201901c9050611d3781828581611d3157611d30613ba0565b5b0461273c565b9150505b919050565b60008260005281602060002001905092915050565b60005b81831015611dc3576000611d6c8484612755565b90508465ffffffffffff16611d818783611d40565b60000160009054906101000a900465ffffffffffff1665ffffffffffff161115611dad57809250611dbd565b600181611dba9190613af0565b93505b50611d58565b819050949350505050565b611dd6610919565b611e0c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611e1982610942565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611e5c5750600081115b1561209457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611f7a57600080611eeb600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610fac611ee68661277b565b6127e9565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611f6f929190613bcf565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461209357600080612004600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f96611fff8661277b565b6127e9565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612088929190613bcf565b60405180910390a250505b5b505050565b600081600001805490509050919050565b600063ffffffff80168211156120fa576020826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016120f1929190613c33565b60405180910390fd5b819050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b612153610919565b1561218a576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060ff60001b83146121a9576121a283612829565b9050612236565b8180546121b5906137f4565b80601f01602080910402602001604051908101604052809291908181526020018280546121e1906137f4565b801561222e5780601f106122035761010080835404028352916020019161222e565b820191906000526020600020905b81548152906001019060200180831161221157829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156122bd576000600385925092509250612367565b6000600188888888604051600081526020016040526040516122e29493929190613c5c565b6020604051602081039080840390855afa158015612304573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361235857600060016000801b93509350935050612367565b8060008060001b935093509350505b9450945094915050565b6000600381111561238557612384613ca1565b5b82600381111561239857612397613ca1565b5b03156124d157600160038111156123b2576123b1613ca1565b5b8260038111156123c5576123c4613ca1565b5b036123fc576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156124105761240f613ca1565b5b82600381111561242357612422613ca1565b5b03612468578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161245f91906131b4565b60405180910390fd5b60038081111561247b5761247a613ca1565b5b82600381111561248e5761248d613ca1565b5b036124d057806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016124c79190613272565b60405180910390fd5b5b5050565b6124dd612fa6565b826000018263ffffffff16815481106124f9576124f8613cd0565b5b906000526020600020016040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6125b583838361289d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361264b5760006125f36106b0565b905060006125ff6128b5565b9050808211156126485781816040517f1cb15d2600000000000000000000000000000000000000000000000000000000815260040161263f929190613bcf565b60405180910390fd5b50505b6126568383836128d9565b505050565b600080600090506000608084901c111561267d57608083901c92506080810190505b6000604084901c111561269857604083901c92506040810190505b6000602084901c11156126b357602083901c92506020810190505b6000601084901c11156126ce57601083901c92506010810190505b6000600884901c11156126e957600883901c92506008810190505b6000600484901c111561270457600483901c92506004810190505b6000600284901c111561271f57600283901c92506002810190505b6000600184901c1115612733576001810190505b80915050919050565b600081831061274b578161274d565b825b905092915050565b600060028284186127669190613cff565b8284166127739190613af0565b905092915050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156127e15760d0826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016127d8929190613d6b565b60405180910390fd5b819050919050565b60008061281d6127f7610b31565b61280d61280388611808565b868863ffffffff16565b876129939092919063ffffffff16565b91509150935093915050565b60606000612836836129b0565b90506000602067ffffffffffffffff8111156128555761285461384e565b5b6040519080825280601f01601f1916602001820160405280156128875781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b6128a561214b565b6128b0838383612a00565b505050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8016905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361292657612923600b610f9661291e8461277b565b6127e9565b50505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361297357612970600b610fac61296b8461277b565b6127e9565b50505b61298e61297f84610896565b61298884610896565b83611e20565b505050565b6000806129a4856000018585612c25565b91509150935093915050565b60008060ff8360001c169050601f8111156129f7576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612a52578060026000828254612a469190613af0565b92505081905550612b25565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612ade578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612ad593929190613a17565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612b6e5780600260008282540392505081905550612bbb565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612c1891906131b4565b60405180910390a3505050565b6000806000858054905090506000811115612eb6576000612c5287600184612c4d9190613abc565b611d40565b6040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152505090508565ffffffffffff16816000015165ffffffffffff161115612d41576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8565ffffffffffff16816000015165ffffffffffff1603612dc55784612d7388600185612d6e9190613abc565b611d40565b60000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550612ea5565b8660405180604001604052808865ffffffffffff1681526020018779ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b806020015185935093505050612f9e565b8560405180604001604052808765ffffffffffff1681526020018679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505060008492509250505b935093915050565b6040518060400160405280600065ffffffffffff168152602001600079ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561301e578082015181840152602081019050613003565b60008484015250505050565b6000601f19601f8301169050919050565b600061304682612fe4565b6130508185612fef565b9350613060818560208601613000565b6130698161302a565b840191505092915050565b6000602082019050818103600083015261308e818461303b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006130c68261309b565b9050919050565b6130d6816130bb565b81146130e157600080fd5b50565b6000813590506130f3816130cd565b92915050565b6000819050919050565b61310c816130f9565b811461311757600080fd5b50565b60008135905061312981613103565b92915050565b6000806040838503121561314657613145613096565b5b6000613154858286016130e4565b92505060206131658582860161311a565b9150509250929050565b60008115159050919050565b6131848161316f565b82525050565b600060208201905061319f600083018461317b565b92915050565b6131ae816130f9565b82525050565b60006020820190506131c960008301846131a5565b92915050565b6000806000606084860312156131e8576131e7613096565b5b60006131f6868287016130e4565b9350506020613207868287016130e4565b92505060406132188682870161311a565b9150509250925092565b600060ff82169050919050565b61323881613222565b82525050565b6000602082019050613253600083018461322f565b92915050565b6000819050919050565b61326c81613259565b82525050565b60006020820190506132876000830184613263565b92915050565b6000602082840312156132a3576132a2613096565b5b60006132b1848285016130e4565b91505092915050565b6132c3816130bb565b82525050565b60006020820190506132de60008301846132ba565b92915050565b600063ffffffff82169050919050565b6132fd816132e4565b82525050565b600060208201905061331860008301846132f4565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6133538161331e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61338e816130f9565b82525050565b60006133a08383613385565b60208301905092915050565b6000602082019050919050565b60006133c482613359565b6133ce8185613364565b93506133d983613375565b8060005b8381101561340a5781516133f18882613394565b97506133fc836133ac565b9250506001810190506133dd565b5085935050505092915050565b600060e08201905061342c600083018a61334a565b818103602083015261343e818961303b565b90508181036040830152613452818861303b565b905061346160608301876131a5565b61346e60808301866132ba565b61347b60a0830185613263565b81810360c083015261348d81846133b9565b905098975050505050505050565b6000602082840312156134b1576134b0613096565b5b60006134bf8482850161311a565b91505092915050565b600065ffffffffffff82169050919050565b6134e3816134c8565b82525050565b60006020820190506134fe60008301846134da565b92915050565b61350d81613222565b811461351857600080fd5b50565b60008135905061352a81613504565b92915050565b61353981613259565b811461354457600080fd5b50565b60008135905061355681613530565b92915050565b60008060008060008060c0878903121561357957613578613096565b5b600061358789828a016130e4565b965050602061359889828a0161311a565b95505060406135a989828a0161311a565b94505060606135ba89828a0161351b565b93505060806135cb89828a01613547565b92505060a06135dc89828a01613547565b9150509295509295509295565b600080600080600080600060e0888a03121561360857613607613096565b5b60006136168a828b016130e4565b97505060206136278a828b016130e4565b96505060406136388a828b0161311a565b95505060606136498a828b0161311a565b945050608061365a8a828b0161351b565b93505060a061366b8a828b01613547565b92505060c061367c8a828b01613547565b91505092959891949750929550565b600080604083850312156136a2576136a1613096565b5b60006136b0858286016130e4565b92505060206136c1858286016130e4565b9150509250929050565b6136d4816132e4565b81146136df57600080fd5b50565b6000813590506136f1816136cb565b92915050565b6000806040838503121561370e5761370d613096565b5b600061371c858286016130e4565b925050602061372d858286016136e2565b9150509250929050565b613740816134c8565b82525050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61377581613746565b82525050565b6040820160008201516137916000850182613737565b5060208201516137a4602085018261376c565b50505050565b60006040820190506137bf600083018461377b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061380c57607f821691505b60208210810361381f5761381e6137c5565b5b50919050565b600060408201905061383a60008301856131a5565b61384760208301846134da565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006080820190506138926000830187613263565b61389f60208301866132ba565b6138ac60408301856131a5565b6138b960608301846131a5565b95945050505050565b600060c0820190506138d76000830189613263565b6138e460208301886132ba565b6138f160408301876132ba565b6138fe60608301866131a5565b61390b60808301856131a5565b61391860a08301846131a5565b979650505050505050565b600060408201905061393860008301856132ba565b61394560208301846132ba565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061398682613746565b915061399183613746565b9250828201905079ffffffffffffffffffffffffffffffffffffffffffffffffffff8111156139c3576139c261394c565b5b92915050565b60006139d482613746565b91506139df83613746565b9250828203905079ffffffffffffffffffffffffffffffffffffffffffffffffffff811115613a1157613a1061394c565b5b92915050565b6000606082019050613a2c60008301866132ba565b613a3960208301856131a5565b613a4660408301846131a5565b949350505050565b6000819050919050565b6000819050919050565b6000613a7d613a78613a7384613a4e565b613a58565b613222565b9050919050565b613a8d81613a62565b82525050565b6000604082019050613aa86000830185613a84565b613ab560208301846131a5565b9392505050565b6000613ac7826130f9565b9150613ad2836130f9565b9250828203905081811115613aea57613ae961394c565b5b92915050565b6000613afb826130f9565b9150613b06836130f9565b9250828201905080821115613b1e57613b1d61394c565b5b92915050565b6000604082019050613b3960008301856132ba565b613b4660208301846131a5565b9392505050565b600060a082019050613b626000830188613263565b613b6f6020830187613263565b613b7c6040830186613263565b613b8960608301856131a5565b613b9660808301846132ba565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050613be460008301856131a5565b613bf160208301846131a5565b9392505050565b6000819050919050565b6000613c1d613c18613c1384613bf8565b613a58565b613222565b9050919050565b613c2d81613c02565b82525050565b6000604082019050613c486000830185613c24565b613c5560208301846131a5565b9392505050565b6000608082019050613c716000830187613263565b613c7e602083018661322f565b613c8b6040830185613263565b613c986060830184613263565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613d0a826130f9565b9150613d15836130f9565b925082613d2557613d24613ba0565b5b828204905092915050565b6000819050919050565b6000613d55613d50613d4b84613d30565b613a58565b613222565b9050919050565b613d6581613d3a565b82525050565b6000604082019050613d806000830185613d5c565b613d8d60208301846131a5565b939250505056fea264697066735822122050515407660ff70330c31a37bfa770f871d0c81cce7180d5604a0874243a066564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DF JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x547 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x4AB JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x42F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C5 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x32B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2B7 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x323E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x3272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x441 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x454 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x349B JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x312F JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x355C JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x35E9 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x599 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x368B JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x37AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x328D JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x636 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x683 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x658 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x683 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x666 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x698 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A5 DUP2 DUP6 DUP6 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C5 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D2 DUP6 DUP3 DUP6 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x6DD DUP6 DUP6 DUP6 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x1164 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70C PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x75C JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B5 PUSH2 0x768 DUP5 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1275 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x13F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x7FE DUP3 DUP3 PUSH2 0x1459 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80C PUSH2 0x14DB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x81C PUSH2 0xB31 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x909 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0x915 DUP2 DUP4 PUSH2 0x14EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x992 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x99C PUSH1 0x0 PUSH2 0x1657 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP3 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x136F JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x172F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x9D6 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x17CD JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x384E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA2D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA1 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xAF1 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP3 SWAP2 SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0D PUSH2 0xAFD DUP5 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xB PUSH2 0x1275 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3B PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7B SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1808 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC49 PUSH2 0xFC2 JUMP JUMPDEST SWAP1 POP PUSH2 0xC56 DUP2 DUP6 DUP6 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xCA6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH2 0xD00 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1870 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP PUSH2 0xD14 DUP2 DUP8 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0xD1E DUP2 DUP9 PUSH2 0x14EB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD6C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xD9B DUP13 PUSH2 0x1912 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDB1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xDD4 DUP3 PUSH2 0x1870 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDE4 DUP3 DUP8 DUP8 DUP8 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE58 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP3 SWAP2 SWAP1 PUSH2 0x3923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE63 DUP11 DUP11 DUP11 PUSH2 0xFCA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0xF08 DUP4 DUP4 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF93 DUP2 PUSH2 0x1657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFA4 SWAP2 SWAP1 PUSH2 0x397B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x39C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFD7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 DUP5 DUP5 PUSH2 0xE6F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x106A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x105A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1069 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115F DUP4 DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11E0 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x120D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1218 JUMP JUMPDEST PUSH2 0x1215 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x126D JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x3A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 PUSH2 0x129C DUP5 PUSH2 0x1C47 JUMP JUMPDEST DUP5 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP PUSH2 0x12B6 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x12EB JUMPI DUP1 SWAP2 POP PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x12F8 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x130E DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1360 JUMPI PUSH2 0x1331 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1377 PUSH2 0xFC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1395 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH2 0x13B8 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13FE PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1442 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 NUMBER PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15FA DUP2 DUP4 PUSH2 0x15F5 DUP7 PUSH2 0x1E0E JUMP JUMPDEST PUSH2 0x1E20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH2 0x164B PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP3 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1737 PUSH2 0x214B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x177B PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17C8 PUSH1 0x6 PUSH32 0x0 PUSH2 0x218C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1803 PUSH1 0x7 PUSH32 0x0 PUSH2 0x218C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1865 JUMPI PUSH2 0x1836 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1883 PUSH2 0x187D PUSH2 0x1164 JUMP JUMPDEST DUP4 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x189C DUP9 DUP9 DUP9 DUP9 PUSH2 0x227D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18AC DUP3 DUP3 PUSH2 0x2371 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x190D JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP3 SWAP2 SWAP1 PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1971 PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0x19C2 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x24D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B9B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B92 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BAC DUP4 DUP4 DUP4 PUSH2 0x25AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1C59 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C66 DUP5 PUSH2 0x265B JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CCB JUMPI PUSH2 0x1CCA PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1D37 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1D31 JUMPI PUSH2 0x1D30 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x273C JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 PUSH2 0x1D6C DUP5 DUP5 PUSH2 0x2755 JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1D81 DUP8 DUP4 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1DAD JUMPI DUP1 SWAP3 POP PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1DBA SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1D58 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1DD6 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x1E0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E19 DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2094 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F7A JUMPI PUSH1 0x0 DUP1 PUSH2 0x1EEB PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xFAC PUSH2 0x1EE6 DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F6F SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2093 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2004 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF96 PUSH2 0x1FFF DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2088 SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x20FA JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F1 SWAP3 SWAP2 SWAP1 PUSH2 0x3C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x919 JUMP JUMPDEST ISZERO PUSH2 0x218A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x21A9 JUMPI PUSH2 0x21A2 DUP4 PUSH2 0x2829 JUMP JUMPDEST SWAP1 POP PUSH2 0x2236 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x21B5 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21E1 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2358 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2367 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23B2 JUMPI PUSH2 0x23B1 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23C5 JUMPI PUSH2 0x23C4 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23FC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2468 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245F SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x247B JUMPI PUSH2 0x247A PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x248E JUMPI PUSH2 0x248D PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x24D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C7 SWAP2 SWAP1 PUSH2 0x3272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x24DD PUSH2 0x2FA6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x3CD0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25B5 DUP4 DUP4 DUP4 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x264B JUMPI PUSH1 0x0 PUSH2 0x25F3 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25FF PUSH2 0x28B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2648 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263F SWAP3 SWAP2 SWAP1 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2656 DUP4 DUP4 DUP4 PUSH2 0x28D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x267D JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2698 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26B3 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26CE JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x26E9 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2704 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x271F JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2733 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x274B JUMPI DUP2 PUSH2 0x274D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2766 SWAP2 SWAP1 PUSH2 0x3CFF JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2773 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x27E1 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x281D PUSH2 0x27F7 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x280D PUSH2 0x2803 DUP9 PUSH2 0x1808 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2993 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2836 DUP4 PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x2854 PUSH2 0x384E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2887 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A5 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x28B0 DUP4 DUP4 DUP4 PUSH2 0x2A00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2926 JUMPI PUSH2 0x2923 PUSH1 0xB PUSH2 0xF96 PUSH2 0x291E DUP5 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2973 JUMPI PUSH2 0x2970 PUSH1 0xB PUSH2 0xFAC PUSH2 0x296B DUP5 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x27E9 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x298E PUSH2 0x297F DUP5 PUSH2 0x896 JUMP JUMPDEST PUSH2 0x2988 DUP5 PUSH2 0x896 JUMP JUMPDEST DUP4 PUSH2 0x1E20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29A4 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2C25 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A52 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A46 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B6E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BBB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C18 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2EB6 JUMPI PUSH1 0x0 PUSH2 0x2C52 DUP8 PUSH1 0x1 DUP5 PUSH2 0x2C4D SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2DC5 JUMPI DUP5 PUSH2 0x2D73 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2D6E SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2EA5 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2F9E JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x301E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3046 DUP3 PUSH2 0x2FE4 JUMP JUMPDEST PUSH2 0x3050 DUP2 DUP6 PUSH2 0x2FEF JUMP JUMPDEST SWAP4 POP PUSH2 0x3060 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3000 JUMP JUMPDEST PUSH2 0x3069 DUP2 PUSH2 0x302A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308E DUP2 DUP5 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C6 DUP3 PUSH2 0x309B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D6 DUP2 PUSH2 0x30BB JUMP JUMPDEST DUP2 EQ PUSH2 0x30E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F3 DUP2 PUSH2 0x30CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310C DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3129 DUP2 PUSH2 0x3103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3145 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3154 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3165 DUP6 DUP3 DUP7 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3184 DUP2 PUSH2 0x316F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x317B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31AE DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31F6 DUP7 DUP3 DUP8 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3207 DUP7 DUP3 DUP8 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3218 DUP7 DUP3 DUP8 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3238 DUP2 PUSH2 0x3222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3253 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326C DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A3 JUMPI PUSH2 0x32A2 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32B1 DUP5 DUP3 DUP6 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C3 DUP2 PUSH2 0x30BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32FD DUP2 PUSH2 0x32E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3318 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3353 DUP2 PUSH2 0x331E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x338E DUP2 PUSH2 0x30F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A0 DUP4 DUP4 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C4 DUP3 PUSH2 0x3359 JUMP JUMPDEST PUSH2 0x33CE DUP2 DUP6 PUSH2 0x3364 JUMP JUMPDEST SWAP4 POP PUSH2 0x33D9 DUP4 PUSH2 0x3375 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x340A JUMPI DUP2 MLOAD PUSH2 0x33F1 DUP9 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP8 POP PUSH2 0x33FC DUP4 PUSH2 0x33AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x342C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x334A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x343E DUP2 DUP10 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3452 DUP2 DUP9 PUSH2 0x303B JUMP JUMPDEST SWAP1 POP PUSH2 0x3461 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x346E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x347B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x348D DUP2 DUP5 PUSH2 0x33B9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B0 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34BF DUP5 DUP3 DUP6 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E3 DUP2 PUSH2 0x34C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x350D DUP2 PUSH2 0x3222 JUMP JUMPDEST DUP2 EQ PUSH2 0x3518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x3504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3539 DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP2 EQ PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3556 DUP2 PUSH2 0x3530 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3579 JUMPI PUSH2 0x3578 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP10 DUP3 DUP11 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3598 DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x35A9 DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x35BA DUP10 DUP3 DUP11 ADD PUSH2 0x351B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x35CB DUP10 DUP3 DUP11 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x35DC DUP10 DUP3 DUP11 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3608 JUMPI PUSH2 0x3607 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3616 DUP11 DUP3 DUP12 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3627 DUP11 DUP3 DUP12 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3638 DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3649 DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x365A DUP11 DUP3 DUP12 ADD PUSH2 0x351B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x366B DUP11 DUP3 DUP12 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x367C DUP11 DUP3 DUP12 ADD PUSH2 0x3547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A2 JUMPI PUSH2 0x36A1 PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B0 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36C1 DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36D4 DUP2 PUSH2 0x32E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x36DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F1 DUP2 PUSH2 0x36CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370E JUMPI PUSH2 0x370D PUSH2 0x3096 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371C DUP6 DUP3 DUP7 ADD PUSH2 0x30E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372D DUP6 DUP3 DUP7 ADD PUSH2 0x36E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3740 DUP2 PUSH2 0x34C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3775 DUP2 PUSH2 0x3746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3791 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3737 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x37A4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x376C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x380C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x381F JUMPI PUSH2 0x381E PUSH2 0x37C5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x383A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3847 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3892 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x389F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x38B9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x38D7 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x38E4 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38F1 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x38FE PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x390B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3918 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3938 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3945 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3986 DUP3 PUSH2 0x3746 JUMP JUMPDEST SWAP2 POP PUSH2 0x3991 DUP4 PUSH2 0x3746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C3 JUMPI PUSH2 0x39C2 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D4 DUP3 PUSH2 0x3746 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DF DUP4 PUSH2 0x3746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A11 JUMPI PUSH2 0x3A10 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A2C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3A39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3A46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7D PUSH2 0x3A78 PUSH2 0x3A73 DUP5 PUSH2 0x3A4E JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8D DUP2 PUSH2 0x3A62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A84 JUMP JUMPDEST PUSH2 0x3AB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC7 DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD2 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3AEA JUMPI PUSH2 0x3AE9 PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFB DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B06 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B1E JUMPI PUSH2 0x3B1D PUSH2 0x394C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3B46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3B62 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B6F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B7C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3B89 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3B96 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BE4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31A5 JUMP JUMPDEST PUSH2 0x3BF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1D PUSH2 0x3C18 PUSH2 0x3C13 DUP5 PUSH2 0x3BF8 JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C2D DUP2 PUSH2 0x3C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C24 JUMP JUMPDEST PUSH2 0x3C55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C71 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3C7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x3C8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x3C98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3263 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D0A DUP3 PUSH2 0x30F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D15 DUP4 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D25 JUMPI PUSH2 0x3D24 PUSH2 0x3BA0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D55 PUSH2 0x3D50 PUSH2 0x3D4B DUP5 PUSH2 0x3D30 JUMP JUMPDEST PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D65 DUP2 PUSH2 0x3D3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D5C JUMP JUMPDEST PUSH2 0x3D8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP MLOAD SLOAD SMOD PUSH7 0xFF70330C31A37 0xBF 0xA7 PUSH17 0xF871D0C81CCE7180D5604A0874243A0665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"387:954:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3922:364:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;750:63:38;;;:::i;:::-;;819:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3040:272:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5539:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5738:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3208:126:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1169:170:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:59;;;:::i;:::-;;5144:557:29;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4922:341:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2789:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3402:135:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5954:554:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3411:163:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:10;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:13:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3922:364:2:-;4009:7;4028:23;4054:7;:5;:7::i;:::-;4028:33;;4088:16;4075:29;;:9;:29;4071:115;;4147:9;4158:16;4127:48;;;;;;;;;;;;:::i;:::-;;;;;;;;4071:115;4202:77;4250:28;4268:9;4250:17;:28::i;:::-;4202:20;:29;4223:7;4202:29;;;;;;;;;;;;;;;:47;;:77;;;;:::i;:::-;4195:84;;;;;3922:364;;;;:::o;750:63:38:-;1531:13:0;:11;:13::i;:::-;796:10:38::1;:8;:10::i;:::-;750:63::o:0;819:93::-;1531:13:0;:11;:13::i;:::-;888:17:38::1;894:2;898:6;888:5;:17::i;:::-;819:93:::0;;:::o;3040:272:2:-;3091:13;3180:18;:16;:18::i;:::-;3169:29;;:7;:5;:7::i;:::-;:29;;;3165:93;;3221:26;;;;;;;;;;;;;;3165:93;3267:38;;;;;;;;;;;;;;;;;;;3040:272;:::o;5539:117::-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;5738:138::-;5800:15;5818:12;:10;:12::i;:::-;5800:30;;5840:29;5850:7;5859:9;5840;:29::i;:::-;5790:86;5738:138;:::o;1850:84:24:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3208:126:14:-;3278:6;3303:24;3319:7;3303:15;:24::i;:::-;3296:31;;3208:126;;;:::o;3299:116:10:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1169:170:38:-;1283:7;1313:19;1326:5;1313:12;:19::i;:::-;1306:26;;1169:170;;;:::o;685:59::-;1531:13:0;:11;:13::i;:::-;729:8:38::1;:6;:8::i;:::-;685:59::o:0;5144:557:29:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4922:341:2:-;4998:7;5017:23;5043:7;:5;:7::i;:::-;5017:33;;5077:16;5064:29;;:9;:29;5060:115;;5136:9;5147:16;5116:48;;;;;;;;;;;;:::i;:::-;;;;;;;;5060:115;5191:65;5227:28;5245:9;5227:17;:28::i;:::-;5191:17;:35;;:65;;;;:::i;:::-;5184:72;;;;;4922:341;;;:::o;2789:96::-;2835:6;2860:18;:16;:18::i;:::-;2853:25;;2789:96;:::o;2276:93:10:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3402:135:2:-;3466:7;3492:38;:20;:29;3513:7;3492:29;;;;;;;;;;;;;;;:36;:38::i;:::-;3485:45;;;;3402:135;;;:::o;3610:178:10:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;5954:554:2:-;6159:6;6141:15;:24;6137:91;;;6210:6;6188:29;;;;;;;;;;;:::i;:::-;;;;;;;;6137:91;6237:14;6254:168;6281:86;2063:71;6340:9;6351:5;6358:6;6308:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6298:68;;;;;;6281:16;:86::i;:::-;6381:1;6396;6411;6254:13;:168::i;:::-;6237:185;;6432:31;6449:6;6457:5;6432:16;:31::i;:::-;6473:28;6483:6;6491:9;6473;:28::i;:::-;6127:381;5954:554;;;;;;:::o;1680:672:13:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:10:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;3411:163:14:-;3490:32;;:::i;:::-;3541:26;3554:7;3563:3;3541:12;:26::i;:::-;3534:33;;3411:163;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9277:96:2:-;9335:7;9365:1;9361;:5;;;;:::i;:::-;9354:12;;9277:96;;;;:::o;9379:101::-;9442:7;9472:1;9468;:5;;;;:::i;:::-;9461:12;;9379:101;;;;:::o;656:96:22:-;709:7;735:10;728:17;;656:96;:::o;8989:128:10:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:29:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;14291:213:34:-;14347:6;14377:16;14369:24;;:5;:24;14365:103;;;14447:2;14451:5;14416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;14365:103;14491:5;14477:20;;14291:213;;;:::o;9441:606:36:-;9526:7;9545:11;9559:4;:17;;:24;;;;9545:38;;9594:11;9619:12;9634:3;9619:18;;9658:1;9652:3;:7;9648:234;;;9675:11;9695:14;9705:3;9695:9;:14::i;:::-;9689:3;:20;;;;:::i;:::-;9675:34;;9733:37;9747:4;:17;;9766:3;9733:13;:37::i;:::-;:42;;;;;;;;;;;;9727:48;;:3;:48;;;9723:149;;;9802:3;9795:10;;9723:149;;;9856:1;9850:3;:7;;;;:::i;:::-;9844:13;;9723:149;9661:221;9648:234;9892:11;9906:53;9925:4;:17;;9944:3;9949;9954:4;9906:18;:53::i;:::-;9892:67;;9984:1;9977:3;:8;:63;;9992:41;10006:4;:17;;10031:1;10025:3;:7;;;;:::i;:::-;9992:13;:41::i;:::-;:48;;;;;;;;;;;;9977:63;;;9988:1;9977:63;9970:70;;;;;;9441:606;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:24:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7721:208:10:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;931:109:37:-;977:6;1002:31;1020:12;1002:17;:31::i;:::-;995:38;;931:109;:::o;6686:312:2:-;6768:19;6790:18;6800:7;6790:9;:18::i;:::-;6768:40;;6840:9;6818:10;:19;6829:7;6818:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6903:9;6865:48;;6890:11;6865:48;;6881:7;6865:48;;;;;;;;;;;;6923:68;6942:11;6955:9;6966:24;6982:7;6966:15;:24::i;:::-;6923:18;:68::i;:::-;6758:240;6686:312;;:::o;8572:162::-;8645:6;8670:57;8688:38;:20;:29;8709:7;8688:29;;;;;;;;;;;;;;;:36;:38::i;:::-;8670:17;:57::i;:::-;8663:64;;8572:162;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2406:143:13:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;2463:115:24:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;6021:126:29:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;10167:206:36:-;10229:7;10248:11;10262:4;:17;;:24;;;;10248:38;;10310:1;10303:3;:8;:63;;10318:41;10332:4;:17;;10357:1;10351:3;:7;;;;:::i;:::-;10318:13;:41::i;:::-;:48;;;;;;;;;;;;10303:63;;;10314:1;10303:63;10296:70;;;10167:206;;;:::o;4917:176:29:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:28:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;1265:222:23:-;1348:15;1366:16;1376:5;1366:9;:16::i;:::-;1348:34;;1405:7;1396:5;:16;1392:89;;1455:5;1462:7;1435:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1392:89;1338:149;1265:222;;:::o;759:395::-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;8811:199:2:-;8915:32;;:::i;:::-;8966:37;8999:3;8966:20;:29;8987:7;8966:29;;;;;;;;;;;;;;;:32;;:37;;;;:::i;:::-;8959:44;;8811:199;;;;:::o;9949:432:10:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;986:177:38:-;1126:30;1140:4;1146:2;1150:5;1126:13;:30::i;:::-;986:177;;;:::o;4113:179:29:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;8587:1642:33:-;8635:7;8663:1;8658;:6;8654:45;;8687:1;8680:8;;;;8654:45;9378:14;9412:1;9401:7;9406:1;9401:4;:7::i;:::-;:12;;9395:1;:19;;9378:36;;9873:1;9862:6;9858:1;:10;;;;;:::i;:::-;;;9849:6;:19;9848:26;;9839:35;;9922:1;9911:6;9907:1;:10;;;;;:::i;:::-;;;9898:6;:19;9897:26;;9888:35;;9971:1;9960:6;9956:1;:10;;;;;:::i;:::-;;;9947:6;:19;9946:26;;9937:35;;10020:1;10009:6;10005:1;:10;;;;;:::i;:::-;;;9996:6;:19;9995:26;;9986:35;;10069:1;10058:6;10054:1;:10;;;;;:::i;:::-;;;10045:6;:19;10044:26;;10035:35;;10118:1;10107:6;10103:1;:10;;;;;:::i;:::-;;;10094:6;:19;10093:26;;10084:35;;10167:1;10156:6;10152:1;:10;;;;;:::i;:::-;;;10143:6;:19;10142:26;;10133:35;;10189:23;10193:6;10205;10201:1;:10;;;;;:::i;:::-;;;10189:3;:23::i;:::-;10182:30;;;8587:1642;;;;:::o;14099:265:36:-;14209:28;14282:9;14279:1;14272:20;14344:3;14337:4;14334:1;14324:18;14320:28;14305:43;;14099:265;;;;:::o;12736:433::-;12893:7;12912:230;12925:4;12919:3;:10;12912:230;;;12945:11;12959:23;12972:3;12977:4;12959:12;:23::i;:::-;12945:37;;13032:3;13000:35;;:24;13014:4;13020:3;13000:13;:24::i;:::-;:29;;;;;;;;;;;;:35;;;12996:136;;;13062:3;13055:10;;12996:136;;;13116:1;13110:3;:7;;;;:::i;:::-;13104:13;;12996:136;12931:211;12912:230;;;13158:4;13151:11;;12736:433;;;;;;:::o;2202:126:24:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;3000:133:14:-;3082:7;3108:18;3118:7;3108:9;:18::i;:::-;3101:25;;3000:133;;;:::o;7717:780:2:-;7817:2;7809:10;;:4;:10;;;;:24;;;;;7832:1;7823:6;:10;7809:24;7805:686;;;7869:1;7853:18;;:4;:18;;;7849:315;;7892:16;7910;7930:150;7957:20;:26;7978:4;7957:26;;;;;;;;;;;;;;;8005:9;8036:26;8055:6;8036:18;:26::i;:::-;7930:5;:150::i;:::-;7891:189;;;;;;;;8124:4;8103:46;;;8130:8;8140;8103:46;;;;;;;:::i;:::-;;;;;;;;7873:291;;7849:315;8195:1;8181:16;;:2;:16;;;8177:304;;8218:16;8236;8256:143;8283:20;:24;8304:2;8283:24;;;;;;;;;;;;;;;8329:4;8355:26;8374:6;8355:18;:26::i;:::-;8256:5;:143::i;:::-;8217:182;;;;;;;;8443:2;8422:44;;;8447:8;8457;8422:44;;;;;;;:::i;:::-;;;;;;;;8199:282;;8177:304;7805:686;7717:780;;;:::o;11008:119:36:-;11070:7;11096:4;:17;;:24;;;;11089:31;;11008:119;;;:::o;15291:213:34:-;15347:6;15377:16;15369:24;;:5;:24;15365:103;;;15447:2;15451:5;15416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;15365:103;15491:5;15477:20;;15291:213;;;:::o;538:107:23:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;2002:128:24:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;3385:267:25:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:30:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:28:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;11199:138:36:-;11269:20;;:::i;:::-;11308:4;:17;;11326:3;11308:22;;;;;;;;;;:::i;:::-;;;;;;;;;11301:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11199:138;;;;:::o;2327:413:14:-;2421:30;2435:4;2441:2;2445:5;2421:13;:30::i;:::-;2481:1;2465:18;;:4;:18;;;2461:226;;2499:14;2516:13;:11;:13::i;:::-;2499:30;;2543:11;2557:12;:10;:12::i;:::-;2543:26;;2596:3;2587:6;:12;2583:94;;;2650:6;2658:3;2626:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2583:94;2485:202;;2461:226;2696:37;2717:4;2723:2;2727:5;2696:20;:37::i;:::-;2327:413;;;:::o;10699:983:33:-;10751:7;10770:14;10787:1;10770:18;;10841:1;10835:3;10826:5;:12;;:16;10822:99;;;10872:3;10862:13;;;;;10903:3;10893:13;;;;10822:99;10952:1;10947:2;10938:5;:11;;:15;10934:96;;;10983:2;10973:12;;;;;11013:2;11003:12;;;;10934:96;11061:1;11056:2;11047:5;:11;;:15;11043:96;;;11092:2;11082:12;;;;;11122:2;11112:12;;;;11043:96;11170:1;11165:2;11156:5;:11;;:15;11152:96;;;11201:2;11191:12;;;;;11231:2;11221:12;;;;11152:96;11278:1;11274;11265:5;:10;;:14;11261:93;;;11309:1;11299:11;;;;;11338:1;11328:11;;;;11261:93;11384:1;11380;11371:5;:10;;:14;11367:93;;;11415:1;11405:11;;;;;11444:1;11434:11;;;;11367:93;11490:1;11486;11477:5;:10;;:14;11473:93;;;11521:1;11511:11;;;;;11550:1;11540:11;;;;11473:93;11596:1;11592;11583:5;:10;;:14;11579:64;;;11627:1;11617:11;;;;11579:64;11669:6;11662:13;;;10699:983;;;:::o;2557:104::-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;2649:1;2641:13;2634:20;;2557:104;;;;:::o;2774:153::-;2836:7;2919:1;2914;2910;:5;2909:11;;;;:::i;:::-;2904:1;2900;:5;2899:21;;;;:::i;:::-;2892:28;;2774:153;;;;:::o;4169:218:34:-;4226:7;4257:17;4249:25;;:5;:25;4245:105;;;4328:3;4333:5;4297:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:105;4374:5;4359:21;;4169:218;;;:::o;9016:255:2:-;9183:7;9192;9218:46;9229:7;:5;:7::i;:::-;9238:25;9241:14;:5;:12;:14::i;:::-;9257:5;9238:2;:25;;:::i;:::-;9218:5;:10;;:46;;;;;:::i;:::-;9211:53;;;;9016:255;;;;;;:::o;2078:405:25:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;1112:145:12:-;1474:19:24;:17;:19::i;:::-;1220:30:12::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;2084:103:14:-;2137:7;2163:17;2156:24;;;;2084:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;7400:26;7419:6;7400:18;:26::i;:::-;7369:5;:58::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;7519:26;7538:6;7519:18;:26::i;:::-;7483:5;:63::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;:15::i;:::-;7602:13;7612:2;7602:9;:13::i;:::-;7617:6;7566:18;:58::i;:::-;7232:399;;;:::o;8050:162:36:-;8132:7;8141;8167:38;8175:4;:17;;8194:3;8199:5;8167:7;:38::i;:::-;8160:45;;;;8050:162;;;;;;:::o;2555:245:25:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;6271:1107:10:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;11513:870:36:-;11604:7;11613;11632:11;11646:4;:11;;;;11632:25;;11678:1;11672:3;:7;11668:709;;;11747:25;11775:28;11789:4;11801:1;11795:3;:7;;;;:::i;:::-;11775:13;:28::i;:::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:3;11877:15;;:4;:9;;;:15;;;11873:91;;;11919:30;;;;;;;;;;;;;;11873:91;12040:3;12027:16;;:4;:9;;;:16;;;12023:189;;12101:5;12063:28;12077:4;12089:1;12083:3;:7;;;;:::i;:::-;12063:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;12023:189;;;12145:4;12155:41;;;;;;;;12176:3;12155:41;;;;;;12189:5;12155:41;;;;;12145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:4;:11;;;12246:5;12225:27;;;;;;;;11668:709;12283:4;12293:41;;;;;;;;12314:3;12293:41;;;;;;12327:5;12293:41;;;;;12283:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:1;12360:5;12349:17;;;;;11513:870;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:40:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5710:24;5728:5;5710:24;:::i;:::-;5705:3;5698:37;5623:118;;:::o;5747:222::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5891:71;5959:1;5948:9;5944:17;5935:6;5891:71;:::i;:::-;5747:222;;;;:::o;5975:93::-;6011:7;6051:10;6044:5;6040:22;6029:33;;5975:93;;;:::o;6074:115::-;6159:23;6176:5;6159:23;:::i;:::-;6154:3;6147:36;6074:115;;:::o;6195:218::-;6286:4;6324:2;6313:9;6309:18;6301:26;;6337:69;6403:1;6392:9;6388:17;6379:6;6337:69;:::i;:::-;6195:218;;;;:::o;6419:149::-;6455:7;6495:66;6488:5;6484:78;6473:89;;6419:149;;;:::o;6574:115::-;6659:23;6676:5;6659:23;:::i;:::-;6654:3;6647:36;6574:115;;:::o;6695:114::-;6762:6;6796:5;6790:12;6780:22;;6695:114;;;:::o;6815:184::-;6914:11;6948:6;6943:3;6936:19;6988:4;6983:3;6979:14;6964:29;;6815:184;;;;:::o;7005:132::-;7072:4;7095:3;7087:11;;7125:4;7120:3;7116:14;7108:22;;7005:132;;;:::o;7143:108::-;7220:24;7238:5;7220:24;:::i;:::-;7215:3;7208:37;7143:108;;:::o;7257:179::-;7326:10;7347:46;7389:3;7381:6;7347:46;:::i;:::-;7425:4;7420:3;7416:14;7402:28;;7257:179;;;;:::o;7442:113::-;7512:4;7544;7539:3;7535:14;7527:22;;7442:113;;;:::o;7591:732::-;7710:3;7739:54;7787:5;7739:54;:::i;:::-;7809:86;7888:6;7883:3;7809:86;:::i;:::-;7802:93;;7919:56;7969:5;7919:56;:::i;:::-;7998:7;8029:1;8014:284;8039:6;8036:1;8033:13;8014:284;;;8115:6;8109:13;8142:63;8201:3;8186:13;8142:63;:::i;:::-;8135:70;;8228:60;8281:6;8228:60;:::i;:::-;8218:70;;8074:224;8061:1;8058;8054:9;8049:14;;8014:284;;;8018:14;8314:3;8307:10;;7715:608;;;7591:732;;;;:::o;8329:1215::-;8678:4;8716:3;8705:9;8701:19;8693:27;;8730:69;8796:1;8785:9;8781:17;8772:6;8730:69;:::i;:::-;8846:9;8840:4;8836:20;8831:2;8820:9;8816:18;8809:48;8874:78;8947:4;8938:6;8874:78;:::i;:::-;8866:86;;8999:9;8993:4;8989:20;8984:2;8973:9;8969:18;8962:48;9027:78;9100:4;9091:6;9027:78;:::i;:::-;9019:86;;9115:72;9183:2;9172:9;9168:18;9159:6;9115:72;:::i;:::-;9197:73;9265:3;9254:9;9250:19;9241:6;9197:73;:::i;:::-;9280;9348:3;9337:9;9333:19;9324:6;9280:73;:::i;:::-;9401:9;9395:4;9391:20;9385:3;9374:9;9370:19;9363:49;9429:108;9532:4;9523:6;9429:108;:::i;:::-;9421:116;;8329:1215;;;;;;;;;;:::o;9550:329::-;9609:6;9658:2;9646:9;9637:7;9633:23;9629:32;9626:119;;;9664:79;;:::i;:::-;9626:119;9784:1;9809:53;9854:7;9845:6;9834:9;9830:22;9809:53;:::i;:::-;9799:63;;9755:117;9550:329;;;;:::o;9885:97::-;9921:7;9961:14;9954:5;9950:26;9939:37;;9885:97;;;:::o;9988:115::-;10073:23;10090:5;10073:23;:::i;:::-;10068:3;10061:36;9988:115;;:::o;10109:218::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:69;10317:1;10306:9;10302:17;10293:6;10251:69;:::i;:::-;10109:218;;;;:::o;10333:118::-;10404:22;10420:5;10404:22;:::i;:::-;10397:5;10394:33;10384:61;;10441:1;10438;10431:12;10384:61;10333:118;:::o;10457:135::-;10501:5;10539:6;10526:20;10517:29;;10555:31;10580:5;10555:31;:::i;:::-;10457:135;;;;:::o;10598:122::-;10671:24;10689:5;10671:24;:::i;:::-;10664:5;10661:35;10651:63;;10710:1;10707;10700:12;10651:63;10598:122;:::o;10726:139::-;10772:5;10810:6;10797:20;10788:29;;10826:33;10853:5;10826:33;:::i;:::-;10726:139;;;;:::o;10871:1053::-;10973:6;10981;10989;10997;11005;11013;11062:3;11050:9;11041:7;11037:23;11033:33;11030:120;;;11069:79;;:::i;:::-;11030:120;11189:1;11214:53;11259:7;11250:6;11239:9;11235:22;11214:53;:::i;:::-;11204:63;;11160:117;11316:2;11342:53;11387:7;11378:6;11367:9;11363:22;11342:53;:::i;:::-;11332:63;;11287:118;11444:2;11470:53;11515:7;11506:6;11495:9;11491:22;11470:53;:::i;:::-;11460:63;;11415:118;11572:2;11598:51;11641:7;11632:6;11621:9;11617:22;11598:51;:::i;:::-;11588:61;;11543:116;11698:3;11725:53;11770:7;11761:6;11750:9;11746:22;11725:53;:::i;:::-;11715:63;;11669:119;11827:3;11854:53;11899:7;11890:6;11879:9;11875:22;11854:53;:::i;:::-;11844:63;;11798:119;10871:1053;;;;;;;;:::o;11930:1199::-;12041:6;12049;12057;12065;12073;12081;12089;12138:3;12126:9;12117:7;12113:23;12109:33;12106:120;;;12145:79;;:::i;:::-;12106:120;12265:1;12290:53;12335:7;12326:6;12315:9;12311:22;12290:53;:::i;:::-;12280:63;;12236:117;12392:2;12418:53;12463:7;12454:6;12443:9;12439:22;12418:53;:::i;:::-;12408:63;;12363:118;12520:2;12546:53;12591:7;12582:6;12571:9;12567:22;12546:53;:::i;:::-;12536:63;;12491:118;12648:2;12674:53;12719:7;12710:6;12699:9;12695:22;12674:53;:::i;:::-;12664:63;;12619:118;12776:3;12803:51;12846:7;12837:6;12826:9;12822:22;12803:51;:::i;:::-;12793:61;;12747:117;12903:3;12930:53;12975:7;12966:6;12955:9;12951:22;12930:53;:::i;:::-;12920:63;;12874:119;13032:3;13059:53;13104:7;13095:6;13084:9;13080:22;13059:53;:::i;:::-;13049:63;;13003:119;11930:1199;;;;;;;;;;:::o;13135:474::-;13203:6;13211;13260:2;13248:9;13239:7;13235:23;13231:32;13228:119;;;13266:79;;:::i;:::-;13228:119;13386:1;13411:53;13456:7;13447:6;13436:9;13432:22;13411:53;:::i;:::-;13401:63;;13357:117;13513:2;13539:53;13584:7;13575:6;13564:9;13560:22;13539:53;:::i;:::-;13529:63;;13484:118;13135:474;;;;;:::o;13615:120::-;13687:23;13704:5;13687:23;:::i;:::-;13680:5;13677:34;13667:62;;13725:1;13722;13715:12;13667:62;13615:120;:::o;13741:137::-;13786:5;13824:6;13811:20;13802:29;;13840:32;13866:5;13840:32;:::i;:::-;13741:137;;;;:::o;13884:472::-;13951:6;13959;14008:2;13996:9;13987:7;13983:23;13979:32;13976:119;;;14014:79;;:::i;:::-;13976:119;14134:1;14159:53;14204:7;14195:6;14184:9;14180:22;14159:53;:::i;:::-;14149:63;;14105:117;14261:2;14287:52;14331:7;14322:6;14311:9;14307:22;14287:52;:::i;:::-;14277:62;;14232:117;13884:472;;;;;:::o;14362:105::-;14437:23;14454:5;14437:23;:::i;:::-;14432:3;14425:36;14362:105;;:::o;14473:138::-;14510:7;14550:54;14543:5;14539:66;14528:77;;14473:138;;;:::o;14617:108::-;14694:24;14712:5;14694:24;:::i;:::-;14689:3;14682:37;14617:108;;:::o;14807:519::-;14966:4;14961:3;14957:14;15053:4;15046:5;15042:16;15036:23;15072:61;15127:4;15122:3;15118:14;15104:12;15072:61;:::i;:::-;14981:162;15227:4;15220:5;15216:16;15210:23;15246:63;15303:4;15298:3;15294:14;15280:12;15246:63;:::i;:::-;15153:166;14935:391;14807:519;;:::o;15332:346::-;15487:4;15525:2;15514:9;15510:18;15502:26;;15538:133;15668:1;15657:9;15653:17;15644:6;15538:133;:::i;:::-;15332:346;;;;:::o;15684:180::-;15732:77;15729:1;15722:88;15829:4;15826:1;15819:15;15853:4;15850:1;15843:15;15870:320;15914:6;15951:1;15945:4;15941:12;15931:22;;15998:1;15992:4;15988:12;16019:18;16009:81;;16075:4;16067:6;16063:17;16053:27;;16009:81;16137:2;16129:6;16126:14;16106:18;16103:38;16100:84;;16156:18;;:::i;:::-;16100:84;15921:269;15870:320;;;:::o;16196:328::-;16315:4;16353:2;16342:9;16338:18;16330:26;;16366:71;16434:1;16423:9;16419:17;16410:6;16366:71;:::i;:::-;16447:70;16513:2;16502:9;16498:18;16489:6;16447:70;:::i;:::-;16196:328;;;;;:::o;16530:180::-;16578:77;16575:1;16568:88;16675:4;16672:1;16665:15;16699:4;16696:1;16689:15;16716:553;16893:4;16931:3;16920:9;16916:19;16908:27;;16945:71;17013:1;17002:9;16998:17;16989:6;16945:71;:::i;:::-;17026:72;17094:2;17083:9;17079:18;17070:6;17026:72;:::i;:::-;17108;17176:2;17165:9;17161:18;17152:6;17108:72;:::i;:::-;17190;17258:2;17247:9;17243:18;17234:6;17190:72;:::i;:::-;16716:553;;;;;;;:::o;17275:775::-;17508:4;17546:3;17535:9;17531:19;17523:27;;17560:71;17628:1;17617:9;17613:17;17604:6;17560:71;:::i;:::-;17641:72;17709:2;17698:9;17694:18;17685:6;17641:72;:::i;:::-;17723;17791:2;17780:9;17776:18;17767:6;17723:72;:::i;:::-;17805;17873:2;17862:9;17858:18;17849:6;17805:72;:::i;:::-;17887:73;17955:3;17944:9;17940:19;17931:6;17887:73;:::i;:::-;17970;18038:3;18027:9;18023:19;18014:6;17970:73;:::i;:::-;17275:775;;;;;;;;;:::o;18056:332::-;18177:4;18215:2;18204:9;18200:18;18192:26;;18228:71;18296:1;18285:9;18281:17;18272:6;18228:71;:::i;:::-;18309:72;18377:2;18366:9;18362:18;18353:6;18309:72;:::i;:::-;18056:332;;;;;:::o;18394:180::-;18442:77;18439:1;18432:88;18539:4;18536:1;18529:15;18563:4;18560:1;18553:15;18580:244;18620:3;18639:20;18657:1;18639:20;:::i;:::-;18634:25;;18673:20;18691:1;18673:20;:::i;:::-;18668:25;;18716:1;18713;18709:9;18702:16;;18739:54;18734:3;18731:63;18728:89;;;18797:18;;:::i;:::-;18728:89;18580:244;;;;:::o;18830:247::-;18870:4;18890:20;18908:1;18890:20;:::i;:::-;18885:25;;18924:20;18942:1;18924:20;:::i;:::-;18919:25;;18968:1;18965;18961:9;18953:17;;18992:54;18986:4;18983:64;18980:90;;;19050:18;;:::i;:::-;18980:90;18830:247;;;;:::o;19083:442::-;19232:4;19270:2;19259:9;19255:18;19247:26;;19283:71;19351:1;19340:9;19336:17;19327:6;19283:71;:::i;:::-;19364:72;19432:2;19421:9;19417:18;19408:6;19364:72;:::i;:::-;19446;19514:2;19503:9;19499:18;19490:6;19446:72;:::i;:::-;19083:442;;;;;;:::o;19531:86::-;19577:7;19606:5;19595:16;;19531:86;;;:::o;19623:60::-;19651:3;19672:5;19665:12;;19623:60;;;:::o;19689:156::-;19746:9;19779:60;19795:43;19804:33;19831:5;19804:33;:::i;:::-;19795:43;:::i;:::-;19779:60;:::i;:::-;19766:73;;19689:156;;;:::o;19851:145::-;19945:44;19983:5;19945:44;:::i;:::-;19940:3;19933:57;19851:145;;:::o;20002:346::-;20130:4;20168:2;20157:9;20153:18;20145:26;;20181:78;20256:1;20245:9;20241:17;20232:6;20181:78;:::i;:::-;20269:72;20337:2;20326:9;20322:18;20313:6;20269:72;:::i;:::-;20002:346;;;;;:::o;20354:194::-;20394:4;20414:20;20432:1;20414:20;:::i;:::-;20409:25;;20448:20;20466:1;20448:20;:::i;:::-;20443:25;;20492:1;20489;20485:9;20477:17;;20516:1;20510:4;20507:11;20504:37;;;20521:18;;:::i;:::-;20504:37;20354:194;;;;:::o;20554:191::-;20594:3;20613:20;20631:1;20613:20;:::i;:::-;20608:25;;20647:20;20665:1;20647:20;:::i;:::-;20642:25;;20690:1;20687;20683:9;20676:16;;20711:3;20708:1;20705:10;20702:36;;;20718:18;;:::i;:::-;20702:36;20554:191;;;;:::o;20751:332::-;20872:4;20910:2;20899:9;20895:18;20887:26;;20923:71;20991:1;20980:9;20976:17;20967:6;20923:71;:::i;:::-;21004:72;21072:2;21061:9;21057:18;21048:6;21004:72;:::i;:::-;20751:332;;;;;:::o;21089:664::-;21294:4;21332:3;21321:9;21317:19;21309:27;;21346:71;21414:1;21403:9;21399:17;21390:6;21346:71;:::i;:::-;21427:72;21495:2;21484:9;21480:18;21471:6;21427:72;:::i;:::-;21509;21577:2;21566:9;21562:18;21553:6;21509:72;:::i;:::-;21591;21659:2;21648:9;21644:18;21635:6;21591:72;:::i;:::-;21673:73;21741:3;21730:9;21726:19;21717:6;21673:73;:::i;:::-;21089:664;;;;;;;;:::o;21759:180::-;21807:77;21804:1;21797:88;21904:4;21901:1;21894:15;21928:4;21925:1;21918:15;21945:332;22066:4;22104:2;22093:9;22089:18;22081:26;;22117:71;22185:1;22174:9;22170:17;22161:6;22117:71;:::i;:::-;22198:72;22266:2;22255:9;22251:18;22242:6;22198:72;:::i;:::-;21945:332;;;;;:::o;22283:86::-;22329:7;22358:5;22347:16;;22283:86;;;:::o;22375:156::-;22432:9;22465:60;22481:43;22490:33;22517:5;22490:33;:::i;:::-;22481:43;:::i;:::-;22465:60;:::i;:::-;22452:73;;22375:156;;;:::o;22537:145::-;22631:44;22669:5;22631:44;:::i;:::-;22626:3;22619:57;22537:145;;:::o;22688:346::-;22816:4;22854:2;22843:9;22839:18;22831:26;;22867:78;22942:1;22931:9;22927:17;22918:6;22867:78;:::i;:::-;22955:72;23023:2;23012:9;23008:18;22999:6;22955:72;:::i;:::-;22688:346;;;;;:::o;23040:545::-;23213:4;23251:3;23240:9;23236:19;23228:27;;23265:71;23333:1;23322:9;23318:17;23309:6;23265:71;:::i;:::-;23346:68;23410:2;23399:9;23395:18;23386:6;23346:68;:::i;:::-;23424:72;23492:2;23481:9;23477:18;23468:6;23424:72;:::i;:::-;23506;23574:2;23563:9;23559:18;23550:6;23506:72;:::i;:::-;23040:545;;;;;;;:::o;23591:180::-;23639:77;23636:1;23629:88;23736:4;23733:1;23726:15;23760:4;23757:1;23750:15;23777:180;23825:77;23822:1;23815:88;23922:4;23919:1;23912:15;23946:4;23943:1;23936:15;23963:185;24003:1;24020:20;24038:1;24020:20;:::i;:::-;24015:25;;24054:20;24072:1;24054:20;:::i;:::-;24049:25;;24093:1;24083:35;;24098:18;;:::i;:::-;24083:35;24140:1;24137;24133:9;24128:14;;23963:185;;;;:::o;24154:87::-;24201:7;24230:5;24219:16;;24154:87;;;:::o;24247:158::-;24305:9;24338:61;24354:44;24363:34;24391:5;24363:34;:::i;:::-;24354:44;:::i;:::-;24338:61;:::i;:::-;24325:74;;24247:158;;;:::o;24411:147::-;24506:45;24545:5;24506:45;:::i;:::-;24501:3;24494:58;24411:147;;:::o;24564:348::-;24693:4;24731:2;24720:9;24716:18;24708:26;;24744:79;24820:1;24809:9;24805:17;24796:6;24744:79;:::i;:::-;24833:72;24901:2;24890:9;24886:18;24877:6;24833:72;:::i;:::-;24564:348;;;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolymathAxons.sol\":\"PolymathAxons\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/PolymathAxons.sol\":{\"keccak256\":\"0x88d78b90b129f05d68a03b567ec05db39c807a71ffa69abc27401db08ffcdcbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0dd91d9105fdd8278b2636d8680479b8b42715b343ea15ae7509848cc1a9c1c\",\"dweb:/ipfs/QmTLBx8fz3FDM9eVRLaSpGiGqbeJkLxQsLzodueM9f1WU3\"]}},\"version\":1}"}},"contracts/PolymathSigils.sol":{"PolymathSigils":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2042":{"entryPoint":null,"id":2042,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9648":{"entryPoint":null,"id":9648,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":344,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1580,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":698,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1177,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":579,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":547,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":992,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1302,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":756,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":709,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1052,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":542,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1257,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1110,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":906,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1062,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":599,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1105,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6778:40","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:40","statements":[{"nodeType":"YulAssignment","src":"57:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:40"},"nodeType":"YulFunctionCall","src":"67:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:40","type":""}],"src":"7:75:40"},{"body":{"nodeType":"YulBlock","src":"177:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:40"},"nodeType":"YulFunctionCall","src":"187:12:40"},"nodeType":"YulExpressionStatement","src":"187:12:40"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:40"},{"body":{"nodeType":"YulBlock","src":"300:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:40"},"nodeType":"YulFunctionCall","src":"310:12:40"},"nodeType":"YulExpressionStatement","src":"310:12:40"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:40"},{"body":{"nodeType":"YulBlock","src":"379:81:40","statements":[{"nodeType":"YulAssignment","src":"389:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:40"},"nodeType":"YulFunctionCall","src":"400:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:40","type":""}],"src":"334:126:40"},{"body":{"nodeType":"YulBlock","src":"511:51:40","statements":[{"nodeType":"YulAssignment","src":"521:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:40"},"nodeType":"YulFunctionCall","src":"532:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:40","type":""}],"src":"466:96:40"},{"body":{"nodeType":"YulBlock","src":"611:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:40"},"nodeType":"YulFunctionCall","src":"670:12:40"},"nodeType":"YulExpressionStatement","src":"670:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:40"},"nodeType":"YulFunctionCall","src":"641:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:40"},"nodeType":"YulFunctionCall","src":"631:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:40"},"nodeType":"YulFunctionCall","src":"624:43:40"},"nodeType":"YulIf","src":"621:63:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:40","type":""}],"src":"568:122:40"},{"body":{"nodeType":"YulBlock","src":"759:80:40","statements":[{"nodeType":"YulAssignment","src":"769:22:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:40"},"nodeType":"YulFunctionCall","src":"778:13:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:40"},"nodeType":"YulFunctionCall","src":"800:33:40"},"nodeType":"YulExpressionStatement","src":"800:33:40"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:40","type":""}],"src":"696:143:40"},{"body":{"nodeType":"YulBlock","src":"922:274:40","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:40"},"nodeType":"YulFunctionCall","src":"970:79:40"},"nodeType":"YulExpressionStatement","src":"970:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:40"},"nodeType":"YulFunctionCall","src":"939:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:40"},"nodeType":"YulFunctionCall","src":"935:32:40"},"nodeType":"YulIf","src":"932:119:40"},{"nodeType":"YulBlock","src":"1061:128:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:40"},"nodeType":"YulFunctionCall","src":"1147:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:40"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:40"},"nodeType":"YulFunctionCall","src":"1115:64:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:40"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:40","type":""}],"src":"845:351:40"},{"body":{"nodeType":"YulBlock","src":"1261:40:40","statements":[{"nodeType":"YulAssignment","src":"1272:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1288:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1282:5:40"},"nodeType":"YulFunctionCall","src":"1282:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1272:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1254:6:40","type":""}],"src":"1202:99:40"},{"body":{"nodeType":"YulBlock","src":"1335:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:40"},"nodeType":"YulFunctionCall","src":"1345:88:40"},"nodeType":"YulExpressionStatement","src":"1345:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1452:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:40"},"nodeType":"YulFunctionCall","src":"1442:15:40"},"nodeType":"YulExpressionStatement","src":"1442:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:40"},"nodeType":"YulFunctionCall","src":"1466:15:40"},"nodeType":"YulExpressionStatement","src":"1466:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1307:180:40"},{"body":{"nodeType":"YulBlock","src":"1521:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:40"},"nodeType":"YulFunctionCall","src":"1531:88:40"},"nodeType":"YulExpressionStatement","src":"1531:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:40"},"nodeType":"YulFunctionCall","src":"1628:15:40"},"nodeType":"YulExpressionStatement","src":"1628:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:40"},"nodeType":"YulFunctionCall","src":"1652:15:40"},"nodeType":"YulExpressionStatement","src":"1652:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1493:180:40"},{"body":{"nodeType":"YulBlock","src":"1730:269:40","statements":[{"nodeType":"YulAssignment","src":"1740:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1754:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1750:3:40"},"nodeType":"YulFunctionCall","src":"1750:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1740:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"1771:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1801:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"1807:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1797:3:40"},"nodeType":"YulFunctionCall","src":"1797:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1775:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1848:51:40","statements":[{"nodeType":"YulAssignment","src":"1862:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1876:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1884:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1872:3:40"},"nodeType":"YulFunctionCall","src":"1872:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1862:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1828:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:40"},"nodeType":"YulFunctionCall","src":"1821:26:40"},"nodeType":"YulIf","src":"1818:81:40"},{"body":{"nodeType":"YulBlock","src":"1951:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1965:16:40"},"nodeType":"YulFunctionCall","src":"1965:18:40"},"nodeType":"YulExpressionStatement","src":"1965:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1915:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1938:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:40"},"nodeType":"YulFunctionCall","src":"1935:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:40"},"nodeType":"YulFunctionCall","src":"1912:38:40"},"nodeType":"YulIf","src":"1909:84:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1714:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:40","type":""}],"src":"1679:320:40"},{"body":{"nodeType":"YulBlock","src":"2059:87:40","statements":[{"nodeType":"YulAssignment","src":"2069:11:40","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2077:3:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2069:4:40"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:40","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2100:3:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2090:6:40"},"nodeType":"YulFunctionCall","src":"2090:14:40"},"nodeType":"YulExpressionStatement","src":"2090:14:40"},{"nodeType":"YulAssignment","src":"2113:26:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:40","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2121:9:40"},"nodeType":"YulFunctionCall","src":"2121:18:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2113:4:40"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2046:3:40","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2054:4:40","type":""}],"src":"2005:141:40"},{"body":{"nodeType":"YulBlock","src":"2196:49:40","statements":[{"nodeType":"YulAssignment","src":"2206:33:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:40"},"nodeType":"YulFunctionCall","src":"2220:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:40","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2216:3:40"},"nodeType":"YulFunctionCall","src":"2216:23:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:40"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:40","type":""}],"src":"2152:93:40"},{"body":{"nodeType":"YulBlock","src":"2304:54:40","statements":[{"nodeType":"YulAssignment","src":"2314:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2339:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"2345:5:40"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2335:3:40"},"nodeType":"YulFunctionCall","src":"2335:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2314:8:40"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2279:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"2285:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2295:8:40","type":""}],"src":"2251:107:40"},{"body":{"nodeType":"YulBlock","src":"2440:317:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2450:35:40","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2471:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:40","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2467:3:40"},"nodeType":"YulFunctionCall","src":"2467:18:40"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2454:9:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:109:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2525:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"2536:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2506:18:40"},"nodeType":"YulFunctionCall","src":"2506:97:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2498:4:40","type":""}]},{"nodeType":"YulAssignment","src":"2612:51:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2643:9:40"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2654:8:40"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2624:18:40"},"nodeType":"YulFunctionCall","src":"2624:39:40"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2612:8:40"}]},{"nodeType":"YulAssignment","src":"2672:30:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:40"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2696:4:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2692:3:40"},"nodeType":"YulFunctionCall","src":"2692:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2681:3:40"},"nodeType":"YulFunctionCall","src":"2681:21:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:40"}]},{"nodeType":"YulAssignment","src":"2711:40:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2724:5:40"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2735:8:40"},{"name":"mask","nodeType":"YulIdentifier","src":"2745:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2731:3:40"},"nodeType":"YulFunctionCall","src":"2731:19:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2721:2:40"},"nodeType":"YulFunctionCall","src":"2721:30:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2711:6:40"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2401:5:40","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2408:10:40","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2420:8:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2433:6:40","type":""}],"src":"2364:393:40"},{"body":{"nodeType":"YulBlock","src":"2808:32:40","statements":[{"nodeType":"YulAssignment","src":"2818:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2818:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2790:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2800:7:40","type":""}],"src":"2763:77:40"},{"body":{"nodeType":"YulBlock","src":"2878:28:40","statements":[{"nodeType":"YulAssignment","src":"2888:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2895:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2888:3:40"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2864:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2874:3:40","type":""}],"src":"2846:60:40"},{"body":{"nodeType":"YulBlock","src":"2972:82:40","statements":[{"nodeType":"YulAssignment","src":"2982:66:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3022:17:40"},"nodeType":"YulFunctionCall","src":"3022:24:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3013:8:40"},"nodeType":"YulFunctionCall","src":"3013:34:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2995:17:40"},"nodeType":"YulFunctionCall","src":"2995:53:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2982:9:40"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2962:9:40","type":""}],"src":"2912:142:40"},{"body":{"nodeType":"YulBlock","src":"3107:28:40","statements":[{"nodeType":"YulAssignment","src":"3117:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"3124:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3117:3:40"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3103:3:40","type":""}],"src":"3060:75:40"},{"body":{"nodeType":"YulBlock","src":"3217:193:40","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:63:40","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3282:7:40"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3251:30:40"},"nodeType":"YulFunctionCall","src":"3251:39:40"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3231:16:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3306:4:40"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3346:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3340:5:40"},"nodeType":"YulFunctionCall","src":"3340:11:40"},{"name":"offset","nodeType":"YulIdentifier","src":"3353:6:40"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3385:16:40"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3361:23:40"},"nodeType":"YulFunctionCall","src":"3361:41:40"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3312:27:40"},"nodeType":"YulFunctionCall","src":"3312:91:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3299:6:40"},"nodeType":"YulFunctionCall","src":"3299:105:40"},"nodeType":"YulExpressionStatement","src":"3299:105:40"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3194:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3200:6:40","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3208:7:40","type":""}],"src":"3141:269:40"},{"body":{"nodeType":"YulBlock","src":"3465:24:40","statements":[{"nodeType":"YulAssignment","src":"3475:8:40","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:1:40","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3475:3:40"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3461:3:40","type":""}],"src":"3416:73:40"},{"body":{"nodeType":"YulBlock","src":"3548:136:40","statements":[{"nodeType":"YulVariableDeclaration","src":"3558:46:40","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3572:30:40"},"nodeType":"YulFunctionCall","src":"3572:32:40"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3562:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3657:4:40"},{"name":"offset","nodeType":"YulIdentifier","src":"3663:6:40"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3671:6:40"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3613:43:40"},"nodeType":"YulFunctionCall","src":"3613:65:40"},"nodeType":"YulExpressionStatement","src":"3613:65:40"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3534:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3540:6:40","type":""}],"src":"3495:189:40"},{"body":{"nodeType":"YulBlock","src":"3740:136:40","statements":[{"body":{"nodeType":"YulBlock","src":"3807:63:40","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3851:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:40","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3821:29:40"},"nodeType":"YulFunctionCall","src":"3821:39:40"},"nodeType":"YulExpressionStatement","src":"3821:39:40"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3760:5:40"},{"name":"end","nodeType":"YulIdentifier","src":"3767:3:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3757:2:40"},"nodeType":"YulFunctionCall","src":"3757:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3772:26:40","statements":[{"nodeType":"YulAssignment","src":"3774:22:40","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3787:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3794:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:40"},"nodeType":"YulFunctionCall","src":"3783:13:40"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3774:5:40"}]}]},"pre":{"nodeType":"YulBlock","src":"3754:2:40","statements":[]},"src":"3750:120:40"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3728:5:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"3735:3:40","type":""}],"src":"3690:186:40"},{"body":{"nodeType":"YulBlock","src":"3961:464:40","statements":[{"body":{"nodeType":"YulBlock","src":"3987:431:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4001:54:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4049:5:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4017:31:40"},"nodeType":"YulFunctionCall","src":"4017:38:40"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4005:8:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:63:40","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4091:8:40"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4119:10:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4101:17:40"},"nodeType":"YulFunctionCall","src":"4101:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:40"},"nodeType":"YulFunctionCall","src":"4087:44:40"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4072:11:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:27:40","statements":[{"nodeType":"YulAssignment","src":"4290:23:40","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4305:8:40"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4290:11:40"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4272:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4269:2:40"},"nodeType":"YulFunctionCall","src":"4269:18:40"},"nodeType":"YulIf","src":"4266:49:40"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4357:11:40"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4374:8:40"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4402:3:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4384:17:40"},"nodeType":"YulFunctionCall","src":"4384:22:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:40"},"nodeType":"YulFunctionCall","src":"4370:37:40"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4328:28:40"},"nodeType":"YulFunctionCall","src":"4328:80:40"},"nodeType":"YulExpressionStatement","src":"4328:80:40"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3978:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3983:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:40"},"nodeType":"YulFunctionCall","src":"3975:11:40"},"nodeType":"YulIf","src":"3972:446:40"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3937:5:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"3944:3:40","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3949:10:40","type":""}],"src":"3882:543:40"},{"body":{"nodeType":"YulBlock","src":"4494:54:40","statements":[{"nodeType":"YulAssignment","src":"4504:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4529:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"4535:5:40"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4525:3:40"},"nodeType":"YulFunctionCall","src":"4525:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4504:8:40"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4469:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"4475:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4485:8:40","type":""}],"src":"4431:117:40"},{"body":{"nodeType":"YulBlock","src":"4605:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4615:68:40","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:1:40","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4667:5:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4660:3:40"},"nodeType":"YulFunctionCall","src":"4660:13:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:40","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4675:3:40"},"nodeType":"YulFunctionCall","src":"4675:6:40"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4631:28:40"},"nodeType":"YulFunctionCall","src":"4631:51:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4627:3:40"},"nodeType":"YulFunctionCall","src":"4627:56:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4619:4:40","type":""}]},{"nodeType":"YulAssignment","src":"4692:25:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4706:4:40"},{"name":"mask","nodeType":"YulIdentifier","src":"4712:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4702:3:40"},"nodeType":"YulFunctionCall","src":"4702:15:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:40"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4582:4:40","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4588:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4598:6:40","type":""}],"src":"4554:169:40"},{"body":{"nodeType":"YulBlock","src":"4809:214:40","statements":[{"nodeType":"YulAssignment","src":"4942:37:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4969:4:40"},{"name":"len","nodeType":"YulIdentifier","src":"4975:3:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4950:18:40"},"nodeType":"YulFunctionCall","src":"4950:29:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4942:4:40"}]},{"nodeType":"YulAssignment","src":"4988:29:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4999:4:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5009:1:40","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5012:3:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5005:3:40"},"nodeType":"YulFunctionCall","src":"5005:11:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4996:2:40"},"nodeType":"YulFunctionCall","src":"4996:21:40"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4988:4:40"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4790:4:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"4796:3:40","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4804:4:40","type":""}],"src":"4728:295:40"},{"body":{"nodeType":"YulBlock","src":"5120:1303:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5131:51:40","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5178:3:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5145:32:40"},"nodeType":"YulFunctionCall","src":"5145:37:40"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5135:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5267:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5269:16:40"},"nodeType":"YulFunctionCall","src":"5269:18:40"},"nodeType":"YulExpressionStatement","src":"5269:18:40"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5239:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5247:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5236:2:40"},"nodeType":"YulFunctionCall","src":"5236:30:40"},"nodeType":"YulIf","src":"5233:56:40"},{"nodeType":"YulVariableDeclaration","src":"5299:52:40","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5345:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5339:5:40"},"nodeType":"YulFunctionCall","src":"5339:11:40"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5313:25:40"},"nodeType":"YulFunctionCall","src":"5313:38:40"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5303:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:40"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5450:6:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"5458:6:40"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5398:45:40"},"nodeType":"YulFunctionCall","src":"5398:67:40"},"nodeType":"YulExpressionStatement","src":"5398:67:40"},{"nodeType":"YulVariableDeclaration","src":"5475:18:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5492:1:40","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5479:9:40","type":""}]},{"nodeType":"YulAssignment","src":"5503:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5516:4:40","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5503:9:40"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5567:611:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5581:37:40","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5600:6:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:4:40","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5608:3:40"},"nodeType":"YulFunctionCall","src":"5608:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:40"},"nodeType":"YulFunctionCall","src":"5596:22:40"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5585:7:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5632:51:40","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5678:4:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5646:31:40"},"nodeType":"YulFunctionCall","src":"5646:37:40"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5636:6:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5696:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5705:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5700:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:163:40","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5789:6:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5807:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5812:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:40"},"nodeType":"YulFunctionCall","src":"5803:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5797:5:40"},"nodeType":"YulFunctionCall","src":"5797:26:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5782:6:40"},"nodeType":"YulFunctionCall","src":"5782:42:40"},"nodeType":"YulExpressionStatement","src":"5782:42:40"},{"nodeType":"YulAssignment","src":"5841:24:40","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5855:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:40"},"nodeType":"YulFunctionCall","src":"5851:14:40"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5841:6:40"}]},{"nodeType":"YulAssignment","src":"5882:31:40","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5899:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:40"},"nodeType":"YulFunctionCall","src":"5895:18:40"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5882:9:40"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5730:1:40"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5733:7:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:40"},"nodeType":"YulFunctionCall","src":"5727:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5742:21:40","statements":[{"nodeType":"YulAssignment","src":"5744:17:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5753:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"5756:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:40"},"nodeType":"YulFunctionCall","src":"5749:12:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5744:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"5723:3:40","statements":[]},"src":"5719:208:40"},{"body":{"nodeType":"YulBlock","src":"5963:156:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5981:43:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6008:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6013:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:40"},"nodeType":"YulFunctionCall","src":"6004:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5998:5:40"},"nodeType":"YulFunctionCall","src":"5998:26:40"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5985:9:40","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:40"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6075:9:40"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6090:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"6098:4:40","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6086:3:40"},"nodeType":"YulFunctionCall","src":"6086:17:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6056:18:40"},"nodeType":"YulFunctionCall","src":"6056:48:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6041:6:40"},"nodeType":"YulFunctionCall","src":"6041:64:40"},"nodeType":"YulExpressionStatement","src":"6041:64:40"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5946:7:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"5955:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5943:2:40"},"nodeType":"YulFunctionCall","src":"5943:19:40"},"nodeType":"YulIf","src":"5940:179:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6139:4:40"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6153:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:40","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6149:3:40"},"nodeType":"YulFunctionCall","src":"6149:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:40"},"nodeType":"YulFunctionCall","src":"6145:22:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6132:6:40"},"nodeType":"YulFunctionCall","src":"6132:36:40"},"nodeType":"YulExpressionStatement","src":"6132:36:40"}]},"nodeType":"YulCase","src":"5560:618:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5565:1:40","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6195:222:40","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:14:40","value":{"kind":"number","nodeType":"YulLiteral","src":"6222:1:40","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6213:5:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"6246:67:40","statements":[{"nodeType":"YulAssignment","src":"6264:35:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6283:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6288:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6279:3:40"},"nodeType":"YulFunctionCall","src":"6279:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6273:5:40"},"nodeType":"YulFunctionCall","src":"6273:26:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6264:5:40"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6239:6:40"},"nodeType":"YulIf","src":"6236:77:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6333:4:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6392:5:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"6399:6:40"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6339:52:40"},"nodeType":"YulFunctionCall","src":"6339:67:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6326:6:40"},"nodeType":"YulFunctionCall","src":"6326:81:40"},"nodeType":"YulExpressionStatement","src":"6326:81:40"}]},"nodeType":"YulCase","src":"6187:230:40","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5540:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5537:2:40"},"nodeType":"YulFunctionCall","src":"5537:14:40"},"nodeType":"YulSwitch","src":"5530:887:40"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5109:4:40","type":""},{"name":"src","nodeType":"YulTypedName","src":"5115:3:40","type":""}],"src":"5028:1395:40"},{"body":{"nodeType":"YulBlock","src":"6494:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6511:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6534:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6516:17:40"},"nodeType":"YulFunctionCall","src":"6516:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6504:6:40"},"nodeType":"YulFunctionCall","src":"6504:37:40"},"nodeType":"YulExpressionStatement","src":"6504:37:40"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6482:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6489:3:40","type":""}],"src":"6429:118:40"},{"body":{"nodeType":"YulBlock","src":"6651:124:40","statements":[{"nodeType":"YulAssignment","src":"6661:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:40"},"nodeType":"YulFunctionCall","src":"6669:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6661:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6754:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6765:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:40"},"nodeType":"YulFunctionCall","src":"6750:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6697:43:40"},"nodeType":"YulFunctionCall","src":"6697:71:40"},"nodeType":"YulExpressionStatement","src":"6697:71:40"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6623:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6635:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6646:4:40","type":""}],"src":"6553:222:40"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002cd738038062002cd7833981810160405281019062000037919062000288565b806040518060400160405280600e81526020017f506f6c796d617468536967696c730000000000000000000000000000000000008152506040518060400160405280600781526020017f504c5953474c53000000000000000000000000000000000000000000000000008152508160009081620000b5919062000534565b508060019081620000c7919062000534565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013691906200062c565b60405180910390fd5b62000150816200015860201b60201c565b505062000649565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002508262000223565b9050919050565b620002628162000243565b81146200026e57600080fd5b50565b600081519050620002828162000257565b92915050565b600060208284031215620002a157620002a06200021e565b5b6000620002b18482850162000271565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033c57607f821691505b602082108103620003525762000351620002f4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200037d565b620003c886836200037d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004156200040f6200040984620003e0565b620003ea565b620003e0565b9050919050565b6000819050919050565b6200043183620003f4565b6200044962000440826200041c565b8484546200038a565b825550505050565b600090565b6200046062000451565b6200046d81848462000426565b505050565b5b8181101562000495576200048960008262000456565b60018101905062000473565b5050565b601f821115620004e457620004ae8162000358565b620004b9846200036d565b81016020851015620004c9578190505b620004e1620004d8856200036d565b83018262000472565b50505b505050565b600082821c905092915050565b60006200050960001984600802620004e9565b1980831691505092915050565b6000620005248383620004f6565b9150826002028217905092915050565b6200053f82620002ba565b67ffffffffffffffff8111156200055b576200055a620002c5565b5b62000567825462000323565b6200057482828562000499565b600060209050601f831160018114620005ac576000841562000597578287015190505b620005a3858262000516565b86555062000613565b601f198416620005bc8662000358565b60005b82811015620005e657848901518255600182019150602085019450602081019050620005bf565b8683101562000606578489015162000602601f891682620004f6565b8355505b6001600288020188555050505b505050505050565b620006268162000243565b82525050565b60006020820190506200064360008301846200061b565b92915050565b61267e80620006596000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063d204c45e146102f0578063e985e9c51461030c578063f2fde38b1461033c5761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611ad6565b610358565b6040516101379190611b1e565b60405180910390f35b61014861036a565b6040516101559190611bc9565b60405180910390f35b61017860048036038101906101739190611c21565b6103fc565b6040516101859190611c8f565b60405180910390f35b6101a860048036038101906101a39190611cd6565b610418565b005b6101c460048036038101906101bf9190611d16565b61042e565b005b6101e060048036038101906101db9190611d16565b610530565b005b6101fc60048036038101906101f79190611c21565b610550565b6040516102099190611c8f565b60405180910390f35b61022c60048036038101906102279190611d69565b610562565b6040516102399190611da5565b60405180910390f35b61024a61061c565b005b610254610630565b6040516102619190611c8f565b60405180910390f35b61027261065a565b60405161027f9190611bc9565b60405180910390f35b6102a2600480360381019061029d9190611dec565b6106ec565b005b6102be60048036038101906102b99190611f61565b610702565b005b6102da60048036038101906102d59190611c21565b61071f565b6040516102e79190611bc9565b60405180910390f35b61030a60048036038101906103059190612085565b610731565b005b610326600480360381019061032191906120e1565b61076d565b6040516103339190611b1e565b60405180910390f35b61035660048036038101906103519190611d69565b610801565b005b600061036382610887565b9050919050565b60606000805461037990612150565b80601f01602080910402602001604051908101604052809291908181526020018280546103a590612150565b80156103f25780601f106103c7576101008083540402835291602001916103f2565b820191906000526020600020905b8154815290600101906020018083116103d557829003601f168201915b5050505050905090565b6000610407826108e8565b5061041182610970565b9050919050565b61042a82826104256109ad565b6109b5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a05760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104979190611c8f565b60405180910390fd5b60006104b483836104af6109ad565b6109c7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461052a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052193929190612181565b60405180910390fd5b50505050565b61054b83838360405180602001604052806000815250610702565b505050565b600061055b826108e8565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d55760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105cc9190611c8f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610624610be1565b61062e6000610c68565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461066990612150565b80601f016020809104026020016040519081016040528092919081815260200182805461069590612150565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b5050505050905090565b6106fe6106f76109ad565b8383610d2e565b5050565b61070d84848461042e565b61071984848484610e9d565b50505050565b606061072a82611054565b9050919050565b610739610be1565b60006008600081548092919061074e906121e7565b91905055905061075e8382611167565b6107688183611185565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610809610be1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361087b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108729190611c8f565b60405180910390fd5b61088481610c68565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108e157506108e0826111e1565b5b9050919050565b6000806108f4836112c3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096757826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161095e9190611da5565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109c28383836001611300565b505050565b6000806109d3846112c3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a1557610a148184866114c5565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aa657610a57600085600080611300565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b29576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610be96109ad565b73ffffffffffffffffffffffffffffffffffffffff16610c07610630565b73ffffffffffffffffffffffffffffffffffffffff1614610c6657610c2a6109ad565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c5d9190611c8f565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d9f57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d969190611c8f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e909190611b1e565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561104e578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ee16109ad565b8685856040518563ffffffff1660e01b8152600401610f039493929190612284565b6020604051808303816000875af1925050508015610f3f57506040513d601f19601f82011682018060405250810190610f3c91906122e5565b60015b610fc3573d8060008114610f6f576040519150601f19603f3d011682016040523d82523d6000602084013e610f74565b606091505b506000815103610fbb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fb29190611c8f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110439190611c8f565b60405180910390fd5b505b50505050565b606061105f826108e8565b50600060066000848152602001908152602001600020805461108090612150565b80601f01602080910402602001604051908101604052809291908181526020018280546110ac90612150565b80156110f95780601f106110ce576101008083540402835291602001916110f9565b820191906000526020600020905b8154815290600101906020018083116110dc57829003601f168201915b50505050509050600061110a611589565b9050600081510361111f578192505050611162565b60008251111561115457808260405160200161113c92919061234e565b60405160208183030381529060405292505050611162565b61115d846115a0565b925050505b919050565b611181828260405180602001604052806000815250611609565b5050565b806006600084815260200190815260200160002090816111a5919061251e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111d59190611da5565b60405180910390a15050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112ac57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112bc57506112bb82611625565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113395750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561146d576000611349846108e8565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113b457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113c757506113c5818461076d565b155b1561140957826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114009190611c8f565b60405180910390fd5b811561146b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114d083838361168f565b61158457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361154557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161153c9190611da5565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161157b9291906125f0565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b60606115ab826108e8565b5060006115b6611589565b905060008151116115d65760405180602001604052806000815250611601565b806115e084611750565b6040516020016115f192919061234e565b6040516020818303038152906040525b915050919050565b611613838361181e565b6116206000848484610e9d565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561174757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806117085750611707848461076d565b5b8061174657508273ffffffffffffffffffffffffffffffffffffffff1661172e83610970565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60606000600161175f84611917565b01905060008167ffffffffffffffff81111561177e5761177d611e36565b5b6040519080825280601f01601f1916602001820160405280156117b05781602001600182028036833780820191505090505b509050600082602001820190505b600115611813578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161180757611806612619565b5b049450600085036117be575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118905760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118879190611c8f565b60405180910390fd5b600061189e838360006109c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119125760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016119099190611c8f565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611975577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161196b5761196a612619565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106119b2576d04ee2d6d415b85acef810000000083816119a8576119a7612619565b5b0492506020810190505b662386f26fc1000083106119e157662386f26fc1000083816119d7576119d6612619565b5b0492506010810190505b6305f5e1008310611a0a576305f5e1008381611a00576119ff612619565b5b0492506008810190505b6127108310611a2f576127108381611a2557611a24612619565b5b0492506004810190505b60648310611a525760648381611a4857611a47612619565b5b0492506002810190505b600a8310611a61576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ab381611a7e565b8114611abe57600080fd5b50565b600081359050611ad081611aaa565b92915050565b600060208284031215611aec57611aeb611a74565b5b6000611afa84828501611ac1565b91505092915050565b60008115159050919050565b611b1881611b03565b82525050565b6000602082019050611b336000830184611b0f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b73578082015181840152602081019050611b58565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b9b82611b39565b611ba58185611b44565b9350611bb5818560208601611b55565b611bbe81611b7f565b840191505092915050565b60006020820190508181036000830152611be38184611b90565b905092915050565b6000819050919050565b611bfe81611beb565b8114611c0957600080fd5b50565b600081359050611c1b81611bf5565b92915050565b600060208284031215611c3757611c36611a74565b5b6000611c4584828501611c0c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c7982611c4e565b9050919050565b611c8981611c6e565b82525050565b6000602082019050611ca46000830184611c80565b92915050565b611cb381611c6e565b8114611cbe57600080fd5b50565b600081359050611cd081611caa565b92915050565b60008060408385031215611ced57611cec611a74565b5b6000611cfb85828601611cc1565b9250506020611d0c85828601611c0c565b9150509250929050565b600080600060608486031215611d2f57611d2e611a74565b5b6000611d3d86828701611cc1565b9350506020611d4e86828701611cc1565b9250506040611d5f86828701611c0c565b9150509250925092565b600060208284031215611d7f57611d7e611a74565b5b6000611d8d84828501611cc1565b91505092915050565b611d9f81611beb565b82525050565b6000602082019050611dba6000830184611d96565b92915050565b611dc981611b03565b8114611dd457600080fd5b50565b600081359050611de681611dc0565b92915050565b60008060408385031215611e0357611e02611a74565b5b6000611e1185828601611cc1565b9250506020611e2285828601611dd7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e6e82611b7f565b810181811067ffffffffffffffff82111715611e8d57611e8c611e36565b5b80604052505050565b6000611ea0611a6a565b9050611eac8282611e65565b919050565b600067ffffffffffffffff821115611ecc57611ecb611e36565b5b611ed582611b7f565b9050602081019050919050565b82818337600083830152505050565b6000611f04611eff84611eb1565b611e96565b905082815260208101848484011115611f2057611f1f611e31565b5b611f2b848285611ee2565b509392505050565b600082601f830112611f4857611f47611e2c565b5b8135611f58848260208601611ef1565b91505092915050565b60008060008060808587031215611f7b57611f7a611a74565b5b6000611f8987828801611cc1565b9450506020611f9a87828801611cc1565b9350506040611fab87828801611c0c565b925050606085013567ffffffffffffffff811115611fcc57611fcb611a79565b5b611fd887828801611f33565b91505092959194509250565b600067ffffffffffffffff821115611fff57611ffe611e36565b5b61200882611b7f565b9050602081019050919050565b600061202861202384611fe4565b611e96565b90508281526020810184848401111561204457612043611e31565b5b61204f848285611ee2565b509392505050565b600082601f83011261206c5761206b611e2c565b5b813561207c848260208601612015565b91505092915050565b6000806040838503121561209c5761209b611a74565b5b60006120aa85828601611cc1565b925050602083013567ffffffffffffffff8111156120cb576120ca611a79565b5b6120d785828601612057565b9150509250929050565b600080604083850312156120f8576120f7611a74565b5b600061210685828601611cc1565b925050602061211785828601611cc1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061216857607f821691505b60208210810361217b5761217a612121565b5b50919050565b60006060820190506121966000830186611c80565b6121a36020830185611d96565b6121b06040830184611c80565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121f282611beb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612224576122236121b8565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006122568261222f565b612260818561223a565b9350612270818560208601611b55565b61227981611b7f565b840191505092915050565b60006080820190506122996000830187611c80565b6122a66020830186611c80565b6122b36040830185611d96565b81810360608301526122c5818461224b565b905095945050505050565b6000815190506122df81611aaa565b92915050565b6000602082840312156122fb576122fa611a74565b5b6000612309848285016122d0565b91505092915050565b600081905092915050565b600061232882611b39565b6123328185612312565b9350612342818560208601611b55565b80840191505092915050565b600061235a828561231d565b9150612366828461231d565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026123d47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612397565b6123de8683612397565b95508019841693508086168417925050509392505050565b6000819050919050565b600061241b61241661241184611beb565b6123f6565b611beb565b9050919050565b6000819050919050565b61243583612400565b61244961244182612422565b8484546123a4565b825550505050565b600090565b61245e612451565b61246981848461242c565b505050565b5b8181101561248d57612482600082612456565b60018101905061246f565b5050565b601f8211156124d2576124a381612372565b6124ac84612387565b810160208510156124bb578190505b6124cf6124c785612387565b83018261246e565b50505b505050565b600082821c905092915050565b60006124f5600019846008026124d7565b1980831691505092915050565b600061250e83836124e4565b9150826002028217905092915050565b61252782611b39565b67ffffffffffffffff8111156125405761253f611e36565b5b61254a8254612150565b612555828285612491565b600060209050601f8311600181146125885760008415612576578287015190505b6125808582612502565b8655506125e8565b601f19841661259686612372565b60005b828110156125be57848901518255600182019150602085019450602081019050612599565b868310156125db57848901516125d7601f8916826124e4565b8355505b6001600288020188555050505b505050505050565b60006040820190506126056000830185611c80565b6126126020830184611d96565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212207794a6a3543bc43226cd259f1c987b73b6d1f865d94fac8b3633cff89d4fbea464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CD7 CODESIZE SUB DUP1 PUSH3 0x2CD7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x288 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C796D617468536967696C73000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504C5953474C5300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250 DUP3 PUSH3 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x262 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP2 EQ PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x282 DUP2 PUSH3 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A1 JUMPI PUSH3 0x2A0 PUSH3 0x21E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B1 DUP5 DUP3 DUP6 ADD PUSH3 0x271 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x33C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0x2F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x37D JUMP JUMPDEST PUSH3 0x3C8 DUP7 DUP4 PUSH3 0x37D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 PUSH3 0x40F PUSH3 0x409 DUP5 PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x431 DUP4 PUSH3 0x3F4 JUMP JUMPDEST PUSH3 0x449 PUSH3 0x440 DUP3 PUSH3 0x41C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x38A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x460 PUSH3 0x451 JUMP JUMPDEST PUSH3 0x46D DUP2 DUP5 DUP5 PUSH3 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x495 JUMPI PUSH3 0x489 PUSH1 0x0 DUP3 PUSH3 0x456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x473 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4E4 JUMPI PUSH3 0x4AE DUP2 PUSH3 0x358 JUMP JUMPDEST PUSH3 0x4B9 DUP5 PUSH3 0x36D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4C9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4E1 PUSH3 0x4D8 DUP6 PUSH3 0x36D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x472 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x509 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4E9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 PUSH3 0x4F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x53F DUP3 PUSH3 0x2BA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST PUSH3 0x567 DUP3 SLOAD PUSH3 0x323 JUMP JUMPDEST PUSH3 0x574 DUP3 DUP3 DUP6 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x597 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5A3 DUP6 DUP3 PUSH3 0x516 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x613 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5BC DUP7 PUSH3 0x358 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5BF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x606 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x602 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x626 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x643 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x61B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267E DUP1 PUSH3 0x659 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP3 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x411 DUP3 PUSH2 0x970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x425 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP4 DUP4 PUSH2 0x4AF PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x702 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xC68 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x6F7 PUSH2 0x9AD JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE9D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72A DUP3 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x74E SWAP1 PUSH2 0x21E7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x75E DUP4 DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP4 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x809 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x884 DUP2 PUSH2 0xC68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8E1 JUMPI POP PUSH2 0x8E0 DUP3 PUSH2 0x11E1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F4 DUP4 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x967 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1300 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D3 DUP5 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA15 JUMPI PUSH2 0xA14 DUP2 DUP5 DUP7 PUSH2 0x14C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA6 JUMPI PUSH2 0xA57 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB29 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC07 PUSH2 0x630 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC66 JUMPI PUSH2 0xC2A PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x104E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEE1 PUSH2 0x9AD JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF03 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF3F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFC3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFBB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x104C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105F DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1080 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AC SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x110A PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x111F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1154 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x113C SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x115D DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1181 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1609 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x12AC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12BC JUMPI POP PUSH2 0x12BB DUP3 PUSH2 0x1625 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1339 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 PUSH2 0x1349 DUP5 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13C7 JUMPI POP PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x76D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1409 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x146B JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14D0 DUP4 DUP4 DUP4 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1584 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15AB DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x15B6 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1601 JUMP JUMPDEST DUP1 PUSH2 0x15E0 DUP5 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15F1 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1613 DUP4 DUP4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x1620 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1747 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1708 JUMPI POP PUSH2 0x1707 DUP5 DUP5 PUSH2 0x76D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1746 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172E DUP4 PUSH2 0x970 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x175F DUP5 PUSH2 0x1917 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1813 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x17BE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1890 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1887 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189E DUP4 DUP4 PUSH1 0x0 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1912 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1909 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1975 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x19B2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x19A8 JUMPI PUSH2 0x19A7 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19E1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19D7 JUMPI PUSH2 0x19D6 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A0A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A2F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A25 JUMPI PUSH2 0x1A24 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A52 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A61 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x1A7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD0 DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B18 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9B DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x1BA5 DUP2 DUP6 PUSH2 0x1B44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BB5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE3 DUP2 DUP5 PUSH2 0x1B90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFE DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1B DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH2 0x1C36 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C45 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C79 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x1C6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1C6E JUMP JUMPDEST DUP2 EQ PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CD0 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CFB DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D0C DUP6 DUP3 DUP7 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D3D DUP7 DUP3 DUP8 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D4E DUP7 DUP3 DUP8 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D5F DUP7 DUP3 DUP8 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP5 DUP3 DUP6 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC9 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE6 DUP2 PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E11 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E22 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E6E DUP3 PUSH2 0x1B7F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA0 PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAC DUP3 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECB PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED5 DUP3 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F04 PUSH2 0x1EFF DUP5 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST PUSH2 0x1F2B DUP5 DUP3 DUP6 PUSH2 0x1EE2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F58 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F7B JUMPI PUSH2 0x1F7A PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F89 DUP8 DUP3 DUP9 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F9A DUP8 DUP3 DUP9 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1FAB DUP8 DUP3 DUP9 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST PUSH2 0x1FD8 DUP8 DUP3 DUP9 ADD PUSH2 0x1F33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFE PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x2008 DUP3 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 PUSH2 0x2023 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST PUSH2 0x204F DUP5 DUP3 DUP6 PUSH2 0x1EE2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x207C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST PUSH2 0x20D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F8 JUMPI PUSH2 0x20F7 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2106 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2117 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2168 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x217B JUMPI PUSH2 0x217A PUSH2 0x2121 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2196 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x21A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x21B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21F2 DUP3 PUSH2 0x1BEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2256 DUP3 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x2260 DUP2 DUP6 PUSH2 0x223A JUMP JUMPDEST SWAP4 POP PUSH2 0x2270 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2299 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x22A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x22B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 DUP5 PUSH2 0x224B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22DF DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FB JUMPI PUSH2 0x22FA PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP5 DUP3 DUP6 ADD PUSH2 0x22D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x2332 DUP2 DUP6 PUSH2 0x2312 JUMP JUMPDEST SWAP4 POP PUSH2 0x2342 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235A DUP3 DUP6 PUSH2 0x231D JUMP JUMPDEST SWAP2 POP PUSH2 0x2366 DUP3 DUP5 PUSH2 0x231D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x23D4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x23DE DUP7 DUP4 PUSH2 0x2397 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241B PUSH2 0x2416 PUSH2 0x2411 DUP5 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2435 DUP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0x2441 DUP3 PUSH2 0x2422 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x23A4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x245E PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x2469 DUP2 DUP5 DUP5 PUSH2 0x242C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x248D JUMPI PUSH2 0x2482 PUSH1 0x0 DUP3 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x246F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24A3 DUP2 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x24AC DUP5 PUSH2 0x2387 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x24BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x24CF PUSH2 0x24C7 DUP6 PUSH2 0x2387 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x246E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x24D7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250E DUP4 DUP4 PUSH2 0x24E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2527 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x253F PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x254A DUP3 SLOAD PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x2555 DUP3 DUP3 DUP6 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2588 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2576 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2580 DUP6 DUP3 PUSH2 0x2502 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2596 DUP7 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25BE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2599 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x25DB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x25D7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x24E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2605 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x2612 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x94A6A3543BC43226CD259F1C987B73B6D1F865D94FAC8B36 CALLER 0xCF 0xF8 SWAP14 0x4F 0xBE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"307:881:39:-:0;;;409:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;503:12;1381:113:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;409:114:39;307:881;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:40:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;307:881:39:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2784":{"entryPoint":2485,"id":2784,"parameterSlots":3,"returnSlots":0},"@_approve_2850":{"entryPoint":4864,"id":2850,"parameterSlots":4,"returnSlots":0},"@_baseURI_2177":{"entryPoint":5513,"id":2177,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2432":{"entryPoint":5317,"id":2432,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_2980":{"entryPoint":3741,"id":2980,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3041,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_2359":{"entryPoint":2416,"id":2359,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_2395":{"entryPoint":5775,"id":2395,"parameterSlots":3,"returnSlots":1},"@_mint_2588":{"entryPoint":6174,"id":2588,"parameterSlots":2,"returnSlots":0},"@_msgSender_3282":{"entryPoint":2477,"id":3282,"parameterSlots":0,"returnSlots":1},"@_ownerOf_2346":{"entryPoint":4803,"id":2346,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2916":{"entryPoint":2280,"id":2916,"parameterSlots":1,"returnSlots":1},"@_safeMint_2603":{"entryPoint":4455,"id":2603,"parameterSlots":2,"returnSlots":0},"@_safeMint_2629":{"entryPoint":5641,"id":2629,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2887":{"entryPoint":3374,"id":2887,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_3241":{"entryPoint":4485,"id":3241,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3176,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_2538":{"entryPoint":2503,"id":2538,"parameterSlots":3,"returnSlots":1},"@approve_2193":{"entryPoint":1048,"id":2193,"parameterSlots":2,"returnSlots":0},"@balanceOf_2101":{"entryPoint":1378,"id":2101,"parameterSlots":1,"returnSlots":1},"@getApproved_2210":{"entryPoint":1020,"id":2210,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_2243":{"entryPoint":1901,"id":2243,"parameterSlots":2,"returnSlots":1},"@log10_5618":{"entryPoint":6423,"id":5618,"parameterSlots":1,"returnSlots":1},"@name_2123":{"entryPoint":874,"id":2123,"parameterSlots":0,"returnSlots":1},"@ownerOf_2114":{"entryPoint":1360,"id":2114,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1584,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1564,"id":98,"parameterSlots":0,"returnSlots":0},"@safeMint_9673":{"entryPoint":1841,"id":9673,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_2307":{"entryPoint":1328,"id":2307,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_2333":{"entryPoint":1794,"id":2333,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_2226":{"entryPoint":1772,"id":2226,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2073":{"entryPoint":4577,"id":2073,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3165":{"entryPoint":2183,"id":3165,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4731":{"entryPoint":5669,"id":4731,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9705":{"entryPoint":856,"id":9705,"parameterSlots":1,"returnSlots":1},"@symbol_2132":{"entryPoint":1626,"id":2132,"parameterSlots":0,"returnSlots":1},"@toString_3872":{"entryPoint":5968,"id":3872,"parameterSlots":1,"returnSlots":1},"@tokenURI_2168":{"entryPoint":5536,"id":2168,"parameterSlots":1,"returnSlots":1},"@tokenURI_3222":{"entryPoint":4180,"id":3222,"parameterSlots":1,"returnSlots":1},"@tokenURI_9689":{"entryPoint":1823,"id":9689,"parameterSlots":1,"returnSlots":1},"@transferFrom_2289":{"entryPoint":1070,"id":2289,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2049,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7921,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8213,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8417,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7446,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8033,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7660,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":8325,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7382,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7296,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6927,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7574,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9038,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8836,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9712,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8577,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7589,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7830,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6762,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7857,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8164,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9074,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8751,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6969,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8762,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6980,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8978,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":9361,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7278,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6915,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6782,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7246,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":9326,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":9216,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":9502,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7906,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6997,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":9095,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8528,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":9474,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7781,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9206,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8679,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":9444,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8632,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9753,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8481,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7734,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":9250,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7724,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7729,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6777,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6772,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7039,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9111,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":9431,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":9302,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":9124,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":9260,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7338,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7616,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6826,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7157,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":9297,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21279:40","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:40","statements":[{"nodeType":"YulAssignment","src":"57:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:40"},"nodeType":"YulFunctionCall","src":"67:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:40","type":""}],"src":"7:75:40"},{"body":{"nodeType":"YulBlock","src":"177:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:40"},"nodeType":"YulFunctionCall","src":"187:12:40"},"nodeType":"YulExpressionStatement","src":"187:12:40"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:40"},{"body":{"nodeType":"YulBlock","src":"300:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:40"},"nodeType":"YulFunctionCall","src":"310:12:40"},"nodeType":"YulExpressionStatement","src":"310:12:40"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:40"},{"body":{"nodeType":"YulBlock","src":"378:105:40","statements":[{"nodeType":"YulAssignment","src":"388:89:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:40","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:40"},"nodeType":"YulFunctionCall","src":"399:78:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:40"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:40","type":""}],"src":"334:149:40"},{"body":{"nodeType":"YulBlock","src":"531:78:40","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:40"},"nodeType":"YulFunctionCall","src":"589:12:40"},"nodeType":"YulExpressionStatement","src":"589:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:40"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:40"},"nodeType":"YulFunctionCall","src":"561:23:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:40"},"nodeType":"YulFunctionCall","src":"551:34:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:40"},"nodeType":"YulFunctionCall","src":"544:42:40"},"nodeType":"YulIf","src":"541:62:40"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:40","type":""}],"src":"489:120:40"},{"body":{"nodeType":"YulBlock","src":"666:86:40","statements":[{"nodeType":"YulAssignment","src":"676:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:40"},"nodeType":"YulFunctionCall","src":"685:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:40"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:40"},"nodeType":"YulFunctionCall","src":"714:32:40"},"nodeType":"YulExpressionStatement","src":"714:32:40"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:40","type":""}],"src":"615:137:40"},{"body":{"nodeType":"YulBlock","src":"823:262:40","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:40"},"nodeType":"YulFunctionCall","src":"871:79:40"},"nodeType":"YulExpressionStatement","src":"871:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:40"},"nodeType":"YulFunctionCall","src":"840:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:40"},"nodeType":"YulFunctionCall","src":"836:32:40"},"nodeType":"YulIf","src":"833:119:40"},{"nodeType":"YulBlock","src":"962:116:40","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:40"},"nodeType":"YulFunctionCall","src":"1036:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:40"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:40"},"nodeType":"YulFunctionCall","src":"1016:52:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:40"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:40","type":""}],"src":"758:327:40"},{"body":{"nodeType":"YulBlock","src":"1133:48:40","statements":[{"nodeType":"YulAssignment","src":"1143:32:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:40"},"nodeType":"YulFunctionCall","src":"1161:13:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:40"},"nodeType":"YulFunctionCall","src":"1154:21:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:40"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:40","type":""}],"src":"1091:90:40"},{"body":{"nodeType":"YulBlock","src":"1246:50:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:40"},"nodeType":"YulFunctionCall","src":"1268:21:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:40"},"nodeType":"YulFunctionCall","src":"1256:34:40"},"nodeType":"YulExpressionStatement","src":"1256:34:40"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:40","type":""}],"src":"1187:109:40"},{"body":{"nodeType":"YulBlock","src":"1394:118:40","statements":[{"nodeType":"YulAssignment","src":"1404:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:40"},"nodeType":"YulFunctionCall","src":"1412:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:40"},"nodeType":"YulFunctionCall","src":"1487:17:40"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:40"},"nodeType":"YulFunctionCall","src":"1440:65:40"},"nodeType":"YulExpressionStatement","src":"1440:65:40"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:40","type":""}],"src":"1302:210:40"},{"body":{"nodeType":"YulBlock","src":"1577:40:40","statements":[{"nodeType":"YulAssignment","src":"1588:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:40"},"nodeType":"YulFunctionCall","src":"1598:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:40","type":""}],"src":"1518:99:40"},{"body":{"nodeType":"YulBlock","src":"1719:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:40"},"nodeType":"YulFunctionCall","src":"1729:19:40"},"nodeType":"YulExpressionStatement","src":"1729:19:40"},{"nodeType":"YulAssignment","src":"1757:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:40"},"nodeType":"YulFunctionCall","src":"1772:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:40","type":""}],"src":"1623:169:40"},{"body":{"nodeType":"YulBlock","src":"1860:184:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:40"},"nodeType":"YulFunctionCall","src":"1960:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:40"},"nodeType":"YulFunctionCall","src":"1979:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:40"},"nodeType":"YulFunctionCall","src":"1973:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:40"},"nodeType":"YulFunctionCall","src":"1953:39:40"},"nodeType":"YulExpressionStatement","src":"1953:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:40"},"nodeType":"YulFunctionCall","src":"1897:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:40","statements":[{"nodeType":"YulAssignment","src":"1913:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:40"},"nodeType":"YulFunctionCall","src":"1918:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:40","statements":[]},"src":"1889:113:40"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:40"},"nodeType":"YulFunctionCall","src":"2018:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:40"},"nodeType":"YulFunctionCall","src":"2011:27:40"},"nodeType":"YulExpressionStatement","src":"2011:27:40"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:40","type":""}],"src":"1798:246:40"},{"body":{"nodeType":"YulBlock","src":"2098:54:40","statements":[{"nodeType":"YulAssignment","src":"2108:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:40"},"nodeType":"YulFunctionCall","src":"2122:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:40"},"nodeType":"YulFunctionCall","src":"2138:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:40"},"nodeType":"YulFunctionCall","src":"2118:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:40","type":""}],"src":"2050:102:40"},{"body":{"nodeType":"YulBlock","src":"2250:285:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:40"},"nodeType":"YulFunctionCall","src":"2274:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:40"},"nodeType":"YulFunctionCall","src":"2329:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:40"},"nodeType":"YulFunctionCall","src":"2444:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:40"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:40"},"nodeType":"YulFunctionCall","src":"2409:65:40"},"nodeType":"YulExpressionStatement","src":"2409:65:40"},{"nodeType":"YulAssignment","src":"2483:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:40"},"nodeType":"YulFunctionCall","src":"2499:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:40"},"nodeType":"YulFunctionCall","src":"2490:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:40","type":""}],"src":"2158:377:40"},{"body":{"nodeType":"YulBlock","src":"2659:195:40","statements":[{"nodeType":"YulAssignment","src":"2669:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:40"},"nodeType":"YulFunctionCall","src":"2677:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:40"},"nodeType":"YulFunctionCall","src":"2712:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:40"},"nodeType":"YulFunctionCall","src":"2731:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:40"},"nodeType":"YulFunctionCall","src":"2705:47:40"},"nodeType":"YulExpressionStatement","src":"2705:47:40"},{"nodeType":"YulAssignment","src":"2761:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:40"},"nodeType":"YulFunctionCall","src":"2769:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:40","type":""}],"src":"2541:313:40"},{"body":{"nodeType":"YulBlock","src":"2905:32:40","statements":[{"nodeType":"YulAssignment","src":"2915:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:40","type":""}],"src":"2860:77:40"},{"body":{"nodeType":"YulBlock","src":"2986:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:40"},"nodeType":"YulFunctionCall","src":"3045:12:40"},"nodeType":"YulExpressionStatement","src":"3045:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:40"},"nodeType":"YulFunctionCall","src":"3016:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:40"},"nodeType":"YulFunctionCall","src":"3006:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:40"},"nodeType":"YulFunctionCall","src":"2999:43:40"},"nodeType":"YulIf","src":"2996:63:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:40","type":""}],"src":"2943:122:40"},{"body":{"nodeType":"YulBlock","src":"3123:87:40","statements":[{"nodeType":"YulAssignment","src":"3133:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:40"},"nodeType":"YulFunctionCall","src":"3142:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:40"},"nodeType":"YulFunctionCall","src":"3171:33:40"},"nodeType":"YulExpressionStatement","src":"3171:33:40"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:40","type":""}],"src":"3071:139:40"},{"body":{"nodeType":"YulBlock","src":"3282:263:40","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:40"},"nodeType":"YulFunctionCall","src":"3330:79:40"},"nodeType":"YulExpressionStatement","src":"3330:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:40"},"nodeType":"YulFunctionCall","src":"3299:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:40"},"nodeType":"YulFunctionCall","src":"3295:32:40"},"nodeType":"YulIf","src":"3292:119:40"},{"nodeType":"YulBlock","src":"3421:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:40","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:40"},"nodeType":"YulFunctionCall","src":"3496:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:40"},"nodeType":"YulFunctionCall","src":"3475:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:40"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:40","type":""}],"src":"3216:329:40"},{"body":{"nodeType":"YulBlock","src":"3596:81:40","statements":[{"nodeType":"YulAssignment","src":"3606:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:40"},"nodeType":"YulFunctionCall","src":"3617:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:40","type":""}],"src":"3551:126:40"},{"body":{"nodeType":"YulBlock","src":"3728:51:40","statements":[{"nodeType":"YulAssignment","src":"3738:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:40"},"nodeType":"YulFunctionCall","src":"3749:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:40","type":""}],"src":"3683:96:40"},{"body":{"nodeType":"YulBlock","src":"3850:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:40"},"nodeType":"YulFunctionCall","src":"3872:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:40"},"nodeType":"YulFunctionCall","src":"3860:37:40"},"nodeType":"YulExpressionStatement","src":"3860:37:40"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:40","type":""}],"src":"3785:118:40"},{"body":{"nodeType":"YulBlock","src":"4007:124:40","statements":[{"nodeType":"YulAssignment","src":"4017:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:40"},"nodeType":"YulFunctionCall","src":"4025:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:40"},"nodeType":"YulFunctionCall","src":"4106:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:40"},"nodeType":"YulFunctionCall","src":"4053:71:40"},"nodeType":"YulExpressionStatement","src":"4053:71:40"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:40","type":""}],"src":"3909:222:40"},{"body":{"nodeType":"YulBlock","src":"4180:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:40"},"nodeType":"YulFunctionCall","src":"4239:12:40"},"nodeType":"YulExpressionStatement","src":"4239:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:40"},"nodeType":"YulFunctionCall","src":"4210:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:40"},"nodeType":"YulFunctionCall","src":"4200:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:40"},"nodeType":"YulFunctionCall","src":"4193:43:40"},"nodeType":"YulIf","src":"4190:63:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:40","type":""}],"src":"4137:122:40"},{"body":{"nodeType":"YulBlock","src":"4317:87:40","statements":[{"nodeType":"YulAssignment","src":"4327:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:40"},"nodeType":"YulFunctionCall","src":"4336:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:40"},"nodeType":"YulFunctionCall","src":"4365:33:40"},"nodeType":"YulExpressionStatement","src":"4365:33:40"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:40","type":""}],"src":"4265:139:40"},{"body":{"nodeType":"YulBlock","src":"4493:391:40","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:40"},"nodeType":"YulFunctionCall","src":"4541:79:40"},"nodeType":"YulExpressionStatement","src":"4541:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:40"},"nodeType":"YulFunctionCall","src":"4510:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:40"},"nodeType":"YulFunctionCall","src":"4506:32:40"},"nodeType":"YulIf","src":"4503:119:40"},{"nodeType":"YulBlock","src":"4632:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:40","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:40"},"nodeType":"YulFunctionCall","src":"4707:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:40"},"nodeType":"YulFunctionCall","src":"4686:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:40"}]}]},{"nodeType":"YulBlock","src":"4759:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:40","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:40"},"nodeType":"YulFunctionCall","src":"4835:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:40"},"nodeType":"YulFunctionCall","src":"4814:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:40","type":""}],"src":"4410:474:40"},{"body":{"nodeType":"YulBlock","src":"4990:519:40","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:40"},"nodeType":"YulFunctionCall","src":"5038:79:40"},"nodeType":"YulExpressionStatement","src":"5038:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:40"},"nodeType":"YulFunctionCall","src":"5007:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:40","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:40"},"nodeType":"YulFunctionCall","src":"5003:32:40"},"nodeType":"YulIf","src":"5000:119:40"},{"nodeType":"YulBlock","src":"5129:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:40","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:40"},"nodeType":"YulFunctionCall","src":"5204:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:40"},"nodeType":"YulFunctionCall","src":"5183:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:40"}]}]},{"nodeType":"YulBlock","src":"5256:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:40","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:40"},"nodeType":"YulFunctionCall","src":"5332:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:40"},"nodeType":"YulFunctionCall","src":"5311:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:40"}]}]},{"nodeType":"YulBlock","src":"5384:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:40","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:40"},"nodeType":"YulFunctionCall","src":"5460:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:40"},"nodeType":"YulFunctionCall","src":"5439:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:40","type":""}],"src":"4890:619:40"},{"body":{"nodeType":"YulBlock","src":"5581:263:40","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:40"},"nodeType":"YulFunctionCall","src":"5629:79:40"},"nodeType":"YulExpressionStatement","src":"5629:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:40"},"nodeType":"YulFunctionCall","src":"5598:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:40"},"nodeType":"YulFunctionCall","src":"5594:32:40"},"nodeType":"YulIf","src":"5591:119:40"},{"nodeType":"YulBlock","src":"5720:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:40","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:40"},"nodeType":"YulFunctionCall","src":"5795:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:40"},"nodeType":"YulFunctionCall","src":"5774:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:40"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:40","type":""}],"src":"5515:329:40"},{"body":{"nodeType":"YulBlock","src":"5915:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:40"},"nodeType":"YulFunctionCall","src":"5937:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:40"},"nodeType":"YulFunctionCall","src":"5925:37:40"},"nodeType":"YulExpressionStatement","src":"5925:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:40","type":""}],"src":"5850:118:40"},{"body":{"nodeType":"YulBlock","src":"6072:124:40","statements":[{"nodeType":"YulAssignment","src":"6082:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:40"},"nodeType":"YulFunctionCall","src":"6090:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:40"},"nodeType":"YulFunctionCall","src":"6171:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:40"},"nodeType":"YulFunctionCall","src":"6118:71:40"},"nodeType":"YulExpressionStatement","src":"6118:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:40","type":""}],"src":"5974:222:40"},{"body":{"nodeType":"YulBlock","src":"6242:76:40","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:40"},"nodeType":"YulFunctionCall","src":"6298:12:40"},"nodeType":"YulExpressionStatement","src":"6298:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:40"},"nodeType":"YulFunctionCall","src":"6272:21:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:40"},"nodeType":"YulFunctionCall","src":"6262:32:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:40"},"nodeType":"YulFunctionCall","src":"6255:40:40"},"nodeType":"YulIf","src":"6252:60:40"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:40","type":""}],"src":"6202:116:40"},{"body":{"nodeType":"YulBlock","src":"6373:84:40","statements":[{"nodeType":"YulAssignment","src":"6383:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:40"},"nodeType":"YulFunctionCall","src":"6392:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:40"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:40"},"nodeType":"YulFunctionCall","src":"6421:30:40"},"nodeType":"YulExpressionStatement","src":"6421:30:40"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:40","type":""}],"src":"6324:133:40"},{"body":{"nodeType":"YulBlock","src":"6543:388:40","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:40"},"nodeType":"YulFunctionCall","src":"6591:79:40"},"nodeType":"YulExpressionStatement","src":"6591:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:40"},"nodeType":"YulFunctionCall","src":"6560:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:40"},"nodeType":"YulFunctionCall","src":"6556:32:40"},"nodeType":"YulIf","src":"6553:119:40"},{"nodeType":"YulBlock","src":"6682:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:40","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:40"},"nodeType":"YulFunctionCall","src":"6757:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:40"},"nodeType":"YulFunctionCall","src":"6736:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:40"}]}]},{"nodeType":"YulBlock","src":"6809:115:40","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:40","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:40"},"nodeType":"YulFunctionCall","src":"6882:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:40"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:40"},"nodeType":"YulFunctionCall","src":"6864:50:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:40","type":""}],"src":"6463:468:40"},{"body":{"nodeType":"YulBlock","src":"7026:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:40"},"nodeType":"YulFunctionCall","src":"7036:12:40"},"nodeType":"YulExpressionStatement","src":"7036:12:40"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:40"},{"body":{"nodeType":"YulBlock","src":"7149:28:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:40"},"nodeType":"YulFunctionCall","src":"7159:12:40"},"nodeType":"YulExpressionStatement","src":"7159:12:40"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:40"},{"body":{"nodeType":"YulBlock","src":"7211:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:40"},"nodeType":"YulFunctionCall","src":"7221:88:40"},"nodeType":"YulExpressionStatement","src":"7221:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:40"},"nodeType":"YulFunctionCall","src":"7318:15:40"},"nodeType":"YulExpressionStatement","src":"7318:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:40"},"nodeType":"YulFunctionCall","src":"7342:15:40"},"nodeType":"YulExpressionStatement","src":"7342:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:40"},{"body":{"nodeType":"YulBlock","src":"7412:238:40","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:40","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:40"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:40"},"nodeType":"YulFunctionCall","src":"7452:27:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:40"},"nodeType":"YulFunctionCall","src":"7440:40:40"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:40"},"nodeType":"YulFunctionCall","src":"7593:18:40"},"nodeType":"YulExpressionStatement","src":"7593:18:40"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:40"},"nodeType":"YulFunctionCall","src":"7531:34:40"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:40"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:40"},"nodeType":"YulFunctionCall","src":"7567:22:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:40"},"nodeType":"YulFunctionCall","src":"7528:62:40"},"nodeType":"YulIf","src":"7525:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:40","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:40"},"nodeType":"YulFunctionCall","src":"7622:22:40"},"nodeType":"YulExpressionStatement","src":"7622:22:40"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:40","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:40","type":""}],"src":"7369:281:40"},{"body":{"nodeType":"YulBlock","src":"7697:88:40","statements":[{"nodeType":"YulAssignment","src":"7707:30:40","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:40"},"nodeType":"YulFunctionCall","src":"7717:20:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:40"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:40"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:40"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:40"},"nodeType":"YulFunctionCall","src":"7746:33:40"},"nodeType":"YulExpressionStatement","src":"7746:33:40"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:40","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:40","type":""}],"src":"7656:129:40"},{"body":{"nodeType":"YulBlock","src":"7857:241:40","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:40"},"nodeType":"YulFunctionCall","src":"7964:18:40"},"nodeType":"YulExpressionStatement","src":"7964:18:40"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:40"},"nodeType":"YulFunctionCall","src":"7931:30:40"},"nodeType":"YulIf","src":"7928:56:40"},{"nodeType":"YulAssignment","src":"7994:37:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:40"},"nodeType":"YulFunctionCall","src":"8002:29:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:40"}]},{"nodeType":"YulAssignment","src":"8068:23:40","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:40"},"nodeType":"YulFunctionCall","src":"8076:15:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:40"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:40","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:40","type":""}],"src":"7791:307:40"},{"body":{"nodeType":"YulBlock","src":"8168:82:40","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:40"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:40"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:40"},"nodeType":"YulFunctionCall","src":"8178:30:40"},"nodeType":"YulExpressionStatement","src":"8178:30:40"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:40"},"nodeType":"YulFunctionCall","src":"8224:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:40"},"nodeType":"YulFunctionCall","src":"8217:27:40"},"nodeType":"YulExpressionStatement","src":"8217:27:40"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:40","type":""}],"src":"8104:146:40"},{"body":{"nodeType":"YulBlock","src":"8339:340:40","statements":[{"nodeType":"YulAssignment","src":"8349:74:40","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:40"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:40"},"nodeType":"YulFunctionCall","src":"8374:48:40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:40"},"nodeType":"YulFunctionCall","src":"8358:65:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:40"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:40"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:40"},"nodeType":"YulFunctionCall","src":"8432:21:40"},"nodeType":"YulExpressionStatement","src":"8432:21:40"},{"nodeType":"YulVariableDeclaration","src":"8462:27:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:40"},"nodeType":"YulFunctionCall","src":"8473:16:40"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:40"},"nodeType":"YulFunctionCall","src":"8529:79:40"},"nodeType":"YulExpressionStatement","src":"8529:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:40"},"nodeType":"YulFunctionCall","src":"8504:16:40"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:40"},"nodeType":"YulFunctionCall","src":"8501:25:40"},"nodeType":"YulIf","src":"8498:112:40"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:40"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:40"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:40"},"nodeType":"YulFunctionCall","src":"8619:54:40"},"nodeType":"YulExpressionStatement","src":"8619:54:40"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:40","type":""}],"src":"8256:423:40"},{"body":{"nodeType":"YulBlock","src":"8759:277:40","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:40"},"nodeType":"YulFunctionCall","src":"8810:79:40"},"nodeType":"YulExpressionStatement","src":"8810:79:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:40","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:40"},"nodeType":"YulFunctionCall","src":"8783:17:40"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:40"},"nodeType":"YulFunctionCall","src":"8779:27:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:40"},"nodeType":"YulFunctionCall","src":"8772:35:40"},"nodeType":"YulIf","src":"8769:122:40"},{"nodeType":"YulVariableDeclaration","src":"8900:34:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:40"},"nodeType":"YulFunctionCall","src":"8914:20:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:40","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:40","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:40"},"nodeType":"YulFunctionCall","src":"8999:17:40"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:40"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:40"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:40"},"nodeType":"YulFunctionCall","src":"8952:78:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:40"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:40","type":""}],"src":"8698:338:40"},{"body":{"nodeType":"YulBlock","src":"9168:817:40","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:40"},"nodeType":"YulFunctionCall","src":"9217:79:40"},"nodeType":"YulExpressionStatement","src":"9217:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:40"},"nodeType":"YulFunctionCall","src":"9185:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:40","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:40"},"nodeType":"YulFunctionCall","src":"9181:33:40"},"nodeType":"YulIf","src":"9178:120:40"},{"nodeType":"YulBlock","src":"9308:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:40","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:40"},"nodeType":"YulFunctionCall","src":"9383:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:40"},"nodeType":"YulFunctionCall","src":"9362:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:40"}]}]},{"nodeType":"YulBlock","src":"9435:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:40","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:40"},"nodeType":"YulFunctionCall","src":"9511:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:40"},"nodeType":"YulFunctionCall","src":"9490:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:40"}]}]},{"nodeType":"YulBlock","src":"9563:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:40","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:40"},"nodeType":"YulFunctionCall","src":"9639:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:40"},"nodeType":"YulFunctionCall","src":"9618:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:40"}]}]},{"nodeType":"YulBlock","src":"9691:287:40","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:40"},"nodeType":"YulFunctionCall","src":"9733:18:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:40"},"nodeType":"YulFunctionCall","src":"9720:32:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:40"},"nodeType":"YulFunctionCall","src":"9801:79:40"},"nodeType":"YulExpressionStatement","src":"9801:79:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:40"},"nodeType":"YulFunctionCall","src":"9768:30:40"},"nodeType":"YulIf","src":"9765:117:40"},{"nodeType":"YulAssignment","src":"9896:72:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:40"},"nodeType":"YulFunctionCall","src":"9936:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:40"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:40"},"nodeType":"YulFunctionCall","src":"9906:62:40"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:40","type":""}],"src":"9042:943:40"},{"body":{"nodeType":"YulBlock","src":"10058:241:40","statements":[{"body":{"nodeType":"YulBlock","src":"10163:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10165:16:40"},"nodeType":"YulFunctionCall","src":"10165:18:40"},"nodeType":"YulExpressionStatement","src":"10165:18:40"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10135:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10143:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10132:2:40"},"nodeType":"YulFunctionCall","src":"10132:30:40"},"nodeType":"YulIf","src":"10129:56:40"},{"nodeType":"YulAssignment","src":"10195:37:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10225:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10203:21:40"},"nodeType":"YulFunctionCall","src":"10203:29:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10195:4:40"}]},{"nodeType":"YulAssignment","src":"10269:23:40","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10281:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"10287:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10277:3:40"},"nodeType":"YulFunctionCall","src":"10277:15:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10269:4:40"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10042:6:40","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10053:4:40","type":""}],"src":"9991:308:40"},{"body":{"nodeType":"YulBlock","src":"10389:341:40","statements":[{"nodeType":"YulAssignment","src":"10399:75:40","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10466:6:40"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10424:41:40"},"nodeType":"YulFunctionCall","src":"10424:49:40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10408:15:40"},"nodeType":"YulFunctionCall","src":"10408:66:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10399:5:40"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10490:5:40"},{"name":"length","nodeType":"YulIdentifier","src":"10497:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10483:6:40"},"nodeType":"YulFunctionCall","src":"10483:21:40"},"nodeType":"YulExpressionStatement","src":"10483:21:40"},{"nodeType":"YulVariableDeclaration","src":"10513:27:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10528:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"10535:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10524:3:40"},"nodeType":"YulFunctionCall","src":"10524:16:40"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10517:3:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"10578:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10580:77:40"},"nodeType":"YulFunctionCall","src":"10580:79:40"},"nodeType":"YulExpressionStatement","src":"10580:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10559:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"10564:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10555:3:40"},"nodeType":"YulFunctionCall","src":"10555:16:40"},{"name":"end","nodeType":"YulIdentifier","src":"10573:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10552:2:40"},"nodeType":"YulFunctionCall","src":"10552:25:40"},"nodeType":"YulIf","src":"10549:112:40"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10707:3:40"},{"name":"dst","nodeType":"YulIdentifier","src":"10712:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"10717:6:40"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10670:36:40"},"nodeType":"YulFunctionCall","src":"10670:54:40"},"nodeType":"YulExpressionStatement","src":"10670:54:40"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10362:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"10367:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"10375:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10383:5:40","type":""}],"src":"10305:425:40"},{"body":{"nodeType":"YulBlock","src":"10812:278:40","statements":[{"body":{"nodeType":"YulBlock","src":"10861:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10863:77:40"},"nodeType":"YulFunctionCall","src":"10863:79:40"},"nodeType":"YulExpressionStatement","src":"10863:79:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10840:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10848:4:40","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10836:3:40"},"nodeType":"YulFunctionCall","src":"10836:17:40"},{"name":"end","nodeType":"YulIdentifier","src":"10855:3:40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10832:3:40"},"nodeType":"YulFunctionCall","src":"10832:27:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10825:6:40"},"nodeType":"YulFunctionCall","src":"10825:35:40"},"nodeType":"YulIf","src":"10822:122:40"},{"nodeType":"YulVariableDeclaration","src":"10953:34:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10980:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10967:12:40"},"nodeType":"YulFunctionCall","src":"10967:20:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10957:6:40","type":""}]},{"nodeType":"YulAssignment","src":"10996:88:40","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11057:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11065:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11053:3:40"},"nodeType":"YulFunctionCall","src":"11053:17:40"},{"name":"length","nodeType":"YulIdentifier","src":"11072:6:40"},{"name":"end","nodeType":"YulIdentifier","src":"11080:3:40"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11005:47:40"},"nodeType":"YulFunctionCall","src":"11005:79:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10996:5:40"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10790:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"10798:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10806:5:40","type":""}],"src":"10750:340:40"},{"body":{"nodeType":"YulBlock","src":"11189:561:40","statements":[{"body":{"nodeType":"YulBlock","src":"11235:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11237:77:40"},"nodeType":"YulFunctionCall","src":"11237:79:40"},"nodeType":"YulExpressionStatement","src":"11237:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11210:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"11219:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11206:3:40"},"nodeType":"YulFunctionCall","src":"11206:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"11231:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11202:3:40"},"nodeType":"YulFunctionCall","src":"11202:32:40"},"nodeType":"YulIf","src":"11199:119:40"},{"nodeType":"YulBlock","src":"11328:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11343:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"11357:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11347:6:40","type":""}]},{"nodeType":"YulAssignment","src":"11372:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11407:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11418:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11403:3:40"},"nodeType":"YulFunctionCall","src":"11403:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11427:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11382:20:40"},"nodeType":"YulFunctionCall","src":"11382:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11372:6:40"}]}]},{"nodeType":"YulBlock","src":"11455:288:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11470:46:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11501:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"11512:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11497:3:40"},"nodeType":"YulFunctionCall","src":"11497:18:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11484:12:40"},"nodeType":"YulFunctionCall","src":"11484:32:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11474:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"11563:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11565:77:40"},"nodeType":"YulFunctionCall","src":"11565:79:40"},"nodeType":"YulExpressionStatement","src":"11565:79:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11535:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11543:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11532:2:40"},"nodeType":"YulFunctionCall","src":"11532:30:40"},"nodeType":"YulIf","src":"11529:117:40"},{"nodeType":"YulAssignment","src":"11660:73:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11705:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"11716:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11701:3:40"},"nodeType":"YulFunctionCall","src":"11701:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11725:7:40"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11670:30:40"},"nodeType":"YulFunctionCall","src":"11670:63:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11660:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11151:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11162:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11174:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11182:6:40","type":""}],"src":"11096:654:40"},{"body":{"nodeType":"YulBlock","src":"11839:391:40","statements":[{"body":{"nodeType":"YulBlock","src":"11885:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11887:77:40"},"nodeType":"YulFunctionCall","src":"11887:79:40"},"nodeType":"YulExpressionStatement","src":"11887:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11860:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"11869:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11856:3:40"},"nodeType":"YulFunctionCall","src":"11856:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"11881:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11852:3:40"},"nodeType":"YulFunctionCall","src":"11852:32:40"},"nodeType":"YulIf","src":"11849:119:40"},{"nodeType":"YulBlock","src":"11978:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"11993:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12007:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11997:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12022:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12068:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:40"},"nodeType":"YulFunctionCall","src":"12053:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12077:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12032:20:40"},"nodeType":"YulFunctionCall","src":"12032:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12022:6:40"}]}]},{"nodeType":"YulBlock","src":"12105:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12120:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12134:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12124:6:40","type":""}]},{"nodeType":"YulAssignment","src":"12150:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"12196:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12181:3:40"},"nodeType":"YulFunctionCall","src":"12181:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12205:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12160:20:40"},"nodeType":"YulFunctionCall","src":"12160:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12150:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11801:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11812:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11824:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11832:6:40","type":""}],"src":"11756:474:40"},{"body":{"nodeType":"YulBlock","src":"12264:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12281:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12284:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12274:6:40"},"nodeType":"YulFunctionCall","src":"12274:88:40"},"nodeType":"YulExpressionStatement","src":"12274:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12378:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12381:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12371:6:40"},"nodeType":"YulFunctionCall","src":"12371:15:40"},"nodeType":"YulExpressionStatement","src":"12371:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12402:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12405:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12395:6:40"},"nodeType":"YulFunctionCall","src":"12395:15:40"},"nodeType":"YulExpressionStatement","src":"12395:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12236:180:40"},{"body":{"nodeType":"YulBlock","src":"12473:269:40","statements":[{"nodeType":"YulAssignment","src":"12483:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12497:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"12503:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12493:3:40"},"nodeType":"YulFunctionCall","src":"12493:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12483:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"12514:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12544:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"12550:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12540:3:40"},"nodeType":"YulFunctionCall","src":"12540:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12518:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"12591:51:40","statements":[{"nodeType":"YulAssignment","src":"12605:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12619:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12627:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12615:3:40"},"nodeType":"YulFunctionCall","src":"12615:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12605:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12571:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12564:6:40"},"nodeType":"YulFunctionCall","src":"12564:26:40"},"nodeType":"YulIf","src":"12561:81:40"},{"body":{"nodeType":"YulBlock","src":"12694:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12708:16:40"},"nodeType":"YulFunctionCall","src":"12708:18:40"},"nodeType":"YulExpressionStatement","src":"12708:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12658:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12681:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12689:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12678:2:40"},"nodeType":"YulFunctionCall","src":"12678:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12655:2:40"},"nodeType":"YulFunctionCall","src":"12655:38:40"},"nodeType":"YulIf","src":"12652:84:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12457:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12466:6:40","type":""}],"src":"12422:320:40"},{"body":{"nodeType":"YulBlock","src":"12902:288:40","statements":[{"nodeType":"YulAssignment","src":"12912:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12924:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"12935:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12920:3:40"},"nodeType":"YulFunctionCall","src":"12920:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12912:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12992:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13005:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13016:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13001:3:40"},"nodeType":"YulFunctionCall","src":"13001:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12948:43:40"},"nodeType":"YulFunctionCall","src":"12948:71:40"},"nodeType":"YulExpressionStatement","src":"12948:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13073:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13086:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13097:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13082:3:40"},"nodeType":"YulFunctionCall","src":"13082:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13029:43:40"},"nodeType":"YulFunctionCall","src":"13029:72:40"},"nodeType":"YulExpressionStatement","src":"13029:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13155:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13168:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"13179:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13164:3:40"},"nodeType":"YulFunctionCall","src":"13164:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13111:43:40"},"nodeType":"YulFunctionCall","src":"13111:72:40"},"nodeType":"YulExpressionStatement","src":"13111:72:40"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12858:9:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12870:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12878:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12886:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12897:4:40","type":""}],"src":"12748:442:40"},{"body":{"nodeType":"YulBlock","src":"13224:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13241:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13244:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13234:6:40"},"nodeType":"YulFunctionCall","src":"13234:88:40"},"nodeType":"YulExpressionStatement","src":"13234:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13338:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13341:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13331:6:40"},"nodeType":"YulFunctionCall","src":"13331:15:40"},"nodeType":"YulExpressionStatement","src":"13331:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13362:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13365:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13355:6:40"},"nodeType":"YulFunctionCall","src":"13355:15:40"},"nodeType":"YulExpressionStatement","src":"13355:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13196:180:40"},{"body":{"nodeType":"YulBlock","src":"13425:190:40","statements":[{"nodeType":"YulAssignment","src":"13435:33:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13462:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13444:17:40"},"nodeType":"YulFunctionCall","src":"13444:24:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13435:5:40"}]},{"body":{"nodeType":"YulBlock","src":"13558:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13560:16:40"},"nodeType":"YulFunctionCall","src":"13560:18:40"},"nodeType":"YulExpressionStatement","src":"13560:18:40"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13483:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"13490:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13480:2:40"},"nodeType":"YulFunctionCall","src":"13480:77:40"},"nodeType":"YulIf","src":"13477:103:40"},{"nodeType":"YulAssignment","src":"13589:20:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13600:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"13607:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13596:3:40"},"nodeType":"YulFunctionCall","src":"13596:13:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13589:3:40"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13411:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13421:3:40","type":""}],"src":"13382:233:40"},{"body":{"nodeType":"YulBlock","src":"13679:40:40","statements":[{"nodeType":"YulAssignment","src":"13690:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13706:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13700:5:40"},"nodeType":"YulFunctionCall","src":"13700:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13690:6:40"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13662:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13672:6:40","type":""}],"src":"13621:98:40"},{"body":{"nodeType":"YulBlock","src":"13820:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13837:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"13842:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13830:6:40"},"nodeType":"YulFunctionCall","src":"13830:19:40"},"nodeType":"YulExpressionStatement","src":"13830:19:40"},{"nodeType":"YulAssignment","src":"13858:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13877:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"13882:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13873:3:40"},"nodeType":"YulFunctionCall","src":"13873:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13858:11:40"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13792:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"13797:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13808:11:40","type":""}],"src":"13725:168:40"},{"body":{"nodeType":"YulBlock","src":"13989:283:40","statements":[{"nodeType":"YulVariableDeclaration","src":"13999:52:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14045:5:40"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14013:31:40"},"nodeType":"YulFunctionCall","src":"14013:38:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14003:6:40","type":""}]},{"nodeType":"YulAssignment","src":"14060:77:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14125:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"14130:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14067:57:40"},"nodeType":"YulFunctionCall","src":"14067:70:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14060:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14185:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"14192:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14181:3:40"},"nodeType":"YulFunctionCall","src":"14181:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"14199:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"14204:6:40"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14146:34:40"},"nodeType":"YulFunctionCall","src":"14146:65:40"},"nodeType":"YulExpressionStatement","src":"14146:65:40"},{"nodeType":"YulAssignment","src":"14220:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14231:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14258:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14236:21:40"},"nodeType":"YulFunctionCall","src":"14236:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14227:3:40"},"nodeType":"YulFunctionCall","src":"14227:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14220:3:40"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13970:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13977:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13985:3:40","type":""}],"src":"13899:373:40"},{"body":{"nodeType":"YulBlock","src":"14478:440:40","statements":[{"nodeType":"YulAssignment","src":"14488:27:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14500:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14511:3:40","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14496:3:40"},"nodeType":"YulFunctionCall","src":"14496:19:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14488:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14569:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14582:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14593:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14578:3:40"},"nodeType":"YulFunctionCall","src":"14578:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14525:43:40"},"nodeType":"YulFunctionCall","src":"14525:71:40"},"nodeType":"YulExpressionStatement","src":"14525:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14650:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14663:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14674:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14659:3:40"},"nodeType":"YulFunctionCall","src":"14659:18:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14606:43:40"},"nodeType":"YulFunctionCall","src":"14606:72:40"},"nodeType":"YulExpressionStatement","src":"14606:72:40"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14732:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14745:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14756:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14741:3:40"},"nodeType":"YulFunctionCall","src":"14741:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14688:43:40"},"nodeType":"YulFunctionCall","src":"14688:72:40"},"nodeType":"YulExpressionStatement","src":"14688:72:40"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14781:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"14792:2:40","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14777:3:40"},"nodeType":"YulFunctionCall","src":"14777:18:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14801:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14797:3:40"},"nodeType":"YulFunctionCall","src":"14797:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14770:6:40"},"nodeType":"YulFunctionCall","src":"14770:48:40"},"nodeType":"YulExpressionStatement","src":"14770:48:40"},{"nodeType":"YulAssignment","src":"14827:84:40","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14897:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"14906:4:40"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14835:61:40"},"nodeType":"YulFunctionCall","src":"14835:76:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14827:4:40"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14426:9:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14438:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14446:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14454:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14462:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14473:4:40","type":""}],"src":"14278:640:40"},{"body":{"nodeType":"YulBlock","src":"14986:79:40","statements":[{"nodeType":"YulAssignment","src":"14996:22:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15011:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15005:5:40"},"nodeType":"YulFunctionCall","src":"15005:13:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14996:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15053:5:40"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"15027:25:40"},"nodeType":"YulFunctionCall","src":"15027:32:40"},"nodeType":"YulExpressionStatement","src":"15027:32:40"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14964:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"14972:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14980:5:40","type":""}],"src":"14924:141:40"},{"body":{"nodeType":"YulBlock","src":"15147:273:40","statements":[{"body":{"nodeType":"YulBlock","src":"15193:83:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15195:77:40"},"nodeType":"YulFunctionCall","src":"15195:79:40"},"nodeType":"YulExpressionStatement","src":"15195:79:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15168:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"15177:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15164:3:40"},"nodeType":"YulFunctionCall","src":"15164:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"15189:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15160:3:40"},"nodeType":"YulFunctionCall","src":"15160:32:40"},"nodeType":"YulIf","src":"15157:119:40"},{"nodeType":"YulBlock","src":"15286:127:40","statements":[{"nodeType":"YulVariableDeclaration","src":"15301:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"15315:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15305:6:40","type":""}]},{"nodeType":"YulAssignment","src":"15330:73:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15375:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"15386:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15371:3:40"},"nodeType":"YulFunctionCall","src":"15371:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15395:7:40"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"15340:30:40"},"nodeType":"YulFunctionCall","src":"15340:63:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15330:6:40"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15117:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15128:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15140:6:40","type":""}],"src":"15071:349:40"},{"body":{"nodeType":"YulBlock","src":"15540:34:40","statements":[{"nodeType":"YulAssignment","src":"15550:18:40","value":{"name":"pos","nodeType":"YulIdentifier","src":"15565:3:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15550:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15512:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"15517:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15528:11:40","type":""}],"src":"15426:148:40"},{"body":{"nodeType":"YulBlock","src":"15690:280:40","statements":[{"nodeType":"YulVariableDeclaration","src":"15700:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15747:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15714:32:40"},"nodeType":"YulFunctionCall","src":"15714:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15704:6:40","type":""}]},{"nodeType":"YulAssignment","src":"15762:96:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15846:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"15851:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15769:76:40"},"nodeType":"YulFunctionCall","src":"15769:89:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15762:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15906:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"15913:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15902:3:40"},"nodeType":"YulFunctionCall","src":"15902:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"15920:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"15925:6:40"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15867:34:40"},"nodeType":"YulFunctionCall","src":"15867:65:40"},"nodeType":"YulExpressionStatement","src":"15867:65:40"},{"nodeType":"YulAssignment","src":"15941:23:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15952:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"15957:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15948:3:40"},"nodeType":"YulFunctionCall","src":"15948:16:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15941:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15671:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15678:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15686:3:40","type":""}],"src":"15580:390:40"},{"body":{"nodeType":"YulBlock","src":"16160:251:40","statements":[{"nodeType":"YulAssignment","src":"16171:102:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16260:6:40"},{"name":"pos","nodeType":"YulIdentifier","src":"16269:3:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16178:81:40"},"nodeType":"YulFunctionCall","src":"16178:95:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16171:3:40"}]},{"nodeType":"YulAssignment","src":"16283:102:40","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16372:6:40"},{"name":"pos","nodeType":"YulIdentifier","src":"16381:3:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16290:81:40"},"nodeType":"YulFunctionCall","src":"16290:95:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16283:3:40"}]},{"nodeType":"YulAssignment","src":"16395:10:40","value":{"name":"pos","nodeType":"YulIdentifier","src":"16402:3:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16395:3:40"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16131:3:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16137:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16145:6:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16156:3:40","type":""}],"src":"15976:435:40"},{"body":{"nodeType":"YulBlock","src":"16471:87:40","statements":[{"nodeType":"YulAssignment","src":"16481:11:40","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16489:3:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16481:4:40"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16509:1:40","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16512:3:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16502:6:40"},"nodeType":"YulFunctionCall","src":"16502:14:40"},"nodeType":"YulExpressionStatement","src":"16502:14:40"},{"nodeType":"YulAssignment","src":"16525:26:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16543:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16546:4:40","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"16533:9:40"},"nodeType":"YulFunctionCall","src":"16533:18:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16525:4:40"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16458:3:40","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16466:4:40","type":""}],"src":"16417:141:40"},{"body":{"nodeType":"YulBlock","src":"16608:49:40","statements":[{"nodeType":"YulAssignment","src":"16618:33:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16636:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16632:3:40"},"nodeType":"YulFunctionCall","src":"16632:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"16648:2:40","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16628:3:40"},"nodeType":"YulFunctionCall","src":"16628:23:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16618:6:40"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16591:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16601:6:40","type":""}],"src":"16564:93:40"},{"body":{"nodeType":"YulBlock","src":"16716:54:40","statements":[{"nodeType":"YulAssignment","src":"16726:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"16751:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"16757:5:40"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16747:3:40"},"nodeType":"YulFunctionCall","src":"16747:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"16726:8:40"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"16691:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"16697:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"16707:8:40","type":""}],"src":"16663:107:40"},{"body":{"nodeType":"YulBlock","src":"16852:317:40","statements":[{"nodeType":"YulVariableDeclaration","src":"16862:35:40","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"16883:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"16895:1:40","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16879:3:40"},"nodeType":"YulFunctionCall","src":"16879:18:40"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"16866:9:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16906:109:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"16937:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"16948:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"16918:18:40"},"nodeType":"YulFunctionCall","src":"16918:97:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"16910:4:40","type":""}]},{"nodeType":"YulAssignment","src":"17024:51:40","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"17055:9:40"},{"name":"toInsert","nodeType":"YulIdentifier","src":"17066:8:40"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17036:18:40"},"nodeType":"YulFunctionCall","src":"17036:39:40"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17024:8:40"}]},{"nodeType":"YulAssignment","src":"17084:30:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17097:5:40"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"17108:4:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17104:3:40"},"nodeType":"YulFunctionCall","src":"17104:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17093:3:40"},"nodeType":"YulFunctionCall","src":"17093:21:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17084:5:40"}]},{"nodeType":"YulAssignment","src":"17123:40:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17136:5:40"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17147:8:40"},{"name":"mask","nodeType":"YulIdentifier","src":"17157:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17143:3:40"},"nodeType":"YulFunctionCall","src":"17143:19:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17133:2:40"},"nodeType":"YulFunctionCall","src":"17133:30:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17123:6:40"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16813:5:40","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"16820:10:40","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"16832:8:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16845:6:40","type":""}],"src":"16776:393:40"},{"body":{"nodeType":"YulBlock","src":"17207:28:40","statements":[{"nodeType":"YulAssignment","src":"17217:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"17224:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17217:3:40"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17193:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17203:3:40","type":""}],"src":"17175:60:40"},{"body":{"nodeType":"YulBlock","src":"17301:82:40","statements":[{"nodeType":"YulAssignment","src":"17311:66:40","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17369:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17351:17:40"},"nodeType":"YulFunctionCall","src":"17351:24:40"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"17342:8:40"},"nodeType":"YulFunctionCall","src":"17342:34:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17324:17:40"},"nodeType":"YulFunctionCall","src":"17324:53:40"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17311:9:40"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17281:5:40","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17291:9:40","type":""}],"src":"17241:142:40"},{"body":{"nodeType":"YulBlock","src":"17436:28:40","statements":[{"nodeType":"YulAssignment","src":"17446:12:40","value":{"name":"value","nodeType":"YulIdentifier","src":"17453:5:40"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17446:3:40"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17422:5:40","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17432:3:40","type":""}],"src":"17389:75:40"},{"body":{"nodeType":"YulBlock","src":"17546:193:40","statements":[{"nodeType":"YulVariableDeclaration","src":"17556:63:40","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"17611:7:40"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17580:30:40"},"nodeType":"YulFunctionCall","src":"17580:39:40"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"17560:16:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17635:4:40"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17675:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17669:5:40"},"nodeType":"YulFunctionCall","src":"17669:11:40"},{"name":"offset","nodeType":"YulIdentifier","src":"17682:6:40"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"17714:16:40"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"17690:23:40"},"nodeType":"YulFunctionCall","src":"17690:41:40"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"17641:27:40"},"nodeType":"YulFunctionCall","src":"17641:91:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17628:6:40"},"nodeType":"YulFunctionCall","src":"17628:105:40"},"nodeType":"YulExpressionStatement","src":"17628:105:40"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17523:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"17529:6:40","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"17537:7:40","type":""}],"src":"17470:269:40"},{"body":{"nodeType":"YulBlock","src":"17794:24:40","statements":[{"nodeType":"YulAssignment","src":"17804:8:40","value":{"kind":"number","nodeType":"YulLiteral","src":"17811:1:40","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17804:3:40"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17790:3:40","type":""}],"src":"17745:73:40"},{"body":{"nodeType":"YulBlock","src":"17877:136:40","statements":[{"nodeType":"YulVariableDeclaration","src":"17887:46:40","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"17901:30:40"},"nodeType":"YulFunctionCall","src":"17901:32:40"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"17891:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17986:4:40"},{"name":"offset","nodeType":"YulIdentifier","src":"17992:6:40"},{"name":"zero_0","nodeType":"YulIdentifier","src":"18000:6:40"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17942:43:40"},"nodeType":"YulFunctionCall","src":"17942:65:40"},"nodeType":"YulExpressionStatement","src":"17942:65:40"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17863:4:40","type":""},{"name":"offset","nodeType":"YulTypedName","src":"17869:6:40","type":""}],"src":"17824:189:40"},{"body":{"nodeType":"YulBlock","src":"18069:136:40","statements":[{"body":{"nodeType":"YulBlock","src":"18136:63:40","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18180:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"18187:1:40","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"18150:29:40"},"nodeType":"YulFunctionCall","src":"18150:39:40"},"nodeType":"YulExpressionStatement","src":"18150:39:40"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18089:5:40"},{"name":"end","nodeType":"YulIdentifier","src":"18096:3:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18086:2:40"},"nodeType":"YulFunctionCall","src":"18086:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18101:26:40","statements":[{"nodeType":"YulAssignment","src":"18103:22:40","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18116:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"18123:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18112:3:40"},"nodeType":"YulFunctionCall","src":"18112:13:40"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"18103:5:40"}]}]},"pre":{"nodeType":"YulBlock","src":"18083:2:40","statements":[]},"src":"18079:120:40"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"18057:5:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"18064:3:40","type":""}],"src":"18019:186:40"},{"body":{"nodeType":"YulBlock","src":"18290:464:40","statements":[{"body":{"nodeType":"YulBlock","src":"18316:431:40","statements":[{"nodeType":"YulVariableDeclaration","src":"18330:54:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18378:5:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18346:31:40"},"nodeType":"YulFunctionCall","src":"18346:38:40"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"18334:8:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18397:63:40","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18420:8:40"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18448:10:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18430:17:40"},"nodeType":"YulFunctionCall","src":"18430:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18416:3:40"},"nodeType":"YulFunctionCall","src":"18416:44:40"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18401:11:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"18617:27:40","statements":[{"nodeType":"YulAssignment","src":"18619:23:40","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"18634:8:40"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18619:11:40"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18601:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"18613:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18598:2:40"},"nodeType":"YulFunctionCall","src":"18598:18:40"},"nodeType":"YulIf","src":"18595:49:40"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18686:11:40"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18703:8:40"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18731:3:40"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18713:17:40"},"nodeType":"YulFunctionCall","src":"18713:22:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18699:3:40"},"nodeType":"YulFunctionCall","src":"18699:37:40"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"18657:28:40"},"nodeType":"YulFunctionCall","src":"18657:80:40"},"nodeType":"YulExpressionStatement","src":"18657:80:40"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18307:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"18312:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18304:2:40"},"nodeType":"YulFunctionCall","src":"18304:11:40"},"nodeType":"YulIf","src":"18301:446:40"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18266:5:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"18273:3:40","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18278:10:40","type":""}],"src":"18211:543:40"},{"body":{"nodeType":"YulBlock","src":"18823:54:40","statements":[{"nodeType":"YulAssignment","src":"18833:37:40","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18858:4:40"},{"name":"value","nodeType":"YulIdentifier","src":"18864:5:40"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18854:3:40"},"nodeType":"YulFunctionCall","src":"18854:16:40"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18833:8:40"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18798:4:40","type":""},{"name":"value","nodeType":"YulTypedName","src":"18804:5:40","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18814:8:40","type":""}],"src":"18760:117:40"},{"body":{"nodeType":"YulBlock","src":"18934:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"18944:68:40","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18993:1:40","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"18996:5:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18989:3:40"},"nodeType":"YulFunctionCall","src":"18989:13:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19008:1:40","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19004:3:40"},"nodeType":"YulFunctionCall","src":"19004:6:40"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"18960:28:40"},"nodeType":"YulFunctionCall","src":"18960:51:40"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18956:3:40"},"nodeType":"YulFunctionCall","src":"18956:56:40"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18948:4:40","type":""}]},{"nodeType":"YulAssignment","src":"19021:25:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19035:4:40"},{"name":"mask","nodeType":"YulIdentifier","src":"19041:4:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19031:3:40"},"nodeType":"YulFunctionCall","src":"19031:15:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19021:6:40"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18911:4:40","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"18917:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18927:6:40","type":""}],"src":"18883:169:40"},{"body":{"nodeType":"YulBlock","src":"19138:214:40","statements":[{"nodeType":"YulAssignment","src":"19271:37:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19298:4:40"},{"name":"len","nodeType":"YulIdentifier","src":"19304:3:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"19279:18:40"},"nodeType":"YulFunctionCall","src":"19279:29:40"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19271:4:40"}]},{"nodeType":"YulAssignment","src":"19317:29:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19328:4:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19338:1:40","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"19341:3:40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19334:3:40"},"nodeType":"YulFunctionCall","src":"19334:11:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19325:2:40"},"nodeType":"YulFunctionCall","src":"19325:21:40"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19317:4:40"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19119:4:40","type":""},{"name":"len","nodeType":"YulTypedName","src":"19125:3:40","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19133:4:40","type":""}],"src":"19057:295:40"},{"body":{"nodeType":"YulBlock","src":"19449:1303:40","statements":[{"nodeType":"YulVariableDeclaration","src":"19460:51:40","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19507:3:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19474:32:40"},"nodeType":"YulFunctionCall","src":"19474:37:40"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19464:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"19596:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19598:16:40"},"nodeType":"YulFunctionCall","src":"19598:18:40"},"nodeType":"YulExpressionStatement","src":"19598:18:40"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19568:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"19576:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19565:2:40"},"nodeType":"YulFunctionCall","src":"19565:30:40"},"nodeType":"YulIf","src":"19562:56:40"},{"nodeType":"YulVariableDeclaration","src":"19628:52:40","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19674:4:40"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19668:5:40"},"nodeType":"YulFunctionCall","src":"19668:11:40"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19642:25:40"},"nodeType":"YulFunctionCall","src":"19642:38:40"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"19632:6:40","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19773:4:40"},{"name":"oldLen","nodeType":"YulIdentifier","src":"19779:6:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"19787:6:40"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"19727:45:40"},"nodeType":"YulFunctionCall","src":"19727:67:40"},"nodeType":"YulExpressionStatement","src":"19727:67:40"},{"nodeType":"YulVariableDeclaration","src":"19804:18:40","value":{"kind":"number","nodeType":"YulLiteral","src":"19821:1:40","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19808:9:40","type":""}]},{"nodeType":"YulAssignment","src":"19832:17:40","value":{"kind":"number","nodeType":"YulLiteral","src":"19845:4:40","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19832:9:40"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19896:611:40","statements":[{"nodeType":"YulVariableDeclaration","src":"19910:37:40","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19929:6:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19941:4:40","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19937:3:40"},"nodeType":"YulFunctionCall","src":"19937:9:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19925:3:40"},"nodeType":"YulFunctionCall","src":"19925:22:40"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"19914:7:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19961:51:40","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20007:4:40"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"19975:31:40"},"nodeType":"YulFunctionCall","src":"19975:37:40"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19965:6:40","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20025:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"20034:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20029:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"20093:163:40","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20118:6:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20136:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20141:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20132:3:40"},"nodeType":"YulFunctionCall","src":"20132:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20126:5:40"},"nodeType":"YulFunctionCall","src":"20126:26:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20111:6:40"},"nodeType":"YulFunctionCall","src":"20111:42:40"},"nodeType":"YulExpressionStatement","src":"20111:42:40"},{"nodeType":"YulAssignment","src":"20170:24:40","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20184:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"20192:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20180:3:40"},"nodeType":"YulFunctionCall","src":"20180:14:40"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20170:6:40"}]},{"nodeType":"YulAssignment","src":"20211:31:40","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20228:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20239:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20224:3:40"},"nodeType":"YulFunctionCall","src":"20224:18:40"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20211:9:40"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20059:1:40"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20062:7:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20056:2:40"},"nodeType":"YulFunctionCall","src":"20056:14:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20071:21:40","statements":[{"nodeType":"YulAssignment","src":"20073:17:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20082:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"20085:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20078:3:40"},"nodeType":"YulFunctionCall","src":"20078:12:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20073:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"20052:3:40","statements":[]},"src":"20048:208:40"},{"body":{"nodeType":"YulBlock","src":"20292:156:40","statements":[{"nodeType":"YulVariableDeclaration","src":"20310:43:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20337:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20342:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20333:3:40"},"nodeType":"YulFunctionCall","src":"20333:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20327:5:40"},"nodeType":"YulFunctionCall","src":"20327:26:40"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20314:9:40","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20377:6:40"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20404:9:40"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20419:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"20427:4:40","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20415:3:40"},"nodeType":"YulFunctionCall","src":"20415:17:40"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20385:18:40"},"nodeType":"YulFunctionCall","src":"20385:48:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20370:6:40"},"nodeType":"YulFunctionCall","src":"20370:64:40"},"nodeType":"YulExpressionStatement","src":"20370:64:40"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20275:7:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"20284:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20272:2:40"},"nodeType":"YulFunctionCall","src":"20272:19:40"},"nodeType":"YulIf","src":"20269:179:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20468:4:40"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20482:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"20490:1:40","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20478:3:40"},"nodeType":"YulFunctionCall","src":"20478:14:40"},{"kind":"number","nodeType":"YulLiteral","src":"20494:1:40","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20474:3:40"},"nodeType":"YulFunctionCall","src":"20474:22:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20461:6:40"},"nodeType":"YulFunctionCall","src":"20461:36:40"},"nodeType":"YulExpressionStatement","src":"20461:36:40"}]},"nodeType":"YulCase","src":"19889:618:40","value":{"kind":"number","nodeType":"YulLiteral","src":"19894:1:40","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20524:222:40","statements":[{"nodeType":"YulVariableDeclaration","src":"20538:14:40","value":{"kind":"number","nodeType":"YulLiteral","src":"20551:1:40","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20542:5:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"20575:67:40","statements":[{"nodeType":"YulAssignment","src":"20593:35:40","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20612:3:40"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20617:9:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20608:3:40"},"nodeType":"YulFunctionCall","src":"20608:19:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20602:5:40"},"nodeType":"YulFunctionCall","src":"20602:26:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20593:5:40"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20568:6:40"},"nodeType":"YulIf","src":"20565:77:40"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20662:4:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20721:5:40"},{"name":"newLen","nodeType":"YulIdentifier","src":"20728:6:40"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"20668:52:40"},"nodeType":"YulFunctionCall","src":"20668:67:40"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20655:6:40"},"nodeType":"YulFunctionCall","src":"20655:81:40"},"nodeType":"YulExpressionStatement","src":"20655:81:40"}]},"nodeType":"YulCase","src":"20516:230:40","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19869:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"19877:2:40","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19866:2:40"},"nodeType":"YulFunctionCall","src":"19866:14:40"},"nodeType":"YulSwitch","src":"19859:887:40"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19438:4:40","type":""},{"name":"src","nodeType":"YulTypedName","src":"19444:3:40","type":""}],"src":"19357:1395:40"},{"body":{"nodeType":"YulBlock","src":"20884:206:40","statements":[{"nodeType":"YulAssignment","src":"20894:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20906:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20917:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20902:3:40"},"nodeType":"YulFunctionCall","src":"20902:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20894:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20974:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20987:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"20998:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20983:3:40"},"nodeType":"YulFunctionCall","src":"20983:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20930:43:40"},"nodeType":"YulFunctionCall","src":"20930:71:40"},"nodeType":"YulExpressionStatement","src":"20930:71:40"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21055:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21068:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"21079:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21064:3:40"},"nodeType":"YulFunctionCall","src":"21064:18:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21011:43:40"},"nodeType":"YulFunctionCall","src":"21011:72:40"},"nodeType":"YulExpressionStatement","src":"21011:72:40"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20848:9:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20860:6:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20868:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20879:4:40","type":""}],"src":"20758:332:40"},{"body":{"nodeType":"YulBlock","src":"21124:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21141:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21144:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21134:6:40"},"nodeType":"YulFunctionCall","src":"21134:88:40"},"nodeType":"YulExpressionStatement","src":"21134:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21238:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21241:4:40","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21231:6:40"},"nodeType":"YulFunctionCall","src":"21231:15:40"},"nodeType":"YulExpressionStatement","src":"21231:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21262:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21265:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21255:6:40"},"nodeType":"YulFunctionCall","src":"21255:15:40"},"nodeType":"YulExpressionStatement","src":"21255:15:40"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21096:180:40"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063d204c45e146102f0578063e985e9c51461030c578063f2fde38b1461033c5761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611ad6565b610358565b6040516101379190611b1e565b60405180910390f35b61014861036a565b6040516101559190611bc9565b60405180910390f35b61017860048036038101906101739190611c21565b6103fc565b6040516101859190611c8f565b60405180910390f35b6101a860048036038101906101a39190611cd6565b610418565b005b6101c460048036038101906101bf9190611d16565b61042e565b005b6101e060048036038101906101db9190611d16565b610530565b005b6101fc60048036038101906101f79190611c21565b610550565b6040516102099190611c8f565b60405180910390f35b61022c60048036038101906102279190611d69565b610562565b6040516102399190611da5565b60405180910390f35b61024a61061c565b005b610254610630565b6040516102619190611c8f565b60405180910390f35b61027261065a565b60405161027f9190611bc9565b60405180910390f35b6102a2600480360381019061029d9190611dec565b6106ec565b005b6102be60048036038101906102b99190611f61565b610702565b005b6102da60048036038101906102d59190611c21565b61071f565b6040516102e79190611bc9565b60405180910390f35b61030a60048036038101906103059190612085565b610731565b005b610326600480360381019061032191906120e1565b61076d565b6040516103339190611b1e565b60405180910390f35b61035660048036038101906103519190611d69565b610801565b005b600061036382610887565b9050919050565b60606000805461037990612150565b80601f01602080910402602001604051908101604052809291908181526020018280546103a590612150565b80156103f25780601f106103c7576101008083540402835291602001916103f2565b820191906000526020600020905b8154815290600101906020018083116103d557829003601f168201915b5050505050905090565b6000610407826108e8565b5061041182610970565b9050919050565b61042a82826104256109ad565b6109b5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a05760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104979190611c8f565b60405180910390fd5b60006104b483836104af6109ad565b6109c7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461052a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052193929190612181565b60405180910390fd5b50505050565b61054b83838360405180602001604052806000815250610702565b505050565b600061055b826108e8565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d55760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105cc9190611c8f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610624610be1565b61062e6000610c68565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461066990612150565b80601f016020809104026020016040519081016040528092919081815260200182805461069590612150565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b5050505050905090565b6106fe6106f76109ad565b8383610d2e565b5050565b61070d84848461042e565b61071984848484610e9d565b50505050565b606061072a82611054565b9050919050565b610739610be1565b60006008600081548092919061074e906121e7565b91905055905061075e8382611167565b6107688183611185565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610809610be1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361087b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108729190611c8f565b60405180910390fd5b61088481610c68565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108e157506108e0826111e1565b5b9050919050565b6000806108f4836112c3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096757826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161095e9190611da5565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109c28383836001611300565b505050565b6000806109d3846112c3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a1557610a148184866114c5565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aa657610a57600085600080611300565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b29576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610be96109ad565b73ffffffffffffffffffffffffffffffffffffffff16610c07610630565b73ffffffffffffffffffffffffffffffffffffffff1614610c6657610c2a6109ad565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c5d9190611c8f565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d9f57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d969190611c8f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e909190611b1e565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561104e578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ee16109ad565b8685856040518563ffffffff1660e01b8152600401610f039493929190612284565b6020604051808303816000875af1925050508015610f3f57506040513d601f19601f82011682018060405250810190610f3c91906122e5565b60015b610fc3573d8060008114610f6f576040519150601f19603f3d011682016040523d82523d6000602084013e610f74565b606091505b506000815103610fbb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fb29190611c8f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110439190611c8f565b60405180910390fd5b505b50505050565b606061105f826108e8565b50600060066000848152602001908152602001600020805461108090612150565b80601f01602080910402602001604051908101604052809291908181526020018280546110ac90612150565b80156110f95780601f106110ce576101008083540402835291602001916110f9565b820191906000526020600020905b8154815290600101906020018083116110dc57829003601f168201915b50505050509050600061110a611589565b9050600081510361111f578192505050611162565b60008251111561115457808260405160200161113c92919061234e565b60405160208183030381529060405292505050611162565b61115d846115a0565b925050505b919050565b611181828260405180602001604052806000815250611609565b5050565b806006600084815260200190815260200160002090816111a5919061251e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111d59190611da5565b60405180910390a15050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112ac57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112bc57506112bb82611625565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113395750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561146d576000611349846108e8565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113b457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113c757506113c5818461076d565b155b1561140957826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114009190611c8f565b60405180910390fd5b811561146b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114d083838361168f565b61158457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361154557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161153c9190611da5565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161157b9291906125f0565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b60606115ab826108e8565b5060006115b6611589565b905060008151116115d65760405180602001604052806000815250611601565b806115e084611750565b6040516020016115f192919061234e565b6040516020818303038152906040525b915050919050565b611613838361181e565b6116206000848484610e9d565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561174757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806117085750611707848461076d565b5b8061174657508273ffffffffffffffffffffffffffffffffffffffff1661172e83610970565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60606000600161175f84611917565b01905060008167ffffffffffffffff81111561177e5761177d611e36565b5b6040519080825280601f01601f1916602001820160405280156117b05781602001600182028036833780820191505090505b509050600082602001820190505b600115611813578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161180757611806612619565b5b049450600085036117be575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118905760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118879190611c8f565b60405180910390fd5b600061189e838360006109c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119125760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016119099190611c8f565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611975577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161196b5761196a612619565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106119b2576d04ee2d6d415b85acef810000000083816119a8576119a7612619565b5b0492506020810190505b662386f26fc1000083106119e157662386f26fc1000083816119d7576119d6612619565b5b0492506010810190505b6305f5e1008310611a0a576305f5e1008381611a00576119ff612619565b5b0492506008810190505b6127108310611a2f576127108381611a2557611a24612619565b5b0492506004810190505b60648310611a525760648381611a4857611a47612619565b5b0492506002810190505b600a8310611a61576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ab381611a7e565b8114611abe57600080fd5b50565b600081359050611ad081611aaa565b92915050565b600060208284031215611aec57611aeb611a74565b5b6000611afa84828501611ac1565b91505092915050565b60008115159050919050565b611b1881611b03565b82525050565b6000602082019050611b336000830184611b0f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b73578082015181840152602081019050611b58565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b9b82611b39565b611ba58185611b44565b9350611bb5818560208601611b55565b611bbe81611b7f565b840191505092915050565b60006020820190508181036000830152611be38184611b90565b905092915050565b6000819050919050565b611bfe81611beb565b8114611c0957600080fd5b50565b600081359050611c1b81611bf5565b92915050565b600060208284031215611c3757611c36611a74565b5b6000611c4584828501611c0c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c7982611c4e565b9050919050565b611c8981611c6e565b82525050565b6000602082019050611ca46000830184611c80565b92915050565b611cb381611c6e565b8114611cbe57600080fd5b50565b600081359050611cd081611caa565b92915050565b60008060408385031215611ced57611cec611a74565b5b6000611cfb85828601611cc1565b9250506020611d0c85828601611c0c565b9150509250929050565b600080600060608486031215611d2f57611d2e611a74565b5b6000611d3d86828701611cc1565b9350506020611d4e86828701611cc1565b9250506040611d5f86828701611c0c565b9150509250925092565b600060208284031215611d7f57611d7e611a74565b5b6000611d8d84828501611cc1565b91505092915050565b611d9f81611beb565b82525050565b6000602082019050611dba6000830184611d96565b92915050565b611dc981611b03565b8114611dd457600080fd5b50565b600081359050611de681611dc0565b92915050565b60008060408385031215611e0357611e02611a74565b5b6000611e1185828601611cc1565b9250506020611e2285828601611dd7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e6e82611b7f565b810181811067ffffffffffffffff82111715611e8d57611e8c611e36565b5b80604052505050565b6000611ea0611a6a565b9050611eac8282611e65565b919050565b600067ffffffffffffffff821115611ecc57611ecb611e36565b5b611ed582611b7f565b9050602081019050919050565b82818337600083830152505050565b6000611f04611eff84611eb1565b611e96565b905082815260208101848484011115611f2057611f1f611e31565b5b611f2b848285611ee2565b509392505050565b600082601f830112611f4857611f47611e2c565b5b8135611f58848260208601611ef1565b91505092915050565b60008060008060808587031215611f7b57611f7a611a74565b5b6000611f8987828801611cc1565b9450506020611f9a87828801611cc1565b9350506040611fab87828801611c0c565b925050606085013567ffffffffffffffff811115611fcc57611fcb611a79565b5b611fd887828801611f33565b91505092959194509250565b600067ffffffffffffffff821115611fff57611ffe611e36565b5b61200882611b7f565b9050602081019050919050565b600061202861202384611fe4565b611e96565b90508281526020810184848401111561204457612043611e31565b5b61204f848285611ee2565b509392505050565b600082601f83011261206c5761206b611e2c565b5b813561207c848260208601612015565b91505092915050565b6000806040838503121561209c5761209b611a74565b5b60006120aa85828601611cc1565b925050602083013567ffffffffffffffff8111156120cb576120ca611a79565b5b6120d785828601612057565b9150509250929050565b600080604083850312156120f8576120f7611a74565b5b600061210685828601611cc1565b925050602061211785828601611cc1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061216857607f821691505b60208210810361217b5761217a612121565b5b50919050565b60006060820190506121966000830186611c80565b6121a36020830185611d96565b6121b06040830184611c80565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121f282611beb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612224576122236121b8565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006122568261222f565b612260818561223a565b9350612270818560208601611b55565b61227981611b7f565b840191505092915050565b60006080820190506122996000830187611c80565b6122a66020830186611c80565b6122b36040830185611d96565b81810360608301526122c5818461224b565b905095945050505050565b6000815190506122df81611aaa565b92915050565b6000602082840312156122fb576122fa611a74565b5b6000612309848285016122d0565b91505092915050565b600081905092915050565b600061232882611b39565b6123328185612312565b9350612342818560208601611b55565b80840191505092915050565b600061235a828561231d565b9150612366828461231d565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026123d47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612397565b6123de8683612397565b95508019841693508086168417925050509392505050565b6000819050919050565b600061241b61241661241184611beb565b6123f6565b611beb565b9050919050565b6000819050919050565b61243583612400565b61244961244182612422565b8484546123a4565b825550505050565b600090565b61245e612451565b61246981848461242c565b505050565b5b8181101561248d57612482600082612456565b60018101905061246f565b5050565b601f8211156124d2576124a381612372565b6124ac84612387565b810160208510156124bb578190505b6124cf6124c785612387565b83018261246e565b50505b505050565b600082821c905092915050565b60006124f5600019846008026124d7565b1980831691505092915050565b600061250e83836124e4565b9150826002028217905092915050565b61252782611b39565b67ffffffffffffffff8111156125405761253f611e36565b5b61254a8254612150565b612555828285612491565b600060209050601f8311600181146125885760008415612576578287015190505b6125808582612502565b8655506125e8565b601f19841661259686612372565b60005b828110156125be57848901518255600182019150602085019450602081019050612599565b868310156125db57848901516125d7601f8916826124e4565b8355505b6001600288020188555050505b505050505050565b60006040820190506126056000830185611c80565b6126126020830184611d96565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212207794a6a3543bc43226cd259f1c987b73b6d1f865d94fac8b3633cff89d4fbea464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP3 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x411 DUP3 PUSH2 0x970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x425 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP4 DUP4 PUSH2 0x4AF PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x702 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xC68 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x6F7 PUSH2 0x9AD JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE9D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72A DUP3 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x74E SWAP1 PUSH2 0x21E7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x75E DUP4 DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP4 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x809 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x884 DUP2 PUSH2 0xC68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8E1 JUMPI POP PUSH2 0x8E0 DUP3 PUSH2 0x11E1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F4 DUP4 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x967 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1300 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D3 DUP5 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA15 JUMPI PUSH2 0xA14 DUP2 DUP5 DUP7 PUSH2 0x14C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA6 JUMPI PUSH2 0xA57 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB29 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC07 PUSH2 0x630 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC66 JUMPI PUSH2 0xC2A PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x104E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEE1 PUSH2 0x9AD JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF03 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF3F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFC3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFBB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x104C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105F DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1080 SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AC SWAP1 PUSH2 0x2150 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x110A PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x111F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1154 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x113C SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x115D DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1181 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1609 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x12AC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12BC JUMPI POP PUSH2 0x12BB DUP3 PUSH2 0x1625 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1339 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 PUSH2 0x1349 DUP5 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13C7 JUMPI POP PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x76D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1409 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x146B JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14D0 DUP4 DUP4 DUP4 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1584 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15AB DUP3 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x15B6 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1601 JUMP JUMPDEST DUP1 PUSH2 0x15E0 DUP5 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15F1 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1613 DUP4 DUP4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x1620 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1747 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1708 JUMPI POP PUSH2 0x1707 DUP5 DUP5 PUSH2 0x76D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1746 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172E DUP4 PUSH2 0x970 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x175F DUP5 PUSH2 0x1917 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1813 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x17BE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1890 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1887 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189E DUP4 DUP4 PUSH1 0x0 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1912 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1909 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1975 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x19B2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x19A8 JUMPI PUSH2 0x19A7 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19E1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19D7 JUMPI PUSH2 0x19D6 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A0A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A2F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A25 JUMPI PUSH2 0x1A24 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A52 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x2619 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A61 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x1A7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD0 DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B18 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9B DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x1BA5 DUP2 DUP6 PUSH2 0x1B44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BB5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE3 DUP2 DUP5 PUSH2 0x1B90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFE DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1B DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH2 0x1C36 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C45 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C79 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x1C6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1C6E JUMP JUMPDEST DUP2 EQ PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CD0 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CFB DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D0C DUP6 DUP3 DUP7 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D3D DUP7 DUP3 DUP8 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D4E DUP7 DUP3 DUP8 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D5F DUP7 DUP3 DUP8 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP5 DUP3 DUP6 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC9 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE6 DUP2 PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E11 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E22 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E6E DUP3 PUSH2 0x1B7F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA0 PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAC DUP3 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECB PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED5 DUP3 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F04 PUSH2 0x1EFF DUP5 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST PUSH2 0x1F2B DUP5 DUP3 DUP6 PUSH2 0x1EE2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F58 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F7B JUMPI PUSH2 0x1F7A PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F89 DUP8 DUP3 DUP9 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F9A DUP8 DUP3 DUP9 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1FAB DUP8 DUP3 DUP9 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST PUSH2 0x1FD8 DUP8 DUP3 DUP9 ADD PUSH2 0x1F33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFE PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x2008 DUP3 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 PUSH2 0x2023 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST PUSH2 0x204F DUP5 DUP3 DUP6 PUSH2 0x1EE2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x207C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1A79 JUMP JUMPDEST JUMPDEST PUSH2 0x20D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F8 JUMPI PUSH2 0x20F7 PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2106 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2117 DUP6 DUP3 DUP7 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2168 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x217B JUMPI PUSH2 0x217A PUSH2 0x2121 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2196 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x21A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x21B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21F2 DUP3 PUSH2 0x1BEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2256 DUP3 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x2260 DUP2 DUP6 PUSH2 0x223A JUMP JUMPDEST SWAP4 POP PUSH2 0x2270 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x2279 DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2299 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x22A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x22B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 DUP5 PUSH2 0x224B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22DF DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FB JUMPI PUSH2 0x22FA PUSH2 0x1A74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP5 DUP3 DUP6 ADD PUSH2 0x22D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x2332 DUP2 DUP6 PUSH2 0x2312 JUMP JUMPDEST SWAP4 POP PUSH2 0x2342 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235A DUP3 DUP6 PUSH2 0x231D JUMP JUMPDEST SWAP2 POP PUSH2 0x2366 DUP3 DUP5 PUSH2 0x231D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x23D4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x23DE DUP7 DUP4 PUSH2 0x2397 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241B PUSH2 0x2416 PUSH2 0x2411 DUP5 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2435 DUP4 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0x2441 DUP3 PUSH2 0x2422 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x23A4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x245E PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x2469 DUP2 DUP5 DUP5 PUSH2 0x242C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x248D JUMPI PUSH2 0x2482 PUSH1 0x0 DUP3 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x246F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24A3 DUP2 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x24AC DUP5 PUSH2 0x2387 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x24BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x24CF PUSH2 0x24C7 DUP6 PUSH2 0x2387 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x246E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x24D7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250E DUP4 DUP4 PUSH2 0x24E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2527 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x253F PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST PUSH2 0x254A DUP3 SLOAD PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x2555 DUP3 DUP3 DUP6 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2588 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2576 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2580 DUP6 DUP3 PUSH2 0x2502 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2596 DUP7 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25BE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2599 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x25DB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x25D7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x24E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2605 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x2612 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x94A6A3543BC43226CD259F1C987B73B6D1F865D94FAC8B36 CALLER 0xCF 0xF8 SWAP14 0x4F 0xBE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"307:881:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;981:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;786:189:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;529:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;981:205:39;1116:4;1143:36;1167:11;1143:23;:36::i;:::-;1136:43;;981:205;;;:::o;2365:89:17:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:17:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;786:189:39:-;909:13;945:23;960:7;945:14;:23::i;:::-;938:30;;786:189;;;:::o;529:183::-;1531:13:0;:11;:13::i;:::-;605:15:39::1;623:12;;:14;;;;;;;;;:::i;:::-;;;;;605:32;;647:22;657:2;661:7;647:9;:22::i;:::-;679:26;692:7;701:3;679:12;:26::i;:::-;595:117;529:183:::0;;:::o;3928:153:17:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;937:207:20:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:17:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:22:-;709:7;735:10;728:17;;656:96;:::o;14418:120:17:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:17:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1210:593:20:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;10633:100:17:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:20:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;1561:300:17:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;762:146:31:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;6376:272:17:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;637:698:27:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;9955:327:17:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;12214:916:33:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:40:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:654::-;11174:6;11182;11231:2;11219:9;11210:7;11206:23;11202:32;11199:119;;;11237:79;;:::i;:::-;11199:119;11357:1;11382:53;11427:7;11418:6;11407:9;11403:22;11382:53;:::i;:::-;11372:63;;11328:117;11512:2;11501:9;11497:18;11484:32;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:63;11725:7;11716:6;11705:9;11701:22;11670:63;:::i;:::-;11660:73;;11455:288;11096:654;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:442::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;13029:72;13097:2;13086:9;13082:18;13073:6;13029:72;:::i;:::-;13111;13179:2;13168:9;13164:18;13155:6;13111:72;:::i;:::-;12748:442;;;;;;:::o;13196:180::-;13244:77;13241:1;13234:88;13341:4;13338:1;13331:15;13365:4;13362:1;13355:15;13382:233;13421:3;13444:24;13462:5;13444:24;:::i;:::-;13435:33;;13490:66;13483:5;13480:77;13477:103;;13560:18;;:::i;:::-;13477:103;13607:1;13600:5;13596:13;13589:20;;13382:233;;;:::o;13621:98::-;13672:6;13706:5;13700:12;13690:22;;13621:98;;;:::o;13725:168::-;13808:11;13842:6;13837:3;13830:19;13882:4;13877:3;13873:14;13858:29;;13725:168;;;;:::o;13899:373::-;13985:3;14013:38;14045:5;14013:38;:::i;:::-;14067:70;14130:6;14125:3;14067:70;:::i;:::-;14060:77;;14146:65;14204:6;14199:3;14192:4;14185:5;14181:16;14146:65;:::i;:::-;14236:29;14258:6;14236:29;:::i;:::-;14231:3;14227:39;14220:46;;13989:283;13899:373;;;;:::o;14278:640::-;14473:4;14511:3;14500:9;14496:19;14488:27;;14525:71;14593:1;14582:9;14578:17;14569:6;14525:71;:::i;:::-;14606:72;14674:2;14663:9;14659:18;14650:6;14606:72;:::i;:::-;14688;14756:2;14745:9;14741:18;14732:6;14688:72;:::i;:::-;14807:9;14801:4;14797:20;14792:2;14781:9;14777:18;14770:48;14835:76;14906:4;14897:6;14835:76;:::i;:::-;14827:84;;14278:640;;;;;;;:::o;14924:141::-;14980:5;15011:6;15005:13;14996:22;;15027:32;15053:5;15027:32;:::i;:::-;14924:141;;;;:::o;15071:349::-;15140:6;15189:2;15177:9;15168:7;15164:23;15160:32;15157:119;;;15195:79;;:::i;:::-;15157:119;15315:1;15340:63;15395:7;15386:6;15375:9;15371:22;15340:63;:::i;:::-;15330:73;;15286:127;15071:349;;;;:::o;15426:148::-;15528:11;15565:3;15550:18;;15426:148;;;;:::o;15580:390::-;15686:3;15714:39;15747:5;15714:39;:::i;:::-;15769:89;15851:6;15846:3;15769:89;:::i;:::-;15762:96;;15867:65;15925:6;15920:3;15913:4;15906:5;15902:16;15867:65;:::i;:::-;15957:6;15952:3;15948:16;15941:23;;15690:280;15580:390;;;;:::o;15976:435::-;16156:3;16178:95;16269:3;16260:6;16178:95;:::i;:::-;16171:102;;16290:95;16381:3;16372:6;16290:95;:::i;:::-;16283:102;;16402:3;16395:10;;15976:435;;;;;:::o;16417:141::-;16466:4;16489:3;16481:11;;16512:3;16509:1;16502:14;16546:4;16543:1;16533:18;16525:26;;16417:141;;;:::o;16564:93::-;16601:6;16648:2;16643;16636:5;16632:14;16628:23;16618:33;;16564:93;;;:::o;16663:107::-;16707:8;16757:5;16751:4;16747:16;16726:37;;16663:107;;;;:::o;16776:393::-;16845:6;16895:1;16883:10;16879:18;16918:97;16948:66;16937:9;16918:97;:::i;:::-;17036:39;17066:8;17055:9;17036:39;:::i;:::-;17024:51;;17108:4;17104:9;17097:5;17093:21;17084:30;;17157:4;17147:8;17143:19;17136:5;17133:30;17123:40;;16852:317;;16776:393;;;;;:::o;17175:60::-;17203:3;17224:5;17217:12;;17175:60;;;:::o;17241:142::-;17291:9;17324:53;17342:34;17351:24;17369:5;17351:24;:::i;:::-;17342:34;:::i;:::-;17324:53;:::i;:::-;17311:66;;17241:142;;;:::o;17389:75::-;17432:3;17453:5;17446:12;;17389:75;;;:::o;17470:269::-;17580:39;17611:7;17580:39;:::i;:::-;17641:91;17690:41;17714:16;17690:41;:::i;:::-;17682:6;17675:4;17669:11;17641:91;:::i;:::-;17635:4;17628:105;17546:193;17470:269;;;:::o;17745:73::-;17790:3;17745:73;:::o;17824:189::-;17901:32;;:::i;:::-;17942:65;18000:6;17992;17986:4;17942:65;:::i;:::-;17877:136;17824:189;;:::o;18019:186::-;18079:120;18096:3;18089:5;18086:14;18079:120;;;18150:39;18187:1;18180:5;18150:39;:::i;:::-;18123:1;18116:5;18112:13;18103:22;;18079:120;;;18019:186;;:::o;18211:543::-;18312:2;18307:3;18304:11;18301:446;;;18346:38;18378:5;18346:38;:::i;:::-;18430:29;18448:10;18430:29;:::i;:::-;18420:8;18416:44;18613:2;18601:10;18598:18;18595:49;;;18634:8;18619:23;;18595:49;18657:80;18713:22;18731:3;18713:22;:::i;:::-;18703:8;18699:37;18686:11;18657:80;:::i;:::-;18316:431;;18301:446;18211:543;;;:::o;18760:117::-;18814:8;18864:5;18858:4;18854:16;18833:37;;18760:117;;;;:::o;18883:169::-;18927:6;18960:51;19008:1;19004:6;18996:5;18993:1;18989:13;18960:51;:::i;:::-;18956:56;19041:4;19035;19031:15;19021:25;;18934:118;18883:169;;;;:::o;19057:295::-;19133:4;19279:29;19304:3;19298:4;19279:29;:::i;:::-;19271:37;;19341:3;19338:1;19334:11;19328:4;19325:21;19317:29;;19057:295;;;;:::o;19357:1395::-;19474:37;19507:3;19474:37;:::i;:::-;19576:18;19568:6;19565:30;19562:56;;;19598:18;;:::i;:::-;19562:56;19642:38;19674:4;19668:11;19642:38;:::i;:::-;19727:67;19787:6;19779;19773:4;19727:67;:::i;:::-;19821:1;19845:4;19832:17;;19877:2;19869:6;19866:14;19894:1;19889:618;;;;20551:1;20568:6;20565:77;;;20617:9;20612:3;20608:19;20602:26;20593:35;;20565:77;20668:67;20728:6;20721:5;20668:67;:::i;:::-;20662:4;20655:81;20524:222;19859:887;;19889:618;19941:4;19937:9;19929:6;19925:22;19975:37;20007:4;19975:37;:::i;:::-;20034:1;20048:208;20062:7;20059:1;20056:14;20048:208;;;20141:9;20136:3;20132:19;20126:26;20118:6;20111:42;20192:1;20184:6;20180:14;20170:24;;20239:2;20228:9;20224:18;20211:31;;20085:4;20082:1;20078:12;20073:17;;20048:208;;;20284:6;20275:7;20272:19;20269:179;;;20342:9;20337:3;20333:19;20327:26;20385:48;20427:4;20419:6;20415:17;20404:9;20385:48;:::i;:::-;20377:6;20370:64;20292:156;20269:179;20494:1;20490;20482:6;20478:14;20474:22;20468:4;20461:36;19896:611;;;19859:887;;19449:1303;;;19357:1395;;:::o;20758:332::-;20879:4;20917:2;20906:9;20902:18;20894:26;;20930:71;20998:1;20987:9;20983:17;20974:6;20930:71;:::i;:::-;21011:72;21079:2;21068:9;21064:18;21055:6;21011:72;:::i;:::-;20758:332;;;;;:::o;21096:180::-;21144:77;21141:1;21134:88;21241:4;21238:1;21231:15;21265:4;21262:1;21255:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeMint(address,string)":"d204c45e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jeffrey@jeffreyallanbrown.com\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolymathSigils.sol\":\"PolymathSigils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/PolymathSigils.sol\":{\"keccak256\":\"0xd1c217c48bf4db6473401e2d973cf567edf380d0de510ef0f29bf936cac779ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc6f036c72ac2b24567bd020b6dcfc119bb784c3d3b0ab9748df99b077074839\",\"dweb:/ipfs/QmWtNCkrEJqriZtdoT6ayDznTnjqmEYAeL2TjyUcnRcC3Y\"]}},\"version\":1}"}}}}}